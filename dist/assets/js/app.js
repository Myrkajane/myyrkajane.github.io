/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/assets/js/app.js":
/*!******************************!*\
  !*** ./src/assets/js/app.js ***!
  \******************************/
/***/ (function() {

eval("new Swiper(\".swiper-container\", {\n  pagination: {\n    el: \".swiper-pagination\",\n  },\n});\n\nconst qrBtn = document.getElementById(\"qrBtn\");\nconst barcodeBtn = document.getElementById(\"barcodeBtn\");\nconst qr = document.getElementById(\"qrCode\");\nconst barcode = document.getElementById(\"barCode\");\nconst btnCover = document.getElementById(\"btnCover\");\nconst updateDate = document.getElementById(\"update_time\");\nconst passportFront = document.getElementById(\"passport_front\");\nconst passportBack = document.getElementById(\"passport_back\");\nconst qrButton = document.getElementById(\"qr_button\");\nconst barButton = document.getElementById(\"bar_button\");\nconst pswButton = document.querySelectorAll(\".password_number\");\nconst pswCircles = document.querySelectorAll(\".password_circle\");\nconst password = document.getElementById(\"password\");\nlet passwordNum = 0;\nconsole.log(password);\nconsole.log(pswCircles);\n\npswButton.forEach((element) => {\n  element.addEventListener(\"click\", (event) => {\n    pswCirclesCheck();\n    passwordNum++;\n  });\n});\n\nfunction pswCirclesCheck() {\n  if (passwordNum < 3) {\n    pswCircles[passwordNum].classList.add(\"black\");\n  } else {\n    pswCircles[passwordNum].classList.add(\"black\");\n    setTimeout(function () {\n      password.style.display = \"none\";\n    }, 1000);\n  }\n}\n\n$(\"body\")\n  .css(\"top\", -document.documentElement.scrollTop + \"px\")\n  .addClass(\"noscroll\");\n\nif ($(document).height() > $(window).height()) {\n  var scrollTop = $(\"html\").scrollTop()\n    ? $(\"html\").scrollTop()\n    : $(\"body\").scrollTop(); // Works for Chrome, Firefox, IE...\n  $(\"html\").addClass(\"noscroll\").css(\"top\", -scrollTop);\n}\n\npassportFront.addEventListener(\"click\", () => {\n  passportFront.classList.add(\"passport_frontTransform\");\n  passportBack.classList.add(\"passport_backTransform\");\n\n  qrButton.addEventListener(\"click\", (event) => {\n    event.stopPropagation();\n  });\n\n  barButton.addEventListener(\"click\", (event) => {\n    event.stopPropagation();\n  });\n});\n\npassportBack.addEventListener(\"click\", () => {\n  passportFront.classList.remove(\"passport_frontTransform\");\n  passportBack.classList.remove(\"passport_backTransform\");\n});\n\nconsole.log(passportFront);\n\nupdateDate.textContent = updateDateCounter();\n\nfunction updateDateCounter() {\n  let day = document.lastModified.substring(3, 5);\n\n  let time = document.lastModified.substring(10, 16);\n\n  let updateDateTime = `${day} квiтня 2022 о ${time}`;\n  return updateDateTime;\n}\n\nqrBtn.addEventListener(\"click\", qrBtnColor);\nbarcodeBtn.addEventListener(\"click\", barcodeBtnColor);\n\nfunction qrBtnColor() {\n  qrBtn.classList.add(\"active\");\n  barcodeBtn.classList.remove(\"active\");\n  barcode.classList.remove(\"active\");\n  qr.classList.add(\"active\");\n  if (btnCover.classList.contains(\"buttons-barcode\")) {\n    btnCover.classList.remove(\"buttons-barcode\");\n  }\n  btnCover.classList.add(\"buttons-qrcode\");\n}\n\nfunction barcodeBtnColor() {\n  qrBtn.classList.remove(\"active\");\n  barcodeBtn.classList.add(\"active\");\n  barcode.classList.add(\"active\");\n  qr.classList.remove(\"active\");\n  if (btnCover.classList.contains(\"buttons-qrcode\")) {\n    btnCover.classList.remove(\"buttons-qrcode\");\n  }\n  btnCover.classList.remove(\"buttons-qrcode\");\n  btnCover.classList.add(\"buttons-barcode\");\n}\n\n\n//# sourceURL=webpack://brainscloud/./src/assets/js/app.js?");

/***/ }),

/***/ "./src/assets/js/swiper.js":
/*!*********************************!*\
  !*** ./src/assets/js/swiper.js ***!
  \*********************************/
/***/ (function(module) {

eval("/**\n * Swiper 8.0.7\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2022 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: March 4, 2022\n */\n\n!(function (e, t) {\n   true\n    ? (module.exports = t())\n    : 0;\n})(this, function () {\n  \"use strict\";\n  function e(e) {\n    return (\n      null !== e &&\n      \"object\" == typeof e &&\n      \"constructor\" in e &&\n      e.constructor === Object\n    );\n  }\n  function t(s, a) {\n    void 0 === s && (s = {}),\n      void 0 === a && (a = {}),\n      Object.keys(a).forEach((i) => {\n        void 0 === s[i]\n          ? (s[i] = a[i])\n          : e(a[i]) && e(s[i]) && Object.keys(a[i]).length > 0 && t(s[i], a[i]);\n      });\n  }\n  const s = {\n    body: {},\n    addEventListener() {},\n    removeEventListener() {},\n    activeElement: { blur() {}, nodeName: \"\" },\n    querySelector: () => null,\n    querySelectorAll: () => [],\n    getElementById: () => null,\n    createEvent: () => ({ initEvent() {} }),\n    createElement: () => ({\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute() {},\n      getElementsByTagName: () => [],\n    }),\n    createElementNS: () => ({}),\n    importNode: () => null,\n    location: {\n      hash: \"\",\n      host: \"\",\n      hostname: \"\",\n      href: \"\",\n      origin: \"\",\n      pathname: \"\",\n      protocol: \"\",\n      search: \"\",\n    },\n  };\n  function a() {\n    const e = \"undefined\" != typeof document ? document : {};\n    return t(e, s), e;\n  }\n  const i = {\n    document: s,\n    navigator: { userAgent: \"\" },\n    location: {\n      hash: \"\",\n      host: \"\",\n      hostname: \"\",\n      href: \"\",\n      origin: \"\",\n      pathname: \"\",\n      protocol: \"\",\n      search: \"\",\n    },\n    history: { replaceState() {}, pushState() {}, go() {}, back() {} },\n    CustomEvent: function () {\n      return this;\n    },\n    addEventListener() {},\n    removeEventListener() {},\n    getComputedStyle: () => ({ getPropertyValue: () => \"\" }),\n    Image() {},\n    Date() {},\n    screen: {},\n    setTimeout() {},\n    clearTimeout() {},\n    matchMedia: () => ({}),\n    requestAnimationFrame: (e) =>\n      \"undefined\" == typeof setTimeout ? (e(), null) : setTimeout(e, 0),\n    cancelAnimationFrame(e) {\n      \"undefined\" != typeof setTimeout && clearTimeout(e);\n    },\n  };\n  function r() {\n    const e = \"undefined\" != typeof window ? window : {};\n    return t(e, i), e;\n  }\n  class n extends Array {\n    constructor(e) {\n      \"number\" == typeof e\n        ? super(e)\n        : (super(...(e || [])),\n          (function (e) {\n            const t = e.__proto__;\n            Object.defineProperty(e, \"__proto__\", {\n              get: () => t,\n              set(e) {\n                t.__proto__ = e;\n              },\n            });\n          })(this));\n    }\n  }\n  function l(e) {\n    void 0 === e && (e = []);\n    const t = [];\n    return (\n      e.forEach((e) => {\n        Array.isArray(e) ? t.push(...l(e)) : t.push(e);\n      }),\n      t\n    );\n  }\n  function o(e, t) {\n    return Array.prototype.filter.call(e, t);\n  }\n  function d(e, t) {\n    const s = r(),\n      i = a();\n    let l = [];\n    if (!t && e instanceof n) return e;\n    if (!e) return new n(l);\n    if (\"string\" == typeof e) {\n      const s = e.trim();\n      if (s.indexOf(\"<\") >= 0 && s.indexOf(\">\") >= 0) {\n        let e = \"div\";\n        0 === s.indexOf(\"<li\") && (e = \"ul\"),\n          0 === s.indexOf(\"<tr\") && (e = \"tbody\"),\n          (0 !== s.indexOf(\"<td\") && 0 !== s.indexOf(\"<th\")) || (e = \"tr\"),\n          0 === s.indexOf(\"<tbody\") && (e = \"table\"),\n          0 === s.indexOf(\"<option\") && (e = \"select\");\n        const t = i.createElement(e);\n        t.innerHTML = s;\n        for (let e = 0; e < t.childNodes.length; e += 1)\n          l.push(t.childNodes[e]);\n      } else\n        l = (function (e, t) {\n          if (\"string\" != typeof e) return [e];\n          const s = [],\n            a = t.querySelectorAll(e);\n          for (let e = 0; e < a.length; e += 1) s.push(a[e]);\n          return s;\n        })(e.trim(), t || i);\n    } else if (e.nodeType || e === s || e === i) l.push(e);\n    else if (Array.isArray(e)) {\n      if (e instanceof n) return e;\n      l = e;\n    }\n    return new n(\n      (function (e) {\n        const t = [];\n        for (let s = 0; s < e.length; s += 1)\n          -1 === t.indexOf(e[s]) && t.push(e[s]);\n        return t;\n      })(l)\n    );\n  }\n  d.fn = n.prototype;\n  const c = {\n    addClass: function () {\n      for (var e = arguments.length, t = new Array(e), s = 0; s < e; s++)\n        t[s] = arguments[s];\n      const a = l(t.map((e) => e.split(\" \")));\n      return (\n        this.forEach((e) => {\n          e.classList.add(...a);\n        }),\n        this\n      );\n    },\n    removeClass: function () {\n      for (var e = arguments.length, t = new Array(e), s = 0; s < e; s++)\n        t[s] = arguments[s];\n      const a = l(t.map((e) => e.split(\" \")));\n      return (\n        this.forEach((e) => {\n          e.classList.remove(...a);\n        }),\n        this\n      );\n    },\n    hasClass: function () {\n      for (var e = arguments.length, t = new Array(e), s = 0; s < e; s++)\n        t[s] = arguments[s];\n      const a = l(t.map((e) => e.split(\" \")));\n      return (\n        o(this, (e) => a.filter((t) => e.classList.contains(t)).length > 0)\n          .length > 0\n      );\n    },\n    toggleClass: function () {\n      for (var e = arguments.length, t = new Array(e), s = 0; s < e; s++)\n        t[s] = arguments[s];\n      const a = l(t.map((e) => e.split(\" \")));\n      this.forEach((e) => {\n        a.forEach((t) => {\n          e.classList.toggle(t);\n        });\n      });\n    },\n    attr: function (e, t) {\n      if (1 === arguments.length && \"string\" == typeof e)\n        return this[0] ? this[0].getAttribute(e) : void 0;\n      for (let s = 0; s < this.length; s += 1)\n        if (2 === arguments.length) this[s].setAttribute(e, t);\n        else\n          for (const t in e) (this[s][t] = e[t]), this[s].setAttribute(t, e[t]);\n      return this;\n    },\n    removeAttr: function (e) {\n      for (let t = 0; t < this.length; t += 1) this[t].removeAttribute(e);\n      return this;\n    },\n    transform: function (e) {\n      for (let t = 0; t < this.length; t += 1) this[t].style.transform = e;\n      return this;\n    },\n    transition: function (e) {\n      for (let t = 0; t < this.length; t += 1)\n        this[t].style.transitionDuration = \"string\" != typeof e ? `${e}ms` : e;\n      return this;\n    },\n    on: function () {\n      for (var e = arguments.length, t = new Array(e), s = 0; s < e; s++)\n        t[s] = arguments[s];\n      let [a, i, r, n] = t;\n      function l(e) {\n        const t = e.target;\n        if (!t) return;\n        const s = e.target.dom7EventData || [];\n        if ((s.indexOf(e) < 0 && s.unshift(e), d(t).is(i))) r.apply(t, s);\n        else {\n          const e = d(t).parents();\n          for (let t = 0; t < e.length; t += 1)\n            d(e[t]).is(i) && r.apply(e[t], s);\n        }\n      }\n      function o(e) {\n        const t = (e && e.target && e.target.dom7EventData) || [];\n        t.indexOf(e) < 0 && t.unshift(e), r.apply(this, t);\n      }\n      \"function\" == typeof t[1] && (([a, r, n] = t), (i = void 0)),\n        n || (n = !1);\n      const c = a.split(\" \");\n      let p;\n      for (let e = 0; e < this.length; e += 1) {\n        const t = this[e];\n        if (i)\n          for (p = 0; p < c.length; p += 1) {\n            const e = c[p];\n            t.dom7LiveListeners || (t.dom7LiveListeners = {}),\n              t.dom7LiveListeners[e] || (t.dom7LiveListeners[e] = []),\n              t.dom7LiveListeners[e].push({ listener: r, proxyListener: l }),\n              t.addEventListener(e, l, n);\n          }\n        else\n          for (p = 0; p < c.length; p += 1) {\n            const e = c[p];\n            t.dom7Listeners || (t.dom7Listeners = {}),\n              t.dom7Listeners[e] || (t.dom7Listeners[e] = []),\n              t.dom7Listeners[e].push({ listener: r, proxyListener: o }),\n              t.addEventListener(e, o, n);\n          }\n      }\n      return this;\n    },\n    off: function () {\n      for (var e = arguments.length, t = new Array(e), s = 0; s < e; s++)\n        t[s] = arguments[s];\n      let [a, i, r, n] = t;\n      \"function\" == typeof t[1] && (([a, r, n] = t), (i = void 0)),\n        n || (n = !1);\n      const l = a.split(\" \");\n      for (let e = 0; e < l.length; e += 1) {\n        const t = l[e];\n        for (let e = 0; e < this.length; e += 1) {\n          const s = this[e];\n          let a;\n          if (\n            (!i && s.dom7Listeners\n              ? (a = s.dom7Listeners[t])\n              : i && s.dom7LiveListeners && (a = s.dom7LiveListeners[t]),\n            a && a.length)\n          )\n            for (let e = a.length - 1; e >= 0; e -= 1) {\n              const i = a[e];\n              (r && i.listener === r) ||\n              (r &&\n                i.listener &&\n                i.listener.dom7proxy &&\n                i.listener.dom7proxy === r)\n                ? (s.removeEventListener(t, i.proxyListener, n), a.splice(e, 1))\n                : r ||\n                  (s.removeEventListener(t, i.proxyListener, n),\n                  a.splice(e, 1));\n            }\n        }\n      }\n      return this;\n    },\n    trigger: function () {\n      const e = r();\n      for (var t = arguments.length, s = new Array(t), a = 0; a < t; a++)\n        s[a] = arguments[a];\n      const i = s[0].split(\" \"),\n        n = s[1];\n      for (let t = 0; t < i.length; t += 1) {\n        const a = i[t];\n        for (let t = 0; t < this.length; t += 1) {\n          const i = this[t];\n          if (e.CustomEvent) {\n            const t = new e.CustomEvent(a, {\n              detail: n,\n              bubbles: !0,\n              cancelable: !0,\n            });\n            (i.dom7EventData = s.filter((e, t) => t > 0)),\n              i.dispatchEvent(t),\n              (i.dom7EventData = []),\n              delete i.dom7EventData;\n          }\n        }\n      }\n      return this;\n    },\n    transitionEnd: function (e) {\n      const t = this;\n      return (\n        e &&\n          t.on(\"transitionend\", function s(a) {\n            a.target === this && (e.call(this, a), t.off(\"transitionend\", s));\n          }),\n        this\n      );\n    },\n    outerWidth: function (e) {\n      if (this.length > 0) {\n        if (e) {\n          const e = this.styles();\n          return (\n            this[0].offsetWidth +\n            parseFloat(e.getPropertyValue(\"margin-right\")) +\n            parseFloat(e.getPropertyValue(\"margin-left\"))\n          );\n        }\n        return this[0].offsetWidth;\n      }\n      return null;\n    },\n    outerHeight: function (e) {\n      if (this.length > 0) {\n        if (e) {\n          const e = this.styles();\n          return (\n            this[0].offsetHeight +\n            parseFloat(e.getPropertyValue(\"margin-top\")) +\n            parseFloat(e.getPropertyValue(\"margin-bottom\"))\n          );\n        }\n        return this[0].offsetHeight;\n      }\n      return null;\n    },\n    styles: function () {\n      const e = r();\n      return this[0] ? e.getComputedStyle(this[0], null) : {};\n    },\n    offset: function () {\n      if (this.length > 0) {\n        const e = r(),\n          t = a(),\n          s = this[0],\n          i = s.getBoundingClientRect(),\n          n = t.body,\n          l = s.clientTop || n.clientTop || 0,\n          o = s.clientLeft || n.clientLeft || 0,\n          d = s === e ? e.scrollY : s.scrollTop,\n          c = s === e ? e.scrollX : s.scrollLeft;\n        return { top: i.top + d - l, left: i.left + c - o };\n      }\n      return null;\n    },\n    css: function (e, t) {\n      const s = r();\n      let a;\n      if (1 === arguments.length) {\n        if (\"string\" != typeof e) {\n          for (a = 0; a < this.length; a += 1)\n            for (const t in e) this[a].style[t] = e[t];\n          return this;\n        }\n        if (this[0])\n          return s.getComputedStyle(this[0], null).getPropertyValue(e);\n      }\n      if (2 === arguments.length && \"string\" == typeof e) {\n        for (a = 0; a < this.length; a += 1) this[a].style[e] = t;\n        return this;\n      }\n      return this;\n    },\n    each: function (e) {\n      return e\n        ? (this.forEach((t, s) => {\n            e.apply(t, [t, s]);\n          }),\n          this)\n        : this;\n    },\n    html: function (e) {\n      if (void 0 === e) return this[0] ? this[0].innerHTML : null;\n      for (let t = 0; t < this.length; t += 1) this[t].innerHTML = e;\n      return this;\n    },\n    text: function (e) {\n      if (void 0 === e) return this[0] ? this[0].textContent.trim() : null;\n      for (let t = 0; t < this.length; t += 1) this[t].textContent = e;\n      return this;\n    },\n    is: function (e) {\n      const t = r(),\n        s = a(),\n        i = this[0];\n      let l, o;\n      if (!i || void 0 === e) return !1;\n      if (\"string\" == typeof e) {\n        if (i.matches) return i.matches(e);\n        if (i.webkitMatchesSelector) return i.webkitMatchesSelector(e);\n        if (i.msMatchesSelector) return i.msMatchesSelector(e);\n        for (l = d(e), o = 0; o < l.length; o += 1) if (l[o] === i) return !0;\n        return !1;\n      }\n      if (e === s) return i === s;\n      if (e === t) return i === t;\n      if (e.nodeType || e instanceof n) {\n        for (l = e.nodeType ? [e] : e, o = 0; o < l.length; o += 1)\n          if (l[o] === i) return !0;\n        return !1;\n      }\n      return !1;\n    },\n    index: function () {\n      let e,\n        t = this[0];\n      if (t) {\n        for (e = 0; null !== (t = t.previousSibling); )\n          1 === t.nodeType && (e += 1);\n        return e;\n      }\n    },\n    eq: function (e) {\n      if (void 0 === e) return this;\n      const t = this.length;\n      if (e > t - 1) return d([]);\n      if (e < 0) {\n        const s = t + e;\n        return d(s < 0 ? [] : [this[s]]);\n      }\n      return d([this[e]]);\n    },\n    append: function () {\n      let e;\n      const t = a();\n      for (let s = 0; s < arguments.length; s += 1) {\n        e = s < 0 || arguments.length <= s ? void 0 : arguments[s];\n        for (let s = 0; s < this.length; s += 1)\n          if (\"string\" == typeof e) {\n            const a = t.createElement(\"div\");\n            for (a.innerHTML = e; a.firstChild; )\n              this[s].appendChild(a.firstChild);\n          } else if (e instanceof n)\n            for (let t = 0; t < e.length; t += 1) this[s].appendChild(e[t]);\n          else this[s].appendChild(e);\n      }\n      return this;\n    },\n    prepend: function (e) {\n      const t = a();\n      let s, i;\n      for (s = 0; s < this.length; s += 1)\n        if (\"string\" == typeof e) {\n          const a = t.createElement(\"div\");\n          for (a.innerHTML = e, i = a.childNodes.length - 1; i >= 0; i -= 1)\n            this[s].insertBefore(a.childNodes[i], this[s].childNodes[0]);\n        } else if (e instanceof n)\n          for (i = 0; i < e.length; i += 1)\n            this[s].insertBefore(e[i], this[s].childNodes[0]);\n        else this[s].insertBefore(e, this[s].childNodes[0]);\n      return this;\n    },\n    next: function (e) {\n      return this.length > 0\n        ? e\n          ? this[0].nextElementSibling && d(this[0].nextElementSibling).is(e)\n            ? d([this[0].nextElementSibling])\n            : d([])\n          : this[0].nextElementSibling\n          ? d([this[0].nextElementSibling])\n          : d([])\n        : d([]);\n    },\n    nextAll: function (e) {\n      const t = [];\n      let s = this[0];\n      if (!s) return d([]);\n      for (; s.nextElementSibling; ) {\n        const a = s.nextElementSibling;\n        e ? d(a).is(e) && t.push(a) : t.push(a), (s = a);\n      }\n      return d(t);\n    },\n    prev: function (e) {\n      if (this.length > 0) {\n        const t = this[0];\n        return e\n          ? t.previousElementSibling && d(t.previousElementSibling).is(e)\n            ? d([t.previousElementSibling])\n            : d([])\n          : t.previousElementSibling\n          ? d([t.previousElementSibling])\n          : d([]);\n      }\n      return d([]);\n    },\n    prevAll: function (e) {\n      const t = [];\n      let s = this[0];\n      if (!s) return d([]);\n      for (; s.previousElementSibling; ) {\n        const a = s.previousElementSibling;\n        e ? d(a).is(e) && t.push(a) : t.push(a), (s = a);\n      }\n      return d(t);\n    },\n    parent: function (e) {\n      const t = [];\n      for (let s = 0; s < this.length; s += 1)\n        null !== this[s].parentNode &&\n          (e\n            ? d(this[s].parentNode).is(e) && t.push(this[s].parentNode)\n            : t.push(this[s].parentNode));\n      return d(t);\n    },\n    parents: function (e) {\n      const t = [];\n      for (let s = 0; s < this.length; s += 1) {\n        let a = this[s].parentNode;\n        for (; a; ) e ? d(a).is(e) && t.push(a) : t.push(a), (a = a.parentNode);\n      }\n      return d(t);\n    },\n    closest: function (e) {\n      let t = this;\n      return void 0 === e ? d([]) : (t.is(e) || (t = t.parents(e).eq(0)), t);\n    },\n    find: function (e) {\n      const t = [];\n      for (let s = 0; s < this.length; s += 1) {\n        const a = this[s].querySelectorAll(e);\n        for (let e = 0; e < a.length; e += 1) t.push(a[e]);\n      }\n      return d(t);\n    },\n    children: function (e) {\n      const t = [];\n      for (let s = 0; s < this.length; s += 1) {\n        const a = this[s].children;\n        for (let s = 0; s < a.length; s += 1)\n          (e && !d(a[s]).is(e)) || t.push(a[s]);\n      }\n      return d(t);\n    },\n    filter: function (e) {\n      return d(o(this, e));\n    },\n    remove: function () {\n      for (let e = 0; e < this.length; e += 1)\n        this[e].parentNode && this[e].parentNode.removeChild(this[e]);\n      return this;\n    },\n  };\n  function p(e, t) {\n    return void 0 === t && (t = 0), setTimeout(e, t);\n  }\n  function u() {\n    return Date.now();\n  }\n  function h(e, t) {\n    void 0 === t && (t = \"x\");\n    const s = r();\n    let a, i, n;\n    const l = (function (e) {\n      const t = r();\n      let s;\n      return (\n        t.getComputedStyle && (s = t.getComputedStyle(e, null)),\n        !s && e.currentStyle && (s = e.currentStyle),\n        s || (s = e.style),\n        s\n      );\n    })(e);\n    return (\n      s.WebKitCSSMatrix\n        ? ((i = l.transform || l.webkitTransform),\n          i.split(\",\").length > 6 &&\n            (i = i\n              .split(\", \")\n              .map((e) => e.replace(\",\", \".\"))\n              .join(\", \")),\n          (n = new s.WebKitCSSMatrix(\"none\" === i ? \"\" : i)))\n        : ((n =\n            l.MozTransform ||\n            l.OTransform ||\n            l.MsTransform ||\n            l.msTransform ||\n            l.transform ||\n            l\n              .getPropertyValue(\"transform\")\n              .replace(\"translate(\", \"matrix(1, 0, 0, 1,\")),\n          (a = n.toString().split(\",\"))),\n      \"x\" === t &&\n        (i = s.WebKitCSSMatrix\n          ? n.m41\n          : 16 === a.length\n          ? parseFloat(a[12])\n          : parseFloat(a[4])),\n      \"y\" === t &&\n        (i = s.WebKitCSSMatrix\n          ? n.m42\n          : 16 === a.length\n          ? parseFloat(a[13])\n          : parseFloat(a[5])),\n      i || 0\n    );\n  }\n  function m(e) {\n    return (\n      \"object\" == typeof e &&\n      null !== e &&\n      e.constructor &&\n      \"Object\" === Object.prototype.toString.call(e).slice(8, -1)\n    );\n  }\n  function f(e) {\n    return \"undefined\" != typeof window && void 0 !== window.HTMLElement\n      ? e instanceof HTMLElement\n      : e && (1 === e.nodeType || 11 === e.nodeType);\n  }\n  function g() {\n    const e = Object(arguments.length <= 0 ? void 0 : arguments[0]),\n      t = [\"__proto__\", \"constructor\", \"prototype\"];\n    for (let s = 1; s < arguments.length; s += 1) {\n      const a = s < 0 || arguments.length <= s ? void 0 : arguments[s];\n      if (null != a && !f(a)) {\n        const s = Object.keys(Object(a)).filter((e) => t.indexOf(e) < 0);\n        for (let t = 0, i = s.length; t < i; t += 1) {\n          const i = s[t],\n            r = Object.getOwnPropertyDescriptor(a, i);\n          void 0 !== r &&\n            r.enumerable &&\n            (m(e[i]) && m(a[i])\n              ? a[i].__swiper__\n                ? (e[i] = a[i])\n                : g(e[i], a[i])\n              : !m(e[i]) && m(a[i])\n              ? ((e[i] = {}), a[i].__swiper__ ? (e[i] = a[i]) : g(e[i], a[i]))\n              : (e[i] = a[i]));\n        }\n      }\n    }\n    return e;\n  }\n  function v(e, t, s) {\n    e.style.setProperty(t, s);\n  }\n  function w(e) {\n    let { swiper: t, targetPosition: s, side: a } = e;\n    const i = r(),\n      n = -t.translate;\n    let l,\n      o = null;\n    const d = t.params.speed;\n    (t.wrapperEl.style.scrollSnapType = \"none\"),\n      i.cancelAnimationFrame(t.cssModeFrameID);\n    const c = s > n ? \"next\" : \"prev\",\n      p = (e, t) => (\"next\" === c && e >= t) || (\"prev\" === c && e <= t),\n      u = () => {\n        (l = new Date().getTime()), null === o && (o = l);\n        const e = Math.max(Math.min((l - o) / d, 1), 0),\n          r = 0.5 - Math.cos(e * Math.PI) / 2;\n        let c = n + r * (s - n);\n        if ((p(c, s) && (c = s), t.wrapperEl.scrollTo({ [a]: c }), p(c, s)))\n          return (\n            (t.wrapperEl.style.overflow = \"hidden\"),\n            (t.wrapperEl.style.scrollSnapType = \"\"),\n            setTimeout(() => {\n              (t.wrapperEl.style.overflow = \"\"),\n                t.wrapperEl.scrollTo({ [a]: c });\n            }),\n            void i.cancelAnimationFrame(t.cssModeFrameID)\n          );\n        t.cssModeFrameID = i.requestAnimationFrame(u);\n      };\n    u();\n  }\n  let b, x, y;\n  function E() {\n    return (\n      b ||\n        (b = (function () {\n          const e = r(),\n            t = a();\n          return {\n            smoothScroll:\n              t.documentElement && \"scrollBehavior\" in t.documentElement.style,\n            touch: !!(\n              \"ontouchstart\" in e ||\n              (e.DocumentTouch && t instanceof e.DocumentTouch)\n            ),\n            passiveListener: (function () {\n              let t = !1;\n              try {\n                const s = Object.defineProperty({}, \"passive\", {\n                  get() {\n                    t = !0;\n                  },\n                });\n                e.addEventListener(\"testPassiveListener\", null, s);\n              } catch (e) {}\n              return t;\n            })(),\n            gestures: \"ongesturestart\" in e,\n          };\n        })()),\n      b\n    );\n  }\n  function T(e) {\n    return (\n      void 0 === e && (e = {}),\n      x ||\n        (x = (function (e) {\n          let { userAgent: t } = void 0 === e ? {} : e;\n          const s = E(),\n            a = r(),\n            i = a.navigator.platform,\n            n = t || a.navigator.userAgent,\n            l = { ios: !1, android: !1 },\n            o = a.screen.width,\n            d = a.screen.height,\n            c = n.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n          let p = n.match(/(iPad).*OS\\s([\\d_]+)/);\n          const u = n.match(/(iPod)(.*OS\\s([\\d_]+))?/),\n            h = !p && n.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/),\n            m = \"Win32\" === i;\n          let f = \"MacIntel\" === i;\n          return (\n            !p &&\n              f &&\n              s.touch &&\n              [\n                \"1024x1366\",\n                \"1366x1024\",\n                \"834x1194\",\n                \"1194x834\",\n                \"834x1112\",\n                \"1112x834\",\n                \"768x1024\",\n                \"1024x768\",\n                \"820x1180\",\n                \"1180x820\",\n                \"810x1080\",\n                \"1080x810\",\n              ].indexOf(`${o}x${d}`) >= 0 &&\n              ((p = n.match(/(Version)\\/([\\d.]+)/)),\n              p || (p = [0, 1, \"13_0_0\"]),\n              (f = !1)),\n            c && !m && ((l.os = \"android\"), (l.android = !0)),\n            (p || h || u) && ((l.os = \"ios\"), (l.ios = !0)),\n            l\n          );\n        })(e)),\n      x\n    );\n  }\n  function C() {\n    return (\n      y ||\n        (y = (function () {\n          const e = r();\n          return {\n            isSafari: (function () {\n              const t = e.navigator.userAgent.toLowerCase();\n              return (\n                t.indexOf(\"safari\") >= 0 &&\n                t.indexOf(\"chrome\") < 0 &&\n                t.indexOf(\"android\") < 0\n              );\n            })(),\n            isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(\n              e.navigator.userAgent\n            ),\n          };\n        })()),\n      y\n    );\n  }\n  Object.keys(c).forEach((e) => {\n    Object.defineProperty(d.fn, e, { value: c[e], writable: !0 });\n  });\n  var $ = {\n    on(e, t, s) {\n      const a = this;\n      if (\"function\" != typeof t) return a;\n      const i = s ? \"unshift\" : \"push\";\n      return (\n        e.split(\" \").forEach((e) => {\n          a.eventsListeners[e] || (a.eventsListeners[e] = []),\n            a.eventsListeners[e][i](t);\n        }),\n        a\n      );\n    },\n    once(e, t, s) {\n      const a = this;\n      if (\"function\" != typeof t) return a;\n      function i() {\n        a.off(e, i), i.__emitterProxy && delete i.__emitterProxy;\n        for (var s = arguments.length, r = new Array(s), n = 0; n < s; n++)\n          r[n] = arguments[n];\n        t.apply(a, r);\n      }\n      return (i.__emitterProxy = t), a.on(e, i, s);\n    },\n    onAny(e, t) {\n      const s = this;\n      if (\"function\" != typeof e) return s;\n      const a = t ? \"unshift\" : \"push\";\n      return (\n        s.eventsAnyListeners.indexOf(e) < 0 && s.eventsAnyListeners[a](e), s\n      );\n    },\n    offAny(e) {\n      const t = this;\n      if (!t.eventsAnyListeners) return t;\n      const s = t.eventsAnyListeners.indexOf(e);\n      return s >= 0 && t.eventsAnyListeners.splice(s, 1), t;\n    },\n    off(e, t) {\n      const s = this;\n      return s.eventsListeners\n        ? (e.split(\" \").forEach((e) => {\n            void 0 === t\n              ? (s.eventsListeners[e] = [])\n              : s.eventsListeners[e] &&\n                s.eventsListeners[e].forEach((a, i) => {\n                  (a === t || (a.__emitterProxy && a.__emitterProxy === t)) &&\n                    s.eventsListeners[e].splice(i, 1);\n                });\n          }),\n          s)\n        : s;\n    },\n    emit() {\n      const e = this;\n      if (!e.eventsListeners) return e;\n      let t, s, a;\n      for (var i = arguments.length, r = new Array(i), n = 0; n < i; n++)\n        r[n] = arguments[n];\n      \"string\" == typeof r[0] || Array.isArray(r[0])\n        ? ((t = r[0]), (s = r.slice(1, r.length)), (a = e))\n        : ((t = r[0].events), (s = r[0].data), (a = r[0].context || e)),\n        s.unshift(a);\n      return (\n        (Array.isArray(t) ? t : t.split(\" \")).forEach((t) => {\n          e.eventsAnyListeners &&\n            e.eventsAnyListeners.length &&\n            e.eventsAnyListeners.forEach((e) => {\n              e.apply(a, [t, ...s]);\n            }),\n            e.eventsListeners &&\n              e.eventsListeners[t] &&\n              e.eventsListeners[t].forEach((e) => {\n                e.apply(a, s);\n              });\n        }),\n        e\n      );\n    },\n  };\n  var S = {\n    updateSize: function () {\n      const e = this;\n      let t, s;\n      const a = e.$el;\n      (t =\n        void 0 !== e.params.width && null !== e.params.width\n          ? e.params.width\n          : a[0].clientWidth),\n        (s =\n          void 0 !== e.params.height && null !== e.params.height\n            ? e.params.height\n            : a[0].clientHeight),\n        (0 === t && e.isHorizontal()) ||\n          (0 === s && e.isVertical()) ||\n          ((t =\n            t -\n            parseInt(a.css(\"padding-left\") || 0, 10) -\n            parseInt(a.css(\"padding-right\") || 0, 10)),\n          (s =\n            s -\n            parseInt(a.css(\"padding-top\") || 0, 10) -\n            parseInt(a.css(\"padding-bottom\") || 0, 10)),\n          Number.isNaN(t) && (t = 0),\n          Number.isNaN(s) && (s = 0),\n          Object.assign(e, {\n            width: t,\n            height: s,\n            size: e.isHorizontal() ? t : s,\n          }));\n    },\n    updateSlides: function () {\n      const e = this;\n      function t(t) {\n        return e.isHorizontal()\n          ? t\n          : {\n              width: \"height\",\n              \"margin-top\": \"margin-left\",\n              \"margin-bottom \": \"margin-right\",\n              \"margin-left\": \"margin-top\",\n              \"margin-right\": \"margin-bottom\",\n              \"padding-left\": \"padding-top\",\n              \"padding-right\": \"padding-bottom\",\n              marginRight: \"marginBottom\",\n            }[t];\n      }\n      function s(e, s) {\n        return parseFloat(e.getPropertyValue(t(s)) || 0);\n      }\n      const a = e.params,\n        { $wrapperEl: i, size: r, rtlTranslate: n, wrongRTL: l } = e,\n        o = e.virtual && a.virtual.enabled,\n        d = o ? e.virtual.slides.length : e.slides.length,\n        c = i.children(`.${e.params.slideClass}`),\n        p = o ? e.virtual.slides.length : c.length;\n      let u = [];\n      const h = [],\n        m = [];\n      let f = a.slidesOffsetBefore;\n      \"function\" == typeof f && (f = a.slidesOffsetBefore.call(e));\n      let g = a.slidesOffsetAfter;\n      \"function\" == typeof g && (g = a.slidesOffsetAfter.call(e));\n      const w = e.snapGrid.length,\n        b = e.slidesGrid.length;\n      let x = a.spaceBetween,\n        y = -f,\n        E = 0,\n        T = 0;\n      if (void 0 === r) return;\n      \"string\" == typeof x &&\n        x.indexOf(\"%\") >= 0 &&\n        (x = (parseFloat(x.replace(\"%\", \"\")) / 100) * r),\n        (e.virtualSize = -x),\n        n\n          ? c.css({ marginLeft: \"\", marginBottom: \"\", marginTop: \"\" })\n          : c.css({ marginRight: \"\", marginBottom: \"\", marginTop: \"\" }),\n        a.centeredSlides &&\n          a.cssMode &&\n          (v(e.wrapperEl, \"--swiper-centered-offset-before\", \"\"),\n          v(e.wrapperEl, \"--swiper-centered-offset-after\", \"\"));\n      const C = a.grid && a.grid.rows > 1 && e.grid;\n      let $;\n      C && e.grid.initSlides(p);\n      const S =\n        \"auto\" === a.slidesPerView &&\n        a.breakpoints &&\n        Object.keys(a.breakpoints).filter(\n          (e) => void 0 !== a.breakpoints[e].slidesPerView\n        ).length > 0;\n      for (let i = 0; i < p; i += 1) {\n        $ = 0;\n        const n = c.eq(i);\n        if (\n          (C && e.grid.updateSlide(i, n, p, t), \"none\" !== n.css(\"display\"))\n        ) {\n          if (\"auto\" === a.slidesPerView) {\n            S && (c[i].style[t(\"width\")] = \"\");\n            const r = getComputedStyle(n[0]),\n              l = n[0].style.transform,\n              o = n[0].style.webkitTransform;\n            if (\n              (l && (n[0].style.transform = \"none\"),\n              o && (n[0].style.webkitTransform = \"none\"),\n              a.roundLengths)\n            )\n              $ = e.isHorizontal() ? n.outerWidth(!0) : n.outerHeight(!0);\n            else {\n              const e = s(r, \"width\"),\n                t = s(r, \"padding-left\"),\n                a = s(r, \"padding-right\"),\n                i = s(r, \"margin-left\"),\n                l = s(r, \"margin-right\"),\n                o = r.getPropertyValue(\"box-sizing\");\n              if (o && \"border-box\" === o) $ = e + i + l;\n              else {\n                const { clientWidth: s, offsetWidth: r } = n[0];\n                $ = e + t + a + i + l + (r - s);\n              }\n            }\n            l && (n[0].style.transform = l),\n              o && (n[0].style.webkitTransform = o),\n              a.roundLengths && ($ = Math.floor($));\n          } else\n            ($ = (r - (a.slidesPerView - 1) * x) / a.slidesPerView),\n              a.roundLengths && ($ = Math.floor($)),\n              c[i] && (c[i].style[t(\"width\")] = `${$}px`);\n          c[i] && (c[i].swiperSlideSize = $),\n            m.push($),\n            a.centeredSlides\n              ? ((y = y + $ / 2 + E / 2 + x),\n                0 === E && 0 !== i && (y = y - r / 2 - x),\n                0 === i && (y = y - r / 2 - x),\n                Math.abs(y) < 0.001 && (y = 0),\n                a.roundLengths && (y = Math.floor(y)),\n                T % a.slidesPerGroup == 0 && u.push(y),\n                h.push(y))\n              : (a.roundLengths && (y = Math.floor(y)),\n                (T - Math.min(e.params.slidesPerGroupSkip, T)) %\n                  e.params.slidesPerGroup ==\n                  0 && u.push(y),\n                h.push(y),\n                (y = y + $ + x)),\n            (e.virtualSize += $ + x),\n            (E = $),\n            (T += 1);\n        }\n      }\n      if (\n        ((e.virtualSize = Math.max(e.virtualSize, r) + g),\n        n &&\n          l &&\n          (\"slide\" === a.effect || \"coverflow\" === a.effect) &&\n          i.css({ width: `${e.virtualSize + a.spaceBetween}px` }),\n        a.setWrapperSize &&\n          i.css({ [t(\"width\")]: `${e.virtualSize + a.spaceBetween}px` }),\n        C && e.grid.updateWrapperSize($, u, t),\n        !a.centeredSlides)\n      ) {\n        const t = [];\n        for (let s = 0; s < u.length; s += 1) {\n          let i = u[s];\n          a.roundLengths && (i = Math.floor(i)),\n            u[s] <= e.virtualSize - r && t.push(i);\n        }\n        (u = t),\n          Math.floor(e.virtualSize - r) - Math.floor(u[u.length - 1]) > 1 &&\n            u.push(e.virtualSize - r);\n      }\n      if ((0 === u.length && (u = [0]), 0 !== a.spaceBetween)) {\n        const s = e.isHorizontal() && n ? \"marginLeft\" : t(\"marginRight\");\n        c.filter((e, t) => !a.cssMode || t !== c.length - 1).css({\n          [s]: `${x}px`,\n        });\n      }\n      if (a.centeredSlides && a.centeredSlidesBounds) {\n        let e = 0;\n        m.forEach((t) => {\n          e += t + (a.spaceBetween ? a.spaceBetween : 0);\n        }),\n          (e -= a.spaceBetween);\n        const t = e - r;\n        u = u.map((e) => (e < 0 ? -f : e > t ? t + g : e));\n      }\n      if (a.centerInsufficientSlides) {\n        let e = 0;\n        if (\n          (m.forEach((t) => {\n            e += t + (a.spaceBetween ? a.spaceBetween : 0);\n          }),\n          (e -= a.spaceBetween),\n          e < r)\n        ) {\n          const t = (r - e) / 2;\n          u.forEach((e, s) => {\n            u[s] = e - t;\n          }),\n            h.forEach((e, s) => {\n              h[s] = e + t;\n            });\n        }\n      }\n      if (\n        (Object.assign(e, {\n          slides: c,\n          snapGrid: u,\n          slidesGrid: h,\n          slidesSizesGrid: m,\n        }),\n        a.centeredSlides && a.cssMode && !a.centeredSlidesBounds)\n      ) {\n        v(e.wrapperEl, \"--swiper-centered-offset-before\", -u[0] + \"px\"),\n          v(\n            e.wrapperEl,\n            \"--swiper-centered-offset-after\",\n            e.size / 2 - m[m.length - 1] / 2 + \"px\"\n          );\n        const t = -e.snapGrid[0],\n          s = -e.slidesGrid[0];\n        (e.snapGrid = e.snapGrid.map((e) => e + t)),\n          (e.slidesGrid = e.slidesGrid.map((e) => e + s));\n      }\n      if (\n        (p !== d && e.emit(\"slidesLengthChange\"),\n        u.length !== w &&\n          (e.params.watchOverflow && e.checkOverflow(),\n          e.emit(\"snapGridLengthChange\")),\n        h.length !== b && e.emit(\"slidesGridLengthChange\"),\n        a.watchSlidesProgress && e.updateSlidesOffset(),\n        !(o || a.cssMode || (\"slide\" !== a.effect && \"fade\" !== a.effect)))\n      ) {\n        const t = `${a.containerModifierClass}backface-hidden`,\n          s = e.$el.hasClass(t);\n        p <= a.maxBackfaceHiddenSlides\n          ? s || e.$el.addClass(t)\n          : s && e.$el.removeClass(t);\n      }\n    },\n    updateAutoHeight: function (e) {\n      const t = this,\n        s = [],\n        a = t.virtual && t.params.virtual.enabled;\n      let i,\n        r = 0;\n      \"number\" == typeof e\n        ? t.setTransition(e)\n        : !0 === e && t.setTransition(t.params.speed);\n      const n = (e) =>\n        a\n          ? t.slides.filter(\n              (t) =>\n                parseInt(t.getAttribute(\"data-swiper-slide-index\"), 10) === e\n            )[0]\n          : t.slides.eq(e)[0];\n      if (\"auto\" !== t.params.slidesPerView && t.params.slidesPerView > 1)\n        if (t.params.centeredSlides)\n          t.visibleSlides.each((e) => {\n            s.push(e);\n          });\n        else\n          for (i = 0; i < Math.ceil(t.params.slidesPerView); i += 1) {\n            const e = t.activeIndex + i;\n            if (e > t.slides.length && !a) break;\n            s.push(n(e));\n          }\n      else s.push(n(t.activeIndex));\n      for (i = 0; i < s.length; i += 1)\n        if (void 0 !== s[i]) {\n          const e = s[i].offsetHeight;\n          r = e > r ? e : r;\n        }\n      (r || 0 === r) && t.$wrapperEl.css(\"height\", `${r}px`);\n    },\n    updateSlidesOffset: function () {\n      const e = this,\n        t = e.slides;\n      for (let s = 0; s < t.length; s += 1)\n        t[s].swiperSlideOffset = e.isHorizontal()\n          ? t[s].offsetLeft\n          : t[s].offsetTop;\n    },\n    updateSlidesProgress: function (e) {\n      void 0 === e && (e = (this && this.translate) || 0);\n      const t = this,\n        s = t.params,\n        { slides: a, rtlTranslate: i, snapGrid: r } = t;\n      if (0 === a.length) return;\n      void 0 === a[0].swiperSlideOffset && t.updateSlidesOffset();\n      let n = -e;\n      i && (n = e),\n        a.removeClass(s.slideVisibleClass),\n        (t.visibleSlidesIndexes = []),\n        (t.visibleSlides = []);\n      for (let e = 0; e < a.length; e += 1) {\n        const l = a[e];\n        let o = l.swiperSlideOffset;\n        s.cssMode && s.centeredSlides && (o -= a[0].swiperSlideOffset);\n        const d =\n            (n + (s.centeredSlides ? t.minTranslate() : 0) - o) /\n            (l.swiperSlideSize + s.spaceBetween),\n          c =\n            (n - r[0] + (s.centeredSlides ? t.minTranslate() : 0) - o) /\n            (l.swiperSlideSize + s.spaceBetween),\n          p = -(n - o),\n          u = p + t.slidesSizesGrid[e];\n        ((p >= 0 && p < t.size - 1) ||\n          (u > 1 && u <= t.size) ||\n          (p <= 0 && u >= t.size)) &&\n          (t.visibleSlides.push(l),\n          t.visibleSlidesIndexes.push(e),\n          a.eq(e).addClass(s.slideVisibleClass)),\n          (l.progress = i ? -d : d),\n          (l.originalProgress = i ? -c : c);\n      }\n      t.visibleSlides = d(t.visibleSlides);\n    },\n    updateProgress: function (e) {\n      const t = this;\n      if (void 0 === e) {\n        const s = t.rtlTranslate ? -1 : 1;\n        e = (t && t.translate && t.translate * s) || 0;\n      }\n      const s = t.params,\n        a = t.maxTranslate() - t.minTranslate();\n      let { progress: i, isBeginning: r, isEnd: n } = t;\n      const l = r,\n        o = n;\n      0 === a\n        ? ((i = 0), (r = !0), (n = !0))\n        : ((i = (e - t.minTranslate()) / a), (r = i <= 0), (n = i >= 1)),\n        Object.assign(t, { progress: i, isBeginning: r, isEnd: n }),\n        (s.watchSlidesProgress || (s.centeredSlides && s.autoHeight)) &&\n          t.updateSlidesProgress(e),\n        r && !l && t.emit(\"reachBeginning toEdge\"),\n        n && !o && t.emit(\"reachEnd toEdge\"),\n        ((l && !r) || (o && !n)) && t.emit(\"fromEdge\"),\n        t.emit(\"progress\", i);\n    },\n    updateSlidesClasses: function () {\n      const e = this,\n        {\n          slides: t,\n          params: s,\n          $wrapperEl: a,\n          activeIndex: i,\n          realIndex: r,\n        } = e,\n        n = e.virtual && s.virtual.enabled;\n      let l;\n      t.removeClass(\n        `${s.slideActiveClass} ${s.slideNextClass} ${s.slidePrevClass} ${s.slideDuplicateActiveClass} ${s.slideDuplicateNextClass} ${s.slideDuplicatePrevClass}`\n      ),\n        (l = n\n          ? e.$wrapperEl.find(\n              `.${s.slideClass}[data-swiper-slide-index=\"${i}\"]`\n            )\n          : t.eq(i)),\n        l.addClass(s.slideActiveClass),\n        s.loop &&\n          (l.hasClass(s.slideDuplicateClass)\n            ? a\n                .children(\n                  `.${s.slideClass}:not(.${s.slideDuplicateClass})[data-swiper-slide-index=\"${r}\"]`\n                )\n                .addClass(s.slideDuplicateActiveClass)\n            : a\n                .children(\n                  `.${s.slideClass}.${s.slideDuplicateClass}[data-swiper-slide-index=\"${r}\"]`\n                )\n                .addClass(s.slideDuplicateActiveClass));\n      let o = l.nextAll(`.${s.slideClass}`).eq(0).addClass(s.slideNextClass);\n      s.loop && 0 === o.length && ((o = t.eq(0)), o.addClass(s.slideNextClass));\n      let d = l.prevAll(`.${s.slideClass}`).eq(0).addClass(s.slidePrevClass);\n      s.loop &&\n        0 === d.length &&\n        ((d = t.eq(-1)), d.addClass(s.slidePrevClass)),\n        s.loop &&\n          (o.hasClass(s.slideDuplicateClass)\n            ? a\n                .children(\n                  `.${s.slideClass}:not(.${\n                    s.slideDuplicateClass\n                  })[data-swiper-slide-index=\"${o.attr(\n                    \"data-swiper-slide-index\"\n                  )}\"]`\n                )\n                .addClass(s.slideDuplicateNextClass)\n            : a\n                .children(\n                  `.${s.slideClass}.${\n                    s.slideDuplicateClass\n                  }[data-swiper-slide-index=\"${o.attr(\n                    \"data-swiper-slide-index\"\n                  )}\"]`\n                )\n                .addClass(s.slideDuplicateNextClass),\n          d.hasClass(s.slideDuplicateClass)\n            ? a\n                .children(\n                  `.${s.slideClass}:not(.${\n                    s.slideDuplicateClass\n                  })[data-swiper-slide-index=\"${d.attr(\n                    \"data-swiper-slide-index\"\n                  )}\"]`\n                )\n                .addClass(s.slideDuplicatePrevClass)\n            : a\n                .children(\n                  `.${s.slideClass}.${\n                    s.slideDuplicateClass\n                  }[data-swiper-slide-index=\"${d.attr(\n                    \"data-swiper-slide-index\"\n                  )}\"]`\n                )\n                .addClass(s.slideDuplicatePrevClass)),\n        e.emitSlidesClasses();\n    },\n    updateActiveIndex: function (e) {\n      const t = this,\n        s = t.rtlTranslate ? t.translate : -t.translate,\n        {\n          slidesGrid: a,\n          snapGrid: i,\n          params: r,\n          activeIndex: n,\n          realIndex: l,\n          snapIndex: o,\n        } = t;\n      let d,\n        c = e;\n      if (void 0 === c) {\n        for (let e = 0; e < a.length; e += 1)\n          void 0 !== a[e + 1]\n            ? s >= a[e] && s < a[e + 1] - (a[e + 1] - a[e]) / 2\n              ? (c = e)\n              : s >= a[e] && s < a[e + 1] && (c = e + 1)\n            : s >= a[e] && (c = e);\n        r.normalizeSlideIndex && (c < 0 || void 0 === c) && (c = 0);\n      }\n      if (i.indexOf(s) >= 0) d = i.indexOf(s);\n      else {\n        const e = Math.min(r.slidesPerGroupSkip, c);\n        d = e + Math.floor((c - e) / r.slidesPerGroup);\n      }\n      if ((d >= i.length && (d = i.length - 1), c === n))\n        return void (d !== o && ((t.snapIndex = d), t.emit(\"snapIndexChange\")));\n      const p = parseInt(\n        t.slides.eq(c).attr(\"data-swiper-slide-index\") || c,\n        10\n      );\n      Object.assign(t, {\n        snapIndex: d,\n        realIndex: p,\n        previousIndex: n,\n        activeIndex: c,\n      }),\n        t.emit(\"activeIndexChange\"),\n        t.emit(\"snapIndexChange\"),\n        l !== p && t.emit(\"realIndexChange\"),\n        (t.initialized || t.params.runCallbacksOnInit) && t.emit(\"slideChange\");\n    },\n    updateClickedSlide: function (e) {\n      const t = this,\n        s = t.params,\n        a = d(e).closest(`.${s.slideClass}`)[0];\n      let i,\n        r = !1;\n      if (a)\n        for (let e = 0; e < t.slides.length; e += 1)\n          if (t.slides[e] === a) {\n            (r = !0), (i = e);\n            break;\n          }\n      if (!a || !r)\n        return (t.clickedSlide = void 0), void (t.clickedIndex = void 0);\n      (t.clickedSlide = a),\n        t.virtual && t.params.virtual.enabled\n          ? (t.clickedIndex = parseInt(\n              d(a).attr(\"data-swiper-slide-index\"),\n              10\n            ))\n          : (t.clickedIndex = i),\n        s.slideToClickedSlide &&\n          void 0 !== t.clickedIndex &&\n          t.clickedIndex !== t.activeIndex &&\n          t.slideToClickedSlide();\n    },\n  };\n  var M = {\n    getTranslate: function (e) {\n      void 0 === e && (e = this.isHorizontal() ? \"x\" : \"y\");\n      const { params: t, rtlTranslate: s, translate: a, $wrapperEl: i } = this;\n      if (t.virtualTranslate) return s ? -a : a;\n      if (t.cssMode) return a;\n      let r = h(i[0], e);\n      return s && (r = -r), r || 0;\n    },\n    setTranslate: function (e, t) {\n      const s = this,\n        {\n          rtlTranslate: a,\n          params: i,\n          $wrapperEl: r,\n          wrapperEl: n,\n          progress: l,\n        } = s;\n      let o,\n        d = 0,\n        c = 0;\n      s.isHorizontal() ? (d = a ? -e : e) : (c = e),\n        i.roundLengths && ((d = Math.floor(d)), (c = Math.floor(c))),\n        i.cssMode\n          ? (n[s.isHorizontal() ? \"scrollLeft\" : \"scrollTop\"] = s.isHorizontal()\n              ? -d\n              : -c)\n          : i.virtualTranslate ||\n            r.transform(`translate3d(${d}px, ${c}px, 0px)`),\n        (s.previousTranslate = s.translate),\n        (s.translate = s.isHorizontal() ? d : c);\n      const p = s.maxTranslate() - s.minTranslate();\n      (o = 0 === p ? 0 : (e - s.minTranslate()) / p),\n        o !== l && s.updateProgress(e),\n        s.emit(\"setTranslate\", s.translate, t);\n    },\n    minTranslate: function () {\n      return -this.snapGrid[0];\n    },\n    maxTranslate: function () {\n      return -this.snapGrid[this.snapGrid.length - 1];\n    },\n    translateTo: function (e, t, s, a, i) {\n      void 0 === e && (e = 0),\n        void 0 === t && (t = this.params.speed),\n        void 0 === s && (s = !0),\n        void 0 === a && (a = !0);\n      const r = this,\n        { params: n, wrapperEl: l } = r;\n      if (r.animating && n.preventInteractionOnTransition) return !1;\n      const o = r.minTranslate(),\n        d = r.maxTranslate();\n      let c;\n      if (\n        ((c = a && e > o ? o : a && e < d ? d : e),\n        r.updateProgress(c),\n        n.cssMode)\n      ) {\n        const e = r.isHorizontal();\n        if (0 === t) l[e ? \"scrollLeft\" : \"scrollTop\"] = -c;\n        else {\n          if (!r.support.smoothScroll)\n            return (\n              w({ swiper: r, targetPosition: -c, side: e ? \"left\" : \"top\" }), !0\n            );\n          l.scrollTo({ [e ? \"left\" : \"top\"]: -c, behavior: \"smooth\" });\n        }\n        return !0;\n      }\n      return (\n        0 === t\n          ? (r.setTransition(0),\n            r.setTranslate(c),\n            s &&\n              (r.emit(\"beforeTransitionStart\", t, i), r.emit(\"transitionEnd\")))\n          : (r.setTransition(t),\n            r.setTranslate(c),\n            s &&\n              (r.emit(\"beforeTransitionStart\", t, i),\n              r.emit(\"transitionStart\")),\n            r.animating ||\n              ((r.animating = !0),\n              r.onTranslateToWrapperTransitionEnd ||\n                (r.onTranslateToWrapperTransitionEnd = function (e) {\n                  r &&\n                    !r.destroyed &&\n                    e.target === this &&\n                    (r.$wrapperEl[0].removeEventListener(\n                      \"transitionend\",\n                      r.onTranslateToWrapperTransitionEnd\n                    ),\n                    r.$wrapperEl[0].removeEventListener(\n                      \"webkitTransitionEnd\",\n                      r.onTranslateToWrapperTransitionEnd\n                    ),\n                    (r.onTranslateToWrapperTransitionEnd = null),\n                    delete r.onTranslateToWrapperTransitionEnd,\n                    s && r.emit(\"transitionEnd\"));\n                }),\n              r.$wrapperEl[0].addEventListener(\n                \"transitionend\",\n                r.onTranslateToWrapperTransitionEnd\n              ),\n              r.$wrapperEl[0].addEventListener(\n                \"webkitTransitionEnd\",\n                r.onTranslateToWrapperTransitionEnd\n              ))),\n        !0\n      );\n    },\n  };\n  function P(e) {\n    let { swiper: t, runCallbacks: s, direction: a, step: i } = e;\n    const { activeIndex: r, previousIndex: n } = t;\n    let l = a;\n    if (\n      (l || (l = r > n ? \"next\" : r < n ? \"prev\" : \"reset\"),\n      t.emit(`transition${i}`),\n      s && r !== n)\n    ) {\n      if (\"reset\" === l) return void t.emit(`slideResetTransition${i}`);\n      t.emit(`slideChangeTransition${i}`),\n        \"next\" === l\n          ? t.emit(`slideNextTransition${i}`)\n          : t.emit(`slidePrevTransition${i}`);\n    }\n  }\n  var k = {\n    slideTo: function (e, t, s, a, i) {\n      if (\n        (void 0 === e && (e = 0),\n        void 0 === t && (t = this.params.speed),\n        void 0 === s && (s = !0),\n        \"number\" != typeof e && \"string\" != typeof e)\n      )\n        throw new Error(\n          `The 'index' argument cannot have type other than 'number' or 'string'. [${typeof e}] given.`\n        );\n      if (\"string\" == typeof e) {\n        const t = parseInt(e, 10);\n        if (!isFinite(t))\n          throw new Error(\n            `The passed-in 'index' (string) couldn't be converted to 'number'. [${e}] given.`\n          );\n        e = t;\n      }\n      const r = this;\n      let n = e;\n      n < 0 && (n = 0);\n      const {\n        params: l,\n        snapGrid: o,\n        slidesGrid: d,\n        previousIndex: c,\n        activeIndex: p,\n        rtlTranslate: u,\n        wrapperEl: h,\n        enabled: m,\n      } = r;\n      if ((r.animating && l.preventInteractionOnTransition) || (!m && !a && !i))\n        return !1;\n      const f = Math.min(r.params.slidesPerGroupSkip, n);\n      let g = f + Math.floor((n - f) / r.params.slidesPerGroup);\n      g >= o.length && (g = o.length - 1),\n        (p || l.initialSlide || 0) === (c || 0) &&\n          s &&\n          r.emit(\"beforeSlideChangeStart\");\n      const v = -o[g];\n      if ((r.updateProgress(v), l.normalizeSlideIndex))\n        for (let e = 0; e < d.length; e += 1) {\n          const t = -Math.floor(100 * v),\n            s = Math.floor(100 * d[e]),\n            a = Math.floor(100 * d[e + 1]);\n          void 0 !== d[e + 1]\n            ? t >= s && t < a - (a - s) / 2\n              ? (n = e)\n              : t >= s && t < a && (n = e + 1)\n            : t >= s && (n = e);\n        }\n      if (r.initialized && n !== p) {\n        if (!r.allowSlideNext && v < r.translate && v < r.minTranslate())\n          return !1;\n        if (\n          !r.allowSlidePrev &&\n          v > r.translate &&\n          v > r.maxTranslate() &&\n          (p || 0) !== n\n        )\n          return !1;\n      }\n      let b;\n      if (\n        ((b = n > p ? \"next\" : n < p ? \"prev\" : \"reset\"),\n        (u && -v === r.translate) || (!u && v === r.translate))\n      )\n        return (\n          r.updateActiveIndex(n),\n          l.autoHeight && r.updateAutoHeight(),\n          r.updateSlidesClasses(),\n          \"slide\" !== l.effect && r.setTranslate(v),\n          \"reset\" !== b && (r.transitionStart(s, b), r.transitionEnd(s, b)),\n          !1\n        );\n      if (l.cssMode) {\n        const e = r.isHorizontal(),\n          s = u ? v : -v;\n        if (0 === t) {\n          const t = r.virtual && r.params.virtual.enabled;\n          t &&\n            ((r.wrapperEl.style.scrollSnapType = \"none\"),\n            (r._immediateVirtual = !0)),\n            (h[e ? \"scrollLeft\" : \"scrollTop\"] = s),\n            t &&\n              requestAnimationFrame(() => {\n                (r.wrapperEl.style.scrollSnapType = \"\"),\n                  (r._swiperImmediateVirtual = !1);\n              });\n        } else {\n          if (!r.support.smoothScroll)\n            return (\n              w({ swiper: r, targetPosition: s, side: e ? \"left\" : \"top\" }), !0\n            );\n          h.scrollTo({ [e ? \"left\" : \"top\"]: s, behavior: \"smooth\" });\n        }\n        return !0;\n      }\n      return (\n        r.setTransition(t),\n        r.setTranslate(v),\n        r.updateActiveIndex(n),\n        r.updateSlidesClasses(),\n        r.emit(\"beforeTransitionStart\", t, a),\n        r.transitionStart(s, b),\n        0 === t\n          ? r.transitionEnd(s, b)\n          : r.animating ||\n            ((r.animating = !0),\n            r.onSlideToWrapperTransitionEnd ||\n              (r.onSlideToWrapperTransitionEnd = function (e) {\n                r &&\n                  !r.destroyed &&\n                  e.target === this &&\n                  (r.$wrapperEl[0].removeEventListener(\n                    \"transitionend\",\n                    r.onSlideToWrapperTransitionEnd\n                  ),\n                  r.$wrapperEl[0].removeEventListener(\n                    \"webkitTransitionEnd\",\n                    r.onSlideToWrapperTransitionEnd\n                  ),\n                  (r.onSlideToWrapperTransitionEnd = null),\n                  delete r.onSlideToWrapperTransitionEnd,\n                  r.transitionEnd(s, b));\n              }),\n            r.$wrapperEl[0].addEventListener(\n              \"transitionend\",\n              r.onSlideToWrapperTransitionEnd\n            ),\n            r.$wrapperEl[0].addEventListener(\n              \"webkitTransitionEnd\",\n              r.onSlideToWrapperTransitionEnd\n            )),\n        !0\n      );\n    },\n    slideToLoop: function (e, t, s, a) {\n      void 0 === e && (e = 0),\n        void 0 === t && (t = this.params.speed),\n        void 0 === s && (s = !0);\n      const i = this;\n      let r = e;\n      return i.params.loop && (r += i.loopedSlides), i.slideTo(r, t, s, a);\n    },\n    slideNext: function (e, t, s) {\n      void 0 === e && (e = this.params.speed), void 0 === t && (t = !0);\n      const a = this,\n        { animating: i, enabled: r, params: n } = a;\n      if (!r) return a;\n      let l = n.slidesPerGroup;\n      \"auto\" === n.slidesPerView &&\n        1 === n.slidesPerGroup &&\n        n.slidesPerGroupAuto &&\n        (l = Math.max(a.slidesPerViewDynamic(\"current\", !0), 1));\n      const o = a.activeIndex < n.slidesPerGroupSkip ? 1 : l;\n      if (n.loop) {\n        if (i && n.loopPreventsSlide) return !1;\n        a.loopFix(), (a._clientLeft = a.$wrapperEl[0].clientLeft);\n      }\n      return n.rewind && a.isEnd\n        ? a.slideTo(0, e, t, s)\n        : a.slideTo(a.activeIndex + o, e, t, s);\n    },\n    slidePrev: function (e, t, s) {\n      void 0 === e && (e = this.params.speed), void 0 === t && (t = !0);\n      const a = this,\n        {\n          params: i,\n          animating: r,\n          snapGrid: n,\n          slidesGrid: l,\n          rtlTranslate: o,\n          enabled: d,\n        } = a;\n      if (!d) return a;\n      if (i.loop) {\n        if (r && i.loopPreventsSlide) return !1;\n        a.loopFix(), (a._clientLeft = a.$wrapperEl[0].clientLeft);\n      }\n      function c(e) {\n        return e < 0 ? -Math.floor(Math.abs(e)) : Math.floor(e);\n      }\n      const p = c(o ? a.translate : -a.translate),\n        u = n.map((e) => c(e));\n      let h = n[u.indexOf(p) - 1];\n      if (void 0 === h && i.cssMode) {\n        let e;\n        n.forEach((t, s) => {\n          p >= t && (e = s);\n        }),\n          void 0 !== e && (h = n[e > 0 ? e - 1 : e]);\n      }\n      let m = 0;\n      if (\n        (void 0 !== h &&\n          ((m = l.indexOf(h)),\n          m < 0 && (m = a.activeIndex - 1),\n          \"auto\" === i.slidesPerView &&\n            1 === i.slidesPerGroup &&\n            i.slidesPerGroupAuto &&\n            ((m = m - a.slidesPerViewDynamic(\"previous\", !0) + 1),\n            (m = Math.max(m, 0)))),\n        i.rewind && a.isBeginning)\n      ) {\n        const i =\n          a.params.virtual && a.params.virtual.enabled && a.virtual\n            ? a.virtual.slides.length - 1\n            : a.slides.length - 1;\n        return a.slideTo(i, e, t, s);\n      }\n      return a.slideTo(m, e, t, s);\n    },\n    slideReset: function (e, t, s) {\n      return (\n        void 0 === e && (e = this.params.speed),\n        void 0 === t && (t = !0),\n        this.slideTo(this.activeIndex, e, t, s)\n      );\n    },\n    slideToClosest: function (e, t, s, a) {\n      void 0 === e && (e = this.params.speed),\n        void 0 === t && (t = !0),\n        void 0 === a && (a = 0.5);\n      const i = this;\n      let r = i.activeIndex;\n      const n = Math.min(i.params.slidesPerGroupSkip, r),\n        l = n + Math.floor((r - n) / i.params.slidesPerGroup),\n        o = i.rtlTranslate ? i.translate : -i.translate;\n      if (o >= i.snapGrid[l]) {\n        const e = i.snapGrid[l];\n        o - e > (i.snapGrid[l + 1] - e) * a && (r += i.params.slidesPerGroup);\n      } else {\n        const e = i.snapGrid[l - 1];\n        o - e <= (i.snapGrid[l] - e) * a && (r -= i.params.slidesPerGroup);\n      }\n      return (\n        (r = Math.max(r, 0)),\n        (r = Math.min(r, i.slidesGrid.length - 1)),\n        i.slideTo(r, e, t, s)\n      );\n    },\n    slideToClickedSlide: function () {\n      const e = this,\n        { params: t, $wrapperEl: s } = e,\n        a =\n          \"auto\" === t.slidesPerView\n            ? e.slidesPerViewDynamic()\n            : t.slidesPerView;\n      let i,\n        r = e.clickedIndex;\n      if (t.loop) {\n        if (e.animating) return;\n        (i = parseInt(d(e.clickedSlide).attr(\"data-swiper-slide-index\"), 10)),\n          t.centeredSlides\n            ? r < e.loopedSlides - a / 2 ||\n              r > e.slides.length - e.loopedSlides + a / 2\n              ? (e.loopFix(),\n                (r = s\n                  .children(\n                    `.${t.slideClass}[data-swiper-slide-index=\"${i}\"]:not(.${t.slideDuplicateClass})`\n                  )\n                  .eq(0)\n                  .index()),\n                p(() => {\n                  e.slideTo(r);\n                }))\n              : e.slideTo(r)\n            : r > e.slides.length - a\n            ? (e.loopFix(),\n              (r = s\n                .children(\n                  `.${t.slideClass}[data-swiper-slide-index=\"${i}\"]:not(.${t.slideDuplicateClass})`\n                )\n                .eq(0)\n                .index()),\n              p(() => {\n                e.slideTo(r);\n              }))\n            : e.slideTo(r);\n      } else e.slideTo(r);\n    },\n  };\n  var z = {\n    loopCreate: function () {\n      const e = this,\n        t = a(),\n        { params: s, $wrapperEl: i } = e,\n        r = i.children().length > 0 ? d(i.children()[0].parentNode) : i;\n      r.children(`.${s.slideClass}.${s.slideDuplicateClass}`).remove();\n      let n = r.children(`.${s.slideClass}`);\n      if (s.loopFillGroupWithBlank) {\n        const e = s.slidesPerGroup - (n.length % s.slidesPerGroup);\n        if (e !== s.slidesPerGroup) {\n          for (let a = 0; a < e; a += 1) {\n            const e = d(t.createElement(\"div\")).addClass(\n              `${s.slideClass} ${s.slideBlankClass}`\n            );\n            r.append(e);\n          }\n          n = r.children(`.${s.slideClass}`);\n        }\n      }\n      \"auto\" !== s.slidesPerView ||\n        s.loopedSlides ||\n        (s.loopedSlides = n.length),\n        (e.loopedSlides = Math.ceil(\n          parseFloat(s.loopedSlides || s.slidesPerView, 10)\n        )),\n        (e.loopedSlides += s.loopAdditionalSlides),\n        e.loopedSlides > n.length && (e.loopedSlides = n.length);\n      const l = [],\n        o = [];\n      n.each((t, s) => {\n        const a = d(t);\n        s < e.loopedSlides && o.push(t),\n          s < n.length && s >= n.length - e.loopedSlides && l.push(t),\n          a.attr(\"data-swiper-slide-index\", s);\n      });\n      for (let e = 0; e < o.length; e += 1)\n        r.append(d(o[e].cloneNode(!0)).addClass(s.slideDuplicateClass));\n      for (let e = l.length - 1; e >= 0; e -= 1)\n        r.prepend(d(l[e].cloneNode(!0)).addClass(s.slideDuplicateClass));\n    },\n    loopFix: function () {\n      const e = this;\n      e.emit(\"beforeLoopFix\");\n      const {\n        activeIndex: t,\n        slides: s,\n        loopedSlides: a,\n        allowSlidePrev: i,\n        allowSlideNext: r,\n        snapGrid: n,\n        rtlTranslate: l,\n      } = e;\n      let o;\n      (e.allowSlidePrev = !0), (e.allowSlideNext = !0);\n      const d = -n[t] - e.getTranslate();\n      if (t < a) {\n        (o = s.length - 3 * a + t), (o += a);\n        e.slideTo(o, 0, !1, !0) &&\n          0 !== d &&\n          e.setTranslate((l ? -e.translate : e.translate) - d);\n      } else if (t >= s.length - a) {\n        (o = -s.length + t + a), (o += a);\n        e.slideTo(o, 0, !1, !0) &&\n          0 !== d &&\n          e.setTranslate((l ? -e.translate : e.translate) - d);\n      }\n      (e.allowSlidePrev = i), (e.allowSlideNext = r), e.emit(\"loopFix\");\n    },\n    loopDestroy: function () {\n      const { $wrapperEl: e, params: t, slides: s } = this;\n      e\n        .children(\n          `.${t.slideClass}.${t.slideDuplicateClass},.${t.slideClass}.${t.slideBlankClass}`\n        )\n        .remove(),\n        s.removeAttr(\"data-swiper-slide-index\");\n    },\n  };\n  function O(e) {\n    const t = this,\n      s = a(),\n      i = r(),\n      n = t.touchEventsData,\n      { params: l, touches: o, enabled: c } = t;\n    if (!c) return;\n    if (t.animating && l.preventInteractionOnTransition) return;\n    !t.animating && l.cssMode && l.loop && t.loopFix();\n    let p = e;\n    p.originalEvent && (p = p.originalEvent);\n    let h = d(p.target);\n    if (\"wrapper\" === l.touchEventsTarget && !h.closest(t.wrapperEl).length)\n      return;\n    if (\n      ((n.isTouchEvent = \"touchstart\" === p.type),\n      !n.isTouchEvent && \"which\" in p && 3 === p.which)\n    )\n      return;\n    if (!n.isTouchEvent && \"button\" in p && p.button > 0) return;\n    if (n.isTouched && n.isMoved) return;\n    !!l.noSwipingClass &&\n      \"\" !== l.noSwipingClass &&\n      p.target &&\n      p.target.shadowRoot &&\n      e.path &&\n      e.path[0] &&\n      (h = d(e.path[0]));\n    const m = l.noSwipingSelector\n        ? l.noSwipingSelector\n        : `.${l.noSwipingClass}`,\n      f = !(!p.target || !p.target.shadowRoot);\n    if (\n      l.noSwiping &&\n      (f\n        ? (function (e, t) {\n            return (\n              void 0 === t && (t = this),\n              (function t(s) {\n                return s && s !== a() && s !== r()\n                  ? (s.assignedSlot && (s = s.assignedSlot),\n                    s.closest(e) || t(s.getRootNode().host))\n                  : null;\n              })(t)\n            );\n          })(m, p.target)\n        : h.closest(m)[0])\n    )\n      return void (t.allowClick = !0);\n    if (l.swipeHandler && !h.closest(l.swipeHandler)[0]) return;\n    (o.currentX = \"touchstart\" === p.type ? p.targetTouches[0].pageX : p.pageX),\n      (o.currentY =\n        \"touchstart\" === p.type ? p.targetTouches[0].pageY : p.pageY);\n    const g = o.currentX,\n      v = o.currentY,\n      w = l.edgeSwipeDetection || l.iOSEdgeSwipeDetection,\n      b = l.edgeSwipeThreshold || l.iOSEdgeSwipeThreshold;\n    if (w && (g <= b || g >= i.innerWidth - b)) {\n      if (\"prevent\" !== w) return;\n      e.preventDefault();\n    }\n    if (\n      (Object.assign(n, {\n        isTouched: !0,\n        isMoved: !1,\n        allowTouchCallbacks: !0,\n        isScrolling: void 0,\n        startMoving: void 0,\n      }),\n      (o.startX = g),\n      (o.startY = v),\n      (n.touchStartTime = u()),\n      (t.allowClick = !0),\n      t.updateSize(),\n      (t.swipeDirection = void 0),\n      l.threshold > 0 && (n.allowThresholdMove = !1),\n      \"touchstart\" !== p.type)\n    ) {\n      let e = !0;\n      h.is(n.focusableElements) &&\n        ((e = !1), \"SELECT\" === h[0].nodeName && (n.isTouched = !1)),\n        s.activeElement &&\n          d(s.activeElement).is(n.focusableElements) &&\n          s.activeElement !== h[0] &&\n          s.activeElement.blur();\n      const a = e && t.allowTouchMove && l.touchStartPreventDefault;\n      (!l.touchStartForcePreventDefault && !a) ||\n        h[0].isContentEditable ||\n        p.preventDefault();\n    }\n    t.params.freeMode &&\n      t.params.freeMode.enabled &&\n      t.freeMode &&\n      t.animating &&\n      !l.cssMode &&\n      t.freeMode.onTouchStart(),\n      t.emit(\"touchStart\", p);\n  }\n  function I(e) {\n    const t = a(),\n      s = this,\n      i = s.touchEventsData,\n      { params: r, touches: n, rtlTranslate: l, enabled: o } = s;\n    if (!o) return;\n    let c = e;\n    if ((c.originalEvent && (c = c.originalEvent), !i.isTouched))\n      return void (\n        i.startMoving &&\n        i.isScrolling &&\n        s.emit(\"touchMoveOpposite\", c)\n      );\n    if (i.isTouchEvent && \"touchmove\" !== c.type) return;\n    const p =\n        \"touchmove\" === c.type &&\n        c.targetTouches &&\n        (c.targetTouches[0] || c.changedTouches[0]),\n      h = \"touchmove\" === c.type ? p.pageX : c.pageX,\n      m = \"touchmove\" === c.type ? p.pageY : c.pageY;\n    if (c.preventedByNestedSwiper) return (n.startX = h), void (n.startY = m);\n    if (!s.allowTouchMove)\n      return (\n        d(c.target).is(i.focusableElements) || (s.allowClick = !1),\n        void (\n          i.isTouched &&\n          (Object.assign(n, { startX: h, startY: m, currentX: h, currentY: m }),\n          (i.touchStartTime = u()))\n        )\n      );\n    if (i.isTouchEvent && r.touchReleaseOnEdges && !r.loop)\n      if (s.isVertical()) {\n        if (\n          (m < n.startY && s.translate <= s.maxTranslate()) ||\n          (m > n.startY && s.translate >= s.minTranslate())\n        )\n          return (i.isTouched = !1), void (i.isMoved = !1);\n      } else if (\n        (h < n.startX && s.translate <= s.maxTranslate()) ||\n        (h > n.startX && s.translate >= s.minTranslate())\n      )\n        return;\n    if (\n      i.isTouchEvent &&\n      t.activeElement &&\n      c.target === t.activeElement &&\n      d(c.target).is(i.focusableElements)\n    )\n      return (i.isMoved = !0), void (s.allowClick = !1);\n    if (\n      (i.allowTouchCallbacks && s.emit(\"touchMove\", c),\n      c.targetTouches && c.targetTouches.length > 1)\n    )\n      return;\n    (n.currentX = h), (n.currentY = m);\n    const f = n.currentX - n.startX,\n      g = n.currentY - n.startY;\n    if (s.params.threshold && Math.sqrt(f ** 2 + g ** 2) < s.params.threshold)\n      return;\n    if (void 0 === i.isScrolling) {\n      let e;\n      (s.isHorizontal() && n.currentY === n.startY) ||\n      (s.isVertical() && n.currentX === n.startX)\n        ? (i.isScrolling = !1)\n        : f * f + g * g >= 25 &&\n          ((e = (180 * Math.atan2(Math.abs(g), Math.abs(f))) / Math.PI),\n          (i.isScrolling = s.isHorizontal()\n            ? e > r.touchAngle\n            : 90 - e > r.touchAngle));\n    }\n    if (\n      (i.isScrolling && s.emit(\"touchMoveOpposite\", c),\n      void 0 === i.startMoving &&\n        ((n.currentX === n.startX && n.currentY === n.startY) ||\n          (i.startMoving = !0)),\n      i.isScrolling)\n    )\n      return void (i.isTouched = !1);\n    if (!i.startMoving) return;\n    (s.allowClick = !1),\n      !r.cssMode && c.cancelable && c.preventDefault(),\n      r.touchMoveStopPropagation && !r.nested && c.stopPropagation(),\n      i.isMoved ||\n        (r.loop && !r.cssMode && s.loopFix(),\n        (i.startTranslate = s.getTranslate()),\n        s.setTransition(0),\n        s.animating &&\n          s.$wrapperEl.trigger(\"webkitTransitionEnd transitionend\"),\n        (i.allowMomentumBounce = !1),\n        !r.grabCursor ||\n          (!0 !== s.allowSlideNext && !0 !== s.allowSlidePrev) ||\n          s.setGrabCursor(!0),\n        s.emit(\"sliderFirstMove\", c)),\n      s.emit(\"sliderMove\", c),\n      (i.isMoved = !0);\n    let v = s.isHorizontal() ? f : g;\n    (n.diff = v),\n      (v *= r.touchRatio),\n      l && (v = -v),\n      (s.swipeDirection = v > 0 ? \"prev\" : \"next\"),\n      (i.currentTranslate = v + i.startTranslate);\n    let w = !0,\n      b = r.resistanceRatio;\n    if (\n      (r.touchReleaseOnEdges && (b = 0),\n      v > 0 && i.currentTranslate > s.minTranslate()\n        ? ((w = !1),\n          r.resistance &&\n            (i.currentTranslate =\n              s.minTranslate() -\n              1 +\n              (-s.minTranslate() + i.startTranslate + v) ** b))\n        : v < 0 &&\n          i.currentTranslate < s.maxTranslate() &&\n          ((w = !1),\n          r.resistance &&\n            (i.currentTranslate =\n              s.maxTranslate() +\n              1 -\n              (s.maxTranslate() - i.startTranslate - v) ** b)),\n      w && (c.preventedByNestedSwiper = !0),\n      !s.allowSlideNext &&\n        \"next\" === s.swipeDirection &&\n        i.currentTranslate < i.startTranslate &&\n        (i.currentTranslate = i.startTranslate),\n      !s.allowSlidePrev &&\n        \"prev\" === s.swipeDirection &&\n        i.currentTranslate > i.startTranslate &&\n        (i.currentTranslate = i.startTranslate),\n      s.allowSlidePrev ||\n        s.allowSlideNext ||\n        (i.currentTranslate = i.startTranslate),\n      r.threshold > 0)\n    ) {\n      if (!(Math.abs(v) > r.threshold || i.allowThresholdMove))\n        return void (i.currentTranslate = i.startTranslate);\n      if (!i.allowThresholdMove)\n        return (\n          (i.allowThresholdMove = !0),\n          (n.startX = n.currentX),\n          (n.startY = n.currentY),\n          (i.currentTranslate = i.startTranslate),\n          void (n.diff = s.isHorizontal()\n            ? n.currentX - n.startX\n            : n.currentY - n.startY)\n        );\n    }\n    r.followFinger &&\n      !r.cssMode &&\n      (((r.freeMode && r.freeMode.enabled && s.freeMode) ||\n        r.watchSlidesProgress) &&\n        (s.updateActiveIndex(), s.updateSlidesClasses()),\n      s.params.freeMode &&\n        r.freeMode.enabled &&\n        s.freeMode &&\n        s.freeMode.onTouchMove(),\n      s.updateProgress(i.currentTranslate),\n      s.setTranslate(i.currentTranslate));\n  }\n  function L(e) {\n    const t = this,\n      s = t.touchEventsData,\n      { params: a, touches: i, rtlTranslate: r, slidesGrid: n, enabled: l } = t;\n    if (!l) return;\n    let o = e;\n    if (\n      (o.originalEvent && (o = o.originalEvent),\n      s.allowTouchCallbacks && t.emit(\"touchEnd\", o),\n      (s.allowTouchCallbacks = !1),\n      !s.isTouched)\n    )\n      return (\n        s.isMoved && a.grabCursor && t.setGrabCursor(!1),\n        (s.isMoved = !1),\n        void (s.startMoving = !1)\n      );\n    a.grabCursor &&\n      s.isMoved &&\n      s.isTouched &&\n      (!0 === t.allowSlideNext || !0 === t.allowSlidePrev) &&\n      t.setGrabCursor(!1);\n    const d = u(),\n      c = d - s.touchStartTime;\n    if (t.allowClick) {\n      const e = o.path || (o.composedPath && o.composedPath());\n      t.updateClickedSlide((e && e[0]) || o.target),\n        t.emit(\"tap click\", o),\n        c < 300 &&\n          d - s.lastClickTime < 300 &&\n          t.emit(\"doubleTap doubleClick\", o);\n    }\n    if (\n      ((s.lastClickTime = u()),\n      p(() => {\n        t.destroyed || (t.allowClick = !0);\n      }),\n      !s.isTouched ||\n        !s.isMoved ||\n        !t.swipeDirection ||\n        0 === i.diff ||\n        s.currentTranslate === s.startTranslate)\n    )\n      return (s.isTouched = !1), (s.isMoved = !1), void (s.startMoving = !1);\n    let h;\n    if (\n      ((s.isTouched = !1),\n      (s.isMoved = !1),\n      (s.startMoving = !1),\n      (h = a.followFinger\n        ? r\n          ? t.translate\n          : -t.translate\n        : -s.currentTranslate),\n      a.cssMode)\n    )\n      return;\n    if (t.params.freeMode && a.freeMode.enabled)\n      return void t.freeMode.onTouchEnd({ currentPos: h });\n    let m = 0,\n      f = t.slidesSizesGrid[0];\n    for (\n      let e = 0;\n      e < n.length;\n      e += e < a.slidesPerGroupSkip ? 1 : a.slidesPerGroup\n    ) {\n      const t = e < a.slidesPerGroupSkip - 1 ? 1 : a.slidesPerGroup;\n      void 0 !== n[e + t]\n        ? h >= n[e] && h < n[e + t] && ((m = e), (f = n[e + t] - n[e]))\n        : h >= n[e] && ((m = e), (f = n[n.length - 1] - n[n.length - 2]));\n    }\n    let g = null,\n      v = null;\n    a.rewind &&\n      (t.isBeginning\n        ? (v =\n            t.params.virtual && t.params.virtual.enabled && t.virtual\n              ? t.virtual.slides.length - 1\n              : t.slides.length - 1)\n        : t.isEnd && (g = 0));\n    const w = (h - n[m]) / f,\n      b = m < a.slidesPerGroupSkip - 1 ? 1 : a.slidesPerGroup;\n    if (c > a.longSwipesMs) {\n      if (!a.longSwipes) return void t.slideTo(t.activeIndex);\n      \"next\" === t.swipeDirection &&\n        (w >= a.longSwipesRatio\n          ? t.slideTo(a.rewind && t.isEnd ? g : m + b)\n          : t.slideTo(m)),\n        \"prev\" === t.swipeDirection &&\n          (w > 1 - a.longSwipesRatio\n            ? t.slideTo(m + b)\n            : null !== v && w < 0 && Math.abs(w) > a.longSwipesRatio\n            ? t.slideTo(v)\n            : t.slideTo(m));\n    } else {\n      if (!a.shortSwipes) return void t.slideTo(t.activeIndex);\n      t.navigation &&\n      (o.target === t.navigation.nextEl || o.target === t.navigation.prevEl)\n        ? o.target === t.navigation.nextEl\n          ? t.slideTo(m + b)\n          : t.slideTo(m)\n        : (\"next\" === t.swipeDirection && t.slideTo(null !== g ? g : m + b),\n          \"prev\" === t.swipeDirection && t.slideTo(null !== v ? v : m));\n    }\n  }\n  function A() {\n    const e = this,\n      { params: t, el: s } = e;\n    if (s && 0 === s.offsetWidth) return;\n    t.breakpoints && e.setBreakpoint();\n    const { allowSlideNext: a, allowSlidePrev: i, snapGrid: r } = e;\n    (e.allowSlideNext = !0),\n      (e.allowSlidePrev = !0),\n      e.updateSize(),\n      e.updateSlides(),\n      e.updateSlidesClasses(),\n      (\"auto\" === t.slidesPerView || t.slidesPerView > 1) &&\n      e.isEnd &&\n      !e.isBeginning &&\n      !e.params.centeredSlides\n        ? e.slideTo(e.slides.length - 1, 0, !1, !0)\n        : e.slideTo(e.activeIndex, 0, !1, !0),\n      e.autoplay && e.autoplay.running && e.autoplay.paused && e.autoplay.run(),\n      (e.allowSlidePrev = i),\n      (e.allowSlideNext = a),\n      e.params.watchOverflow && r !== e.snapGrid && e.checkOverflow();\n  }\n  function D(e) {\n    const t = this;\n    t.enabled &&\n      (t.allowClick ||\n        (t.params.preventClicks && e.preventDefault(),\n        t.params.preventClicksPropagation &&\n          t.animating &&\n          (e.stopPropagation(), e.stopImmediatePropagation())));\n  }\n  function G() {\n    const e = this,\n      { wrapperEl: t, rtlTranslate: s, enabled: a } = e;\n    if (!a) return;\n    let i;\n    (e.previousTranslate = e.translate),\n      e.isHorizontal()\n        ? (e.translate = -t.scrollLeft)\n        : (e.translate = -t.scrollTop),\n      -0 === e.translate && (e.translate = 0),\n      e.updateActiveIndex(),\n      e.updateSlidesClasses();\n    const r = e.maxTranslate() - e.minTranslate();\n    (i = 0 === r ? 0 : (e.translate - e.minTranslate()) / r),\n      i !== e.progress && e.updateProgress(s ? -e.translate : e.translate),\n      e.emit(\"setTranslate\", e.translate, !1);\n  }\n  let B = !1;\n  function N() {}\n  const H = (e, t) => {\n    const s = a(),\n      {\n        params: i,\n        touchEvents: r,\n        el: n,\n        wrapperEl: l,\n        device: o,\n        support: d,\n      } = e,\n      c = !!i.nested,\n      p = \"on\" === t ? \"addEventListener\" : \"removeEventListener\",\n      u = t;\n    if (d.touch) {\n      const t = !(\n        \"touchstart\" !== r.start ||\n        !d.passiveListener ||\n        !i.passiveListeners\n      ) && { passive: !0, capture: !1 };\n      n[p](r.start, e.onTouchStart, t),\n        n[p](\n          r.move,\n          e.onTouchMove,\n          d.passiveListener ? { passive: !1, capture: c } : c\n        ),\n        n[p](r.end, e.onTouchEnd, t),\n        r.cancel && n[p](r.cancel, e.onTouchEnd, t);\n    } else\n      n[p](r.start, e.onTouchStart, !1),\n        s[p](r.move, e.onTouchMove, c),\n        s[p](r.end, e.onTouchEnd, !1);\n    (i.preventClicks || i.preventClicksPropagation) &&\n      n[p](\"click\", e.onClick, !0),\n      i.cssMode && l[p](\"scroll\", e.onScroll),\n      i.updateOnWindowResize\n        ? e[u](\n            o.ios || o.android\n              ? \"resize orientationchange observerUpdate\"\n              : \"resize observerUpdate\",\n            A,\n            !0\n          )\n        : e[u](\"observerUpdate\", A, !0);\n  };\n  var X = {\n    attachEvents: function () {\n      const e = this,\n        t = a(),\n        { params: s, support: i } = e;\n      (e.onTouchStart = O.bind(e)),\n        (e.onTouchMove = I.bind(e)),\n        (e.onTouchEnd = L.bind(e)),\n        s.cssMode && (e.onScroll = G.bind(e)),\n        (e.onClick = D.bind(e)),\n        i.touch && !B && (t.addEventListener(\"touchstart\", N), (B = !0)),\n        H(e, \"on\");\n    },\n    detachEvents: function () {\n      H(this, \"off\");\n    },\n  };\n  const Y = (e, t) => e.grid && t.grid && t.grid.rows > 1;\n  var R = {\n    addClasses: function () {\n      const e = this,\n        { classNames: t, params: s, rtl: a, $el: i, device: r, support: n } = e,\n        l = (function (e, t) {\n          const s = [];\n          return (\n            e.forEach((e) => {\n              \"object\" == typeof e\n                ? Object.keys(e).forEach((a) => {\n                    e[a] && s.push(t + a);\n                  })\n                : \"string\" == typeof e && s.push(t + e);\n            }),\n            s\n          );\n        })(\n          [\n            \"initialized\",\n            s.direction,\n            { \"pointer-events\": !n.touch },\n            { \"free-mode\": e.params.freeMode && s.freeMode.enabled },\n            { autoheight: s.autoHeight },\n            { rtl: a },\n            { grid: s.grid && s.grid.rows > 1 },\n            {\n              \"grid-column\":\n                s.grid && s.grid.rows > 1 && \"column\" === s.grid.fill,\n            },\n            { android: r.android },\n            { ios: r.ios },\n            { \"css-mode\": s.cssMode },\n            { centered: s.cssMode && s.centeredSlides },\n          ],\n          s.containerModifierClass\n        );\n      t.push(...l), i.addClass([...t].join(\" \")), e.emitContainerClasses();\n    },\n    removeClasses: function () {\n      const { $el: e, classNames: t } = this;\n      e.removeClass(t.join(\" \")), this.emitContainerClasses();\n    },\n  };\n  var W = {\n    init: !0,\n    direction: \"horizontal\",\n    touchEventsTarget: \"wrapper\",\n    initialSlide: 0,\n    speed: 300,\n    cssMode: !1,\n    updateOnWindowResize: !0,\n    resizeObserver: !0,\n    nested: !1,\n    createElements: !1,\n    enabled: !0,\n    focusableElements: \"input, select, option, textarea, button, video, label\",\n    width: null,\n    height: null,\n    preventInteractionOnTransition: !1,\n    userAgent: null,\n    url: null,\n    edgeSwipeDetection: !1,\n    edgeSwipeThreshold: 20,\n    autoHeight: !1,\n    setWrapperSize: !1,\n    virtualTranslate: !1,\n    effect: \"slide\",\n    breakpoints: void 0,\n    breakpointsBase: \"window\",\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerGroup: 1,\n    slidesPerGroupSkip: 0,\n    slidesPerGroupAuto: !1,\n    centeredSlides: !1,\n    centeredSlidesBounds: !1,\n    slidesOffsetBefore: 0,\n    slidesOffsetAfter: 0,\n    normalizeSlideIndex: !0,\n    centerInsufficientSlides: !1,\n    watchOverflow: !0,\n    roundLengths: !1,\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: !0,\n    shortSwipes: !0,\n    longSwipes: !0,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: !0,\n    allowTouchMove: !0,\n    threshold: 0,\n    touchMoveStopPropagation: !1,\n    touchStartPreventDefault: !0,\n    touchStartForcePreventDefault: !1,\n    touchReleaseOnEdges: !1,\n    uniqueNavElements: !0,\n    resistance: !0,\n    resistanceRatio: 0.85,\n    watchSlidesProgress: !1,\n    grabCursor: !1,\n    preventClicks: !0,\n    preventClicksPropagation: !0,\n    slideToClickedSlide: !1,\n    preloadImages: !0,\n    updateOnImagesReady: !0,\n    loop: !1,\n    loopAdditionalSlides: 0,\n    loopedSlides: null,\n    loopFillGroupWithBlank: !1,\n    loopPreventsSlide: !0,\n    rewind: !1,\n    allowSlidePrev: !0,\n    allowSlideNext: !0,\n    swipeHandler: null,\n    noSwiping: !0,\n    noSwipingClass: \"swiper-no-swiping\",\n    noSwipingSelector: null,\n    passiveListeners: !0,\n    maxBackfaceHiddenSlides: 10,\n    containerModifierClass: \"swiper-\",\n    slideClass: \"swiper-slide\",\n    slideBlankClass: \"swiper-slide-invisible-blank\",\n    slideActiveClass: \"swiper-slide-active\",\n    slideDuplicateActiveClass: \"swiper-slide-duplicate-active\",\n    slideVisibleClass: \"swiper-slide-visible\",\n    slideDuplicateClass: \"swiper-slide-duplicate\",\n    slideNextClass: \"swiper-slide-next\",\n    slideDuplicateNextClass: \"swiper-slide-duplicate-next\",\n    slidePrevClass: \"swiper-slide-prev\",\n    slideDuplicatePrevClass: \"swiper-slide-duplicate-prev\",\n    wrapperClass: \"swiper-wrapper\",\n    runCallbacksOnInit: !0,\n    _emitClasses: !1,\n  };\n  function j(e, t) {\n    return function (s) {\n      void 0 === s && (s = {});\n      const a = Object.keys(s)[0],\n        i = s[a];\n      \"object\" == typeof i && null !== i\n        ? ([\"navigation\", \"pagination\", \"scrollbar\"].indexOf(a) >= 0 &&\n            !0 === e[a] &&\n            (e[a] = { auto: !0 }),\n          a in e && \"enabled\" in i\n            ? (!0 === e[a] && (e[a] = { enabled: !0 }),\n              \"object\" != typeof e[a] ||\n                \"enabled\" in e[a] ||\n                (e[a].enabled = !0),\n              e[a] || (e[a] = { enabled: !1 }),\n              g(t, s))\n            : g(t, s))\n        : g(t, s);\n    };\n  }\n  const _ = {\n      eventsEmitter: $,\n      update: S,\n      translate: M,\n      transition: {\n        setTransition: function (e, t) {\n          const s = this;\n          s.params.cssMode || s.$wrapperEl.transition(e),\n            s.emit(\"setTransition\", e, t);\n        },\n        transitionStart: function (e, t) {\n          void 0 === e && (e = !0);\n          const s = this,\n            { params: a } = s;\n          a.cssMode ||\n            (a.autoHeight && s.updateAutoHeight(),\n            P({ swiper: s, runCallbacks: e, direction: t, step: \"Start\" }));\n        },\n        transitionEnd: function (e, t) {\n          void 0 === e && (e = !0);\n          const s = this,\n            { params: a } = s;\n          (s.animating = !1),\n            a.cssMode ||\n              (s.setTransition(0),\n              P({ swiper: s, runCallbacks: e, direction: t, step: \"End\" }));\n        },\n      },\n      slide: k,\n      loop: z,\n      grabCursor: {\n        setGrabCursor: function (e) {\n          const t = this;\n          if (\n            t.support.touch ||\n            !t.params.simulateTouch ||\n            (t.params.watchOverflow && t.isLocked) ||\n            t.params.cssMode\n          )\n            return;\n          const s =\n            \"container\" === t.params.touchEventsTarget ? t.el : t.wrapperEl;\n          (s.style.cursor = \"move\"),\n            (s.style.cursor = e ? \"-webkit-grabbing\" : \"-webkit-grab\"),\n            (s.style.cursor = e ? \"-moz-grabbin\" : \"-moz-grab\"),\n            (s.style.cursor = e ? \"grabbing\" : \"grab\");\n        },\n        unsetGrabCursor: function () {\n          const e = this;\n          e.support.touch ||\n            (e.params.watchOverflow && e.isLocked) ||\n            e.params.cssMode ||\n            (e[\n              \"container\" === e.params.touchEventsTarget ? \"el\" : \"wrapperEl\"\n            ].style.cursor = \"\");\n        },\n      },\n      events: X,\n      breakpoints: {\n        setBreakpoint: function () {\n          const e = this,\n            {\n              activeIndex: t,\n              initialized: s,\n              loopedSlides: a = 0,\n              params: i,\n              $el: r,\n            } = e,\n            n = i.breakpoints;\n          if (!n || (n && 0 === Object.keys(n).length)) return;\n          const l = e.getBreakpoint(n, e.params.breakpointsBase, e.el);\n          if (!l || e.currentBreakpoint === l) return;\n          const o = (l in n ? n[l] : void 0) || e.originalParams,\n            d = Y(e, i),\n            c = Y(e, o),\n            p = i.enabled;\n          d && !c\n            ? (r.removeClass(\n                `${i.containerModifierClass}grid ${i.containerModifierClass}grid-column`\n              ),\n              e.emitContainerClasses())\n            : !d &&\n              c &&\n              (r.addClass(`${i.containerModifierClass}grid`),\n              ((o.grid.fill && \"column\" === o.grid.fill) ||\n                (!o.grid.fill && \"column\" === i.grid.fill)) &&\n                r.addClass(`${i.containerModifierClass}grid-column`),\n              e.emitContainerClasses());\n          const u = o.direction && o.direction !== i.direction,\n            h = i.loop && (o.slidesPerView !== i.slidesPerView || u);\n          u && s && e.changeDirection(), g(e.params, o);\n          const m = e.params.enabled;\n          Object.assign(e, {\n            allowTouchMove: e.params.allowTouchMove,\n            allowSlideNext: e.params.allowSlideNext,\n            allowSlidePrev: e.params.allowSlidePrev,\n          }),\n            p && !m ? e.disable() : !p && m && e.enable(),\n            (e.currentBreakpoint = l),\n            e.emit(\"_beforeBreakpoint\", o),\n            h &&\n              s &&\n              (e.loopDestroy(),\n              e.loopCreate(),\n              e.updateSlides(),\n              e.slideTo(t - a + e.loopedSlides, 0, !1)),\n            e.emit(\"breakpoint\", o);\n        },\n        getBreakpoint: function (e, t, s) {\n          if ((void 0 === t && (t = \"window\"), !e || (\"container\" === t && !s)))\n            return;\n          let a = !1;\n          const i = r(),\n            n = \"window\" === t ? i.innerHeight : s.clientHeight,\n            l = Object.keys(e).map((e) => {\n              if (\"string\" == typeof e && 0 === e.indexOf(\"@\")) {\n                const t = parseFloat(e.substr(1));\n                return { value: n * t, point: e };\n              }\n              return { value: e, point: e };\n            });\n          l.sort((e, t) => parseInt(e.value, 10) - parseInt(t.value, 10));\n          for (let e = 0; e < l.length; e += 1) {\n            const { point: r, value: n } = l[e];\n            \"window\" === t\n              ? i.matchMedia(`(min-width: ${n}px)`).matches && (a = r)\n              : n <= s.clientWidth && (a = r);\n          }\n          return a || \"max\";\n        },\n      },\n      checkOverflow: {\n        checkOverflow: function () {\n          const e = this,\n            { isLocked: t, params: s } = e,\n            { slidesOffsetBefore: a } = s;\n          if (a) {\n            const t = e.slides.length - 1,\n              s = e.slidesGrid[t] + e.slidesSizesGrid[t] + 2 * a;\n            e.isLocked = e.size > s;\n          } else e.isLocked = 1 === e.snapGrid.length;\n          !0 === s.allowSlideNext && (e.allowSlideNext = !e.isLocked),\n            !0 === s.allowSlidePrev && (e.allowSlidePrev = !e.isLocked),\n            t && t !== e.isLocked && (e.isEnd = !1),\n            t !== e.isLocked && e.emit(e.isLocked ? \"lock\" : \"unlock\");\n        },\n      },\n      classes: R,\n      images: {\n        loadImage: function (e, t, s, a, i, n) {\n          const l = r();\n          let o;\n          function c() {\n            n && n();\n          }\n          d(e).parent(\"picture\")[0] || (e.complete && i)\n            ? c()\n            : t\n            ? ((o = new l.Image()),\n              (o.onload = c),\n              (o.onerror = c),\n              a && (o.sizes = a),\n              s && (o.srcset = s),\n              t && (o.src = t))\n            : c();\n        },\n        preloadImages: function () {\n          const e = this;\n          function t() {\n            null != e &&\n              e &&\n              !e.destroyed &&\n              (void 0 !== e.imagesLoaded && (e.imagesLoaded += 1),\n              e.imagesLoaded === e.imagesToLoad.length &&\n                (e.params.updateOnImagesReady && e.update(),\n                e.emit(\"imagesReady\")));\n          }\n          e.imagesToLoad = e.$el.find(\"img\");\n          for (let s = 0; s < e.imagesToLoad.length; s += 1) {\n            const a = e.imagesToLoad[s];\n            e.loadImage(\n              a,\n              a.currentSrc || a.getAttribute(\"src\"),\n              a.srcset || a.getAttribute(\"srcset\"),\n              a.sizes || a.getAttribute(\"sizes\"),\n              !0,\n              t\n            );\n          }\n        },\n      },\n    },\n    q = {};\n  class V {\n    constructor() {\n      let e, t;\n      for (var s = arguments.length, a = new Array(s), i = 0; i < s; i++)\n        a[i] = arguments[i];\n      if (\n        (1 === a.length &&\n        a[0].constructor &&\n        \"Object\" === Object.prototype.toString.call(a[0]).slice(8, -1)\n          ? (t = a[0])\n          : ([e, t] = a),\n        t || (t = {}),\n        (t = g({}, t)),\n        e && !t.el && (t.el = e),\n        t.el && d(t.el).length > 1)\n      ) {\n        const e = [];\n        return (\n          d(t.el).each((s) => {\n            const a = g({}, t, { el: s });\n            e.push(new V(a));\n          }),\n          e\n        );\n      }\n      const r = this;\n      (r.__swiper__ = !0),\n        (r.support = E()),\n        (r.device = T({ userAgent: t.userAgent })),\n        (r.browser = C()),\n        (r.eventsListeners = {}),\n        (r.eventsAnyListeners = []),\n        (r.modules = [...r.__modules__]),\n        t.modules && Array.isArray(t.modules) && r.modules.push(...t.modules);\n      const n = {};\n      r.modules.forEach((e) => {\n        e({\n          swiper: r,\n          extendParams: j(t, n),\n          on: r.on.bind(r),\n          once: r.once.bind(r),\n          off: r.off.bind(r),\n          emit: r.emit.bind(r),\n        });\n      });\n      const l = g({}, W, n);\n      return (\n        (r.params = g({}, l, q, t)),\n        (r.originalParams = g({}, r.params)),\n        (r.passedParams = g({}, t)),\n        r.params &&\n          r.params.on &&\n          Object.keys(r.params.on).forEach((e) => {\n            r.on(e, r.params.on[e]);\n          }),\n        r.params && r.params.onAny && r.onAny(r.params.onAny),\n        (r.$ = d),\n        Object.assign(r, {\n          enabled: r.params.enabled,\n          el: e,\n          classNames: [],\n          slides: d(),\n          slidesGrid: [],\n          snapGrid: [],\n          slidesSizesGrid: [],\n          isHorizontal: () => \"horizontal\" === r.params.direction,\n          isVertical: () => \"vertical\" === r.params.direction,\n          activeIndex: 0,\n          realIndex: 0,\n          isBeginning: !0,\n          isEnd: !1,\n          translate: 0,\n          previousTranslate: 0,\n          progress: 0,\n          velocity: 0,\n          animating: !1,\n          allowSlideNext: r.params.allowSlideNext,\n          allowSlidePrev: r.params.allowSlidePrev,\n          touchEvents: (function () {\n            const e = [\"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\"],\n              t = [\"pointerdown\", \"pointermove\", \"pointerup\"];\n            return (\n              (r.touchEventsTouch = {\n                start: e[0],\n                move: e[1],\n                end: e[2],\n                cancel: e[3],\n              }),\n              (r.touchEventsDesktop = { start: t[0], move: t[1], end: t[2] }),\n              r.support.touch || !r.params.simulateTouch\n                ? r.touchEventsTouch\n                : r.touchEventsDesktop\n            );\n          })(),\n          touchEventsData: {\n            isTouched: void 0,\n            isMoved: void 0,\n            allowTouchCallbacks: void 0,\n            touchStartTime: void 0,\n            isScrolling: void 0,\n            currentTranslate: void 0,\n            startTranslate: void 0,\n            allowThresholdMove: void 0,\n            focusableElements: r.params.focusableElements,\n            lastClickTime: u(),\n            clickTimeout: void 0,\n            velocities: [],\n            allowMomentumBounce: void 0,\n            isTouchEvent: void 0,\n            startMoving: void 0,\n          },\n          allowClick: !0,\n          allowTouchMove: r.params.allowTouchMove,\n          touches: { startX: 0, startY: 0, currentX: 0, currentY: 0, diff: 0 },\n          imagesToLoad: [],\n          imagesLoaded: 0,\n        }),\n        r.emit(\"_swiper\"),\n        r.params.init && r.init(),\n        r\n      );\n    }\n    enable() {\n      const e = this;\n      e.enabled ||\n        ((e.enabled = !0),\n        e.params.grabCursor && e.setGrabCursor(),\n        e.emit(\"enable\"));\n    }\n    disable() {\n      const e = this;\n      e.enabled &&\n        ((e.enabled = !1),\n        e.params.grabCursor && e.unsetGrabCursor(),\n        e.emit(\"disable\"));\n    }\n    setProgress(e, t) {\n      const s = this;\n      e = Math.min(Math.max(e, 0), 1);\n      const a = s.minTranslate(),\n        i = (s.maxTranslate() - a) * e + a;\n      s.translateTo(i, void 0 === t ? 0 : t),\n        s.updateActiveIndex(),\n        s.updateSlidesClasses();\n    }\n    emitContainerClasses() {\n      const e = this;\n      if (!e.params._emitClasses || !e.el) return;\n      const t = e.el.className\n        .split(\" \")\n        .filter(\n          (t) =>\n            0 === t.indexOf(\"swiper\") ||\n            0 === t.indexOf(e.params.containerModifierClass)\n        );\n      e.emit(\"_containerClasses\", t.join(\" \"));\n    }\n    getSlideClasses(e) {\n      const t = this;\n      return e.className\n        .split(\" \")\n        .filter(\n          (e) =>\n            0 === e.indexOf(\"swiper-slide\") ||\n            0 === e.indexOf(t.params.slideClass)\n        )\n        .join(\" \");\n    }\n    emitSlidesClasses() {\n      const e = this;\n      if (!e.params._emitClasses || !e.el) return;\n      const t = [];\n      e.slides.each((s) => {\n        const a = e.getSlideClasses(s);\n        t.push({ slideEl: s, classNames: a }), e.emit(\"_slideClass\", s, a);\n      }),\n        e.emit(\"_slideClasses\", t);\n    }\n    slidesPerViewDynamic(e, t) {\n      void 0 === e && (e = \"current\"), void 0 === t && (t = !1);\n      const {\n        params: s,\n        slides: a,\n        slidesGrid: i,\n        slidesSizesGrid: r,\n        size: n,\n        activeIndex: l,\n      } = this;\n      let o = 1;\n      if (s.centeredSlides) {\n        let e,\n          t = a[l].swiperSlideSize;\n        for (let s = l + 1; s < a.length; s += 1)\n          a[s] &&\n            !e &&\n            ((t += a[s].swiperSlideSize), (o += 1), t > n && (e = !0));\n        for (let s = l - 1; s >= 0; s -= 1)\n          a[s] &&\n            !e &&\n            ((t += a[s].swiperSlideSize), (o += 1), t > n && (e = !0));\n      } else if (\"current\" === e)\n        for (let e = l + 1; e < a.length; e += 1) {\n          (t ? i[e] + r[e] - i[l] < n : i[e] - i[l] < n) && (o += 1);\n        }\n      else\n        for (let e = l - 1; e >= 0; e -= 1) {\n          i[l] - i[e] < n && (o += 1);\n        }\n      return o;\n    }\n    update() {\n      const e = this;\n      if (!e || e.destroyed) return;\n      const { snapGrid: t, params: s } = e;\n      function a() {\n        const t = e.rtlTranslate ? -1 * e.translate : e.translate,\n          s = Math.min(Math.max(t, e.maxTranslate()), e.minTranslate());\n        e.setTranslate(s), e.updateActiveIndex(), e.updateSlidesClasses();\n      }\n      let i;\n      s.breakpoints && e.setBreakpoint(),\n        e.updateSize(),\n        e.updateSlides(),\n        e.updateProgress(),\n        e.updateSlidesClasses(),\n        e.params.freeMode && e.params.freeMode.enabled\n          ? (a(), e.params.autoHeight && e.updateAutoHeight())\n          : ((i =\n              (\"auto\" === e.params.slidesPerView ||\n                e.params.slidesPerView > 1) &&\n              e.isEnd &&\n              !e.params.centeredSlides\n                ? e.slideTo(e.slides.length - 1, 0, !1, !0)\n                : e.slideTo(e.activeIndex, 0, !1, !0)),\n            i || a()),\n        s.watchOverflow && t !== e.snapGrid && e.checkOverflow(),\n        e.emit(\"update\");\n    }\n    changeDirection(e, t) {\n      void 0 === t && (t = !0);\n      const s = this,\n        a = s.params.direction;\n      return (\n        e || (e = \"horizontal\" === a ? \"vertical\" : \"horizontal\"),\n        e === a ||\n          (\"horizontal\" !== e && \"vertical\" !== e) ||\n          (s.$el\n            .removeClass(`${s.params.containerModifierClass}${a}`)\n            .addClass(`${s.params.containerModifierClass}${e}`),\n          s.emitContainerClasses(),\n          (s.params.direction = e),\n          s.slides.each((t) => {\n            \"vertical\" === e ? (t.style.width = \"\") : (t.style.height = \"\");\n          }),\n          s.emit(\"changeDirection\"),\n          t && s.update()),\n        s\n      );\n    }\n    mount(e) {\n      const t = this;\n      if (t.mounted) return !0;\n      const s = d(e || t.params.el);\n      if (!(e = s[0])) return !1;\n      e.swiper = t;\n      const i = () =>\n        `.${(t.params.wrapperClass || \"\").trim().split(\" \").join(\".\")}`;\n      let r = (() => {\n        if (e && e.shadowRoot && e.shadowRoot.querySelector) {\n          const t = d(e.shadowRoot.querySelector(i()));\n          return (t.children = (e) => s.children(e)), t;\n        }\n        return s.children(i());\n      })();\n      if (0 === r.length && t.params.createElements) {\n        const e = a().createElement(\"div\");\n        (r = d(e)),\n          (e.className = t.params.wrapperClass),\n          s.append(e),\n          s.children(`.${t.params.slideClass}`).each((e) => {\n            r.append(e);\n          });\n      }\n      return (\n        Object.assign(t, {\n          $el: s,\n          el: e,\n          $wrapperEl: r,\n          wrapperEl: r[0],\n          mounted: !0,\n          rtl: \"rtl\" === e.dir.toLowerCase() || \"rtl\" === s.css(\"direction\"),\n          rtlTranslate:\n            \"horizontal\" === t.params.direction &&\n            (\"rtl\" === e.dir.toLowerCase() || \"rtl\" === s.css(\"direction\")),\n          wrongRTL: \"-webkit-box\" === r.css(\"display\"),\n        }),\n        !0\n      );\n    }\n    init(e) {\n      const t = this;\n      if (t.initialized) return t;\n      return (\n        !1 === t.mount(e) ||\n          (t.emit(\"beforeInit\"),\n          t.params.breakpoints && t.setBreakpoint(),\n          t.addClasses(),\n          t.params.loop && t.loopCreate(),\n          t.updateSize(),\n          t.updateSlides(),\n          t.params.watchOverflow && t.checkOverflow(),\n          t.params.grabCursor && t.enabled && t.setGrabCursor(),\n          t.params.preloadImages && t.preloadImages(),\n          t.params.loop\n            ? t.slideTo(\n                t.params.initialSlide + t.loopedSlides,\n                0,\n                t.params.runCallbacksOnInit,\n                !1,\n                !0\n              )\n            : t.slideTo(\n                t.params.initialSlide,\n                0,\n                t.params.runCallbacksOnInit,\n                !1,\n                !0\n              ),\n          t.attachEvents(),\n          (t.initialized = !0),\n          t.emit(\"init\"),\n          t.emit(\"afterInit\")),\n        t\n      );\n    }\n    destroy(e, t) {\n      void 0 === e && (e = !0), void 0 === t && (t = !0);\n      const s = this,\n        { params: a, $el: i, $wrapperEl: r, slides: n } = s;\n      return (\n        void 0 === s.params ||\n          s.destroyed ||\n          (s.emit(\"beforeDestroy\"),\n          (s.initialized = !1),\n          s.detachEvents(),\n          a.loop && s.loopDestroy(),\n          t &&\n            (s.removeClasses(),\n            i.removeAttr(\"style\"),\n            r.removeAttr(\"style\"),\n            n &&\n              n.length &&\n              n\n                .removeClass(\n                  [\n                    a.slideVisibleClass,\n                    a.slideActiveClass,\n                    a.slideNextClass,\n                    a.slidePrevClass,\n                  ].join(\" \")\n                )\n                .removeAttr(\"style\")\n                .removeAttr(\"data-swiper-slide-index\")),\n          s.emit(\"destroy\"),\n          Object.keys(s.eventsListeners).forEach((e) => {\n            s.off(e);\n          }),\n          !1 !== e &&\n            ((s.$el[0].swiper = null),\n            (function (e) {\n              const t = e;\n              Object.keys(t).forEach((e) => {\n                try {\n                  t[e] = null;\n                } catch (e) {}\n                try {\n                  delete t[e];\n                } catch (e) {}\n              });\n            })(s)),\n          (s.destroyed = !0)),\n        null\n      );\n    }\n    static extendDefaults(e) {\n      g(q, e);\n    }\n    static get extendedDefaults() {\n      return q;\n    }\n    static get defaults() {\n      return W;\n    }\n    static installModule(e) {\n      V.prototype.__modules__ || (V.prototype.__modules__ = []);\n      const t = V.prototype.__modules__;\n      \"function\" == typeof e && t.indexOf(e) < 0 && t.push(e);\n    }\n    static use(e) {\n      return Array.isArray(e)\n        ? (e.forEach((e) => V.installModule(e)), V)\n        : (V.installModule(e), V);\n    }\n  }\n  function F(e, t, s, i) {\n    const r = a();\n    return (\n      e.params.createElements &&\n        Object.keys(i).forEach((a) => {\n          if (!s[a] && !0 === s.auto) {\n            let n = e.$el.children(`.${i[a]}`)[0];\n            n ||\n              ((n = r.createElement(\"div\")),\n              (n.className = i[a]),\n              e.$el.append(n)),\n              (s[a] = n),\n              (t[a] = n);\n          }\n        }),\n      s\n    );\n  }\n  function U(e) {\n    return (\n      void 0 === e && (e = \"\"),\n      `.${e\n        .trim()\n        .replace(/([\\.:!\\/])/g, \"\\\\$1\")\n        .replace(/ /g, \".\")}`\n    );\n  }\n  function K(e) {\n    const t = this,\n      { $wrapperEl: s, params: a } = t;\n    if ((a.loop && t.loopDestroy(), \"object\" == typeof e && \"length\" in e))\n      for (let t = 0; t < e.length; t += 1) e[t] && s.append(e[t]);\n    else s.append(e);\n    a.loop && t.loopCreate(), a.observer || t.update();\n  }\n  function Z(e) {\n    const t = this,\n      { params: s, $wrapperEl: a, activeIndex: i } = t;\n    s.loop && t.loopDestroy();\n    let r = i + 1;\n    if (\"object\" == typeof e && \"length\" in e) {\n      for (let t = 0; t < e.length; t += 1) e[t] && a.prepend(e[t]);\n      r = i + e.length;\n    } else a.prepend(e);\n    s.loop && t.loopCreate(), s.observer || t.update(), t.slideTo(r, 0, !1);\n  }\n  function J(e, t) {\n    const s = this,\n      { $wrapperEl: a, params: i, activeIndex: r } = s;\n    let n = r;\n    i.loop &&\n      ((n -= s.loopedSlides),\n      s.loopDestroy(),\n      (s.slides = a.children(`.${i.slideClass}`)));\n    const l = s.slides.length;\n    if (e <= 0) return void s.prependSlide(t);\n    if (e >= l) return void s.appendSlide(t);\n    let o = n > e ? n + 1 : n;\n    const d = [];\n    for (let t = l - 1; t >= e; t -= 1) {\n      const e = s.slides.eq(t);\n      e.remove(), d.unshift(e);\n    }\n    if (\"object\" == typeof t && \"length\" in t) {\n      for (let e = 0; e < t.length; e += 1) t[e] && a.append(t[e]);\n      o = n > e ? n + t.length : n;\n    } else a.append(t);\n    for (let e = 0; e < d.length; e += 1) a.append(d[e]);\n    i.loop && s.loopCreate(),\n      i.observer || s.update(),\n      i.loop ? s.slideTo(o + s.loopedSlides, 0, !1) : s.slideTo(o, 0, !1);\n  }\n  function Q(e) {\n    const t = this,\n      { params: s, $wrapperEl: a, activeIndex: i } = t;\n    let r = i;\n    s.loop &&\n      ((r -= t.loopedSlides),\n      t.loopDestroy(),\n      (t.slides = a.children(`.${s.slideClass}`)));\n    let n,\n      l = r;\n    if (\"object\" == typeof e && \"length\" in e) {\n      for (let s = 0; s < e.length; s += 1)\n        (n = e[s]), t.slides[n] && t.slides.eq(n).remove(), n < l && (l -= 1);\n      l = Math.max(l, 0);\n    } else (n = e), t.slides[n] && t.slides.eq(n).remove(), n < l && (l -= 1), (l = Math.max(l, 0));\n    s.loop && t.loopCreate(),\n      s.observer || t.update(),\n      s.loop ? t.slideTo(l + t.loopedSlides, 0, !1) : t.slideTo(l, 0, !1);\n  }\n  function ee() {\n    const e = this,\n      t = [];\n    for (let s = 0; s < e.slides.length; s += 1) t.push(s);\n    e.removeSlide(t);\n  }\n  function te(e) {\n    const {\n      effect: t,\n      swiper: s,\n      on: a,\n      setTranslate: i,\n      setTransition: r,\n      overwriteParams: n,\n      perspective: l,\n    } = e;\n    let o;\n    a(\"beforeInit\", () => {\n      if (s.params.effect !== t) return;\n      s.classNames.push(`${s.params.containerModifierClass}${t}`),\n        l && l() && s.classNames.push(`${s.params.containerModifierClass}3d`);\n      const e = n ? n() : {};\n      Object.assign(s.params, e), Object.assign(s.originalParams, e);\n    }),\n      a(\"setTranslate\", () => {\n        s.params.effect === t && i();\n      }),\n      a(\"setTransition\", (e, a) => {\n        s.params.effect === t && r(a);\n      }),\n      a(\"virtualUpdate\", () => {\n        s.slides.length || (o = !0),\n          requestAnimationFrame(() => {\n            o && s.slides.length && (i(), (o = !1));\n          });\n      });\n  }\n  function se(e, t) {\n    return e.transformEl\n      ? t\n          .find(e.transformEl)\n          .css({\n            \"backface-visibility\": \"hidden\",\n            \"-webkit-backface-visibility\": \"hidden\",\n          })\n      : t;\n  }\n  function ae(e) {\n    let { swiper: t, duration: s, transformEl: a, allSlides: i } = e;\n    const { slides: r, activeIndex: n, $wrapperEl: l } = t;\n    if (t.params.virtualTranslate && 0 !== s) {\n      let e,\n        s = !1;\n      (e = i ? (a ? r.find(a) : r) : a ? r.eq(n).find(a) : r.eq(n)),\n        e.transitionEnd(() => {\n          if (s) return;\n          if (!t || t.destroyed) return;\n          (s = !0), (t.animating = !1);\n          const e = [\"webkitTransitionEnd\", \"transitionend\"];\n          for (let t = 0; t < e.length; t += 1) l.trigger(e[t]);\n        });\n    }\n  }\n  function ie(e, t, s) {\n    const a = \"swiper-slide-shadow\" + (s ? `-${s}` : \"\"),\n      i = e.transformEl ? t.find(e.transformEl) : t;\n    let r = i.children(`.${a}`);\n    return (\n      r.length ||\n        ((r = d(`<div class=\"swiper-slide-shadow${s ? `-${s}` : \"\"}\"></div>`)),\n        i.append(r)),\n      r\n    );\n  }\n  Object.keys(_).forEach((e) => {\n    Object.keys(_[e]).forEach((t) => {\n      V.prototype[t] = _[e][t];\n    });\n  }),\n    V.use([\n      function (e) {\n        let { swiper: t, on: s, emit: a } = e;\n        const i = r();\n        let n = null,\n          l = null;\n        const o = () => {\n            t &&\n              !t.destroyed &&\n              t.initialized &&\n              (a(\"beforeResize\"), a(\"resize\"));\n          },\n          d = () => {\n            t && !t.destroyed && t.initialized && a(\"orientationchange\");\n          };\n        s(\"init\", () => {\n          t.params.resizeObserver && void 0 !== i.ResizeObserver\n            ? t &&\n              !t.destroyed &&\n              t.initialized &&\n              ((n = new ResizeObserver((e) => {\n                l = i.requestAnimationFrame(() => {\n                  const { width: s, height: a } = t;\n                  let i = s,\n                    r = a;\n                  e.forEach((e) => {\n                    let { contentBoxSize: s, contentRect: a, target: n } = e;\n                    (n && n !== t.el) ||\n                      ((i = a ? a.width : (s[0] || s).inlineSize),\n                      (r = a ? a.height : (s[0] || s).blockSize));\n                  }),\n                    (i === s && r === a) || o();\n                });\n              })),\n              n.observe(t.el))\n            : (i.addEventListener(\"resize\", o),\n              i.addEventListener(\"orientationchange\", d));\n        }),\n          s(\"destroy\", () => {\n            l && i.cancelAnimationFrame(l),\n              n && n.unobserve && t.el && (n.unobserve(t.el), (n = null)),\n              i.removeEventListener(\"resize\", o),\n              i.removeEventListener(\"orientationchange\", d);\n          });\n      },\n      function (e) {\n        let { swiper: t, extendParams: s, on: a, emit: i } = e;\n        const n = [],\n          l = r(),\n          o = function (e, t) {\n            void 0 === t && (t = {});\n            const s = new (l.MutationObserver || l.WebkitMutationObserver)(\n              (e) => {\n                if (1 === e.length) return void i(\"observerUpdate\", e[0]);\n                const t = function () {\n                  i(\"observerUpdate\", e[0]);\n                };\n                l.requestAnimationFrame\n                  ? l.requestAnimationFrame(t)\n                  : l.setTimeout(t, 0);\n              }\n            );\n            s.observe(e, {\n              attributes: void 0 === t.attributes || t.attributes,\n              childList: void 0 === t.childList || t.childList,\n              characterData: void 0 === t.characterData || t.characterData,\n            }),\n              n.push(s);\n          };\n        s({ observer: !1, observeParents: !1, observeSlideChildren: !1 }),\n          a(\"init\", () => {\n            if (t.params.observer) {\n              if (t.params.observeParents) {\n                const e = t.$el.parents();\n                for (let t = 0; t < e.length; t += 1) o(e[t]);\n              }\n              o(t.$el[0], { childList: t.params.observeSlideChildren }),\n                o(t.$wrapperEl[0], { attributes: !1 });\n            }\n          }),\n          a(\"destroy\", () => {\n            n.forEach((e) => {\n              e.disconnect();\n            }),\n              n.splice(0, n.length);\n          });\n      },\n    ]);\n  const re = [\n    function (e) {\n      let t,\n        { swiper: s, extendParams: a, on: i, emit: r } = e;\n      function n(e, t) {\n        const a = s.params.virtual;\n        if (a.cache && s.virtual.cache[t]) return s.virtual.cache[t];\n        const i = a.renderSlide\n          ? d(a.renderSlide.call(s, e, t))\n          : d(\n              `<div class=\"${s.params.slideClass}\" data-swiper-slide-index=\"${t}\">${e}</div>`\n            );\n        return (\n          i.attr(\"data-swiper-slide-index\") ||\n            i.attr(\"data-swiper-slide-index\", t),\n          a.cache && (s.virtual.cache[t] = i),\n          i\n        );\n      }\n      function l(e) {\n        const {\n            slidesPerView: t,\n            slidesPerGroup: a,\n            centeredSlides: i,\n          } = s.params,\n          { addSlidesBefore: l, addSlidesAfter: o } = s.params.virtual,\n          { from: d, to: c, slides: p, slidesGrid: u, offset: h } = s.virtual;\n        s.params.cssMode || s.updateActiveIndex();\n        const m = s.activeIndex || 0;\n        let f, g, v;\n        (f = s.rtlTranslate ? \"right\" : s.isHorizontal() ? \"left\" : \"top\"),\n          i\n            ? ((g = Math.floor(t / 2) + a + o), (v = Math.floor(t / 2) + a + l))\n            : ((g = t + (a - 1) + o), (v = a + l));\n        const w = Math.max((m || 0) - v, 0),\n          b = Math.min((m || 0) + g, p.length - 1),\n          x = (s.slidesGrid[w] || 0) - (s.slidesGrid[0] || 0);\n        function y() {\n          s.updateSlides(),\n            s.updateProgress(),\n            s.updateSlidesClasses(),\n            s.lazy && s.params.lazy.enabled && s.lazy.load(),\n            r(\"virtualUpdate\");\n        }\n        if (\n          (Object.assign(s.virtual, {\n            from: w,\n            to: b,\n            offset: x,\n            slidesGrid: s.slidesGrid,\n          }),\n          d === w && c === b && !e)\n        )\n          return (\n            s.slidesGrid !== u && x !== h && s.slides.css(f, `${x}px`),\n            s.updateProgress(),\n            void r(\"virtualUpdate\")\n          );\n        if (s.params.virtual.renderExternal)\n          return (\n            s.params.virtual.renderExternal.call(s, {\n              offset: x,\n              from: w,\n              to: b,\n              slides: (function () {\n                const e = [];\n                for (let t = w; t <= b; t += 1) e.push(p[t]);\n                return e;\n              })(),\n            }),\n            void (s.params.virtual.renderExternalUpdate\n              ? y()\n              : r(\"virtualUpdate\"))\n          );\n        const E = [],\n          T = [];\n        if (e) s.$wrapperEl.find(`.${s.params.slideClass}`).remove();\n        else\n          for (let e = d; e <= c; e += 1)\n            (e < w || e > b) &&\n              s.$wrapperEl\n                .find(`.${s.params.slideClass}[data-swiper-slide-index=\"${e}\"]`)\n                .remove();\n        for (let t = 0; t < p.length; t += 1)\n          t >= w &&\n            t <= b &&\n            (void 0 === c || e\n              ? T.push(t)\n              : (t > c && T.push(t), t < d && E.push(t)));\n        T.forEach((e) => {\n          s.$wrapperEl.append(n(p[e], e));\n        }),\n          E.sort((e, t) => t - e).forEach((e) => {\n            s.$wrapperEl.prepend(n(p[e], e));\n          }),\n          s.$wrapperEl.children(\".swiper-slide\").css(f, `${x}px`),\n          y();\n      }\n      a({\n        virtual: {\n          enabled: !1,\n          slides: [],\n          cache: !0,\n          renderSlide: null,\n          renderExternal: null,\n          renderExternalUpdate: !0,\n          addSlidesBefore: 0,\n          addSlidesAfter: 0,\n        },\n      }),\n        (s.virtual = {\n          cache: {},\n          from: void 0,\n          to: void 0,\n          slides: [],\n          offset: 0,\n          slidesGrid: [],\n        }),\n        i(\"beforeInit\", () => {\n          s.params.virtual.enabled &&\n            ((s.virtual.slides = s.params.virtual.slides),\n            s.classNames.push(`${s.params.containerModifierClass}virtual`),\n            (s.params.watchSlidesProgress = !0),\n            (s.originalParams.watchSlidesProgress = !0),\n            s.params.initialSlide || l());\n        }),\n        i(\"setTranslate\", () => {\n          s.params.virtual.enabled &&\n            (s.params.cssMode && !s._immediateVirtual\n              ? (clearTimeout(t),\n                (t = setTimeout(() => {\n                  l();\n                }, 100)))\n              : l());\n        }),\n        i(\"init update resize\", () => {\n          s.params.virtual.enabled &&\n            s.params.cssMode &&\n            v(s.wrapperEl, \"--swiper-virtual-size\", `${s.virtualSize}px`);\n        }),\n        Object.assign(s.virtual, {\n          appendSlide: function (e) {\n            if (\"object\" == typeof e && \"length\" in e)\n              for (let t = 0; t < e.length; t += 1)\n                e[t] && s.virtual.slides.push(e[t]);\n            else s.virtual.slides.push(e);\n            l(!0);\n          },\n          prependSlide: function (e) {\n            const t = s.activeIndex;\n            let a = t + 1,\n              i = 1;\n            if (Array.isArray(e)) {\n              for (let t = 0; t < e.length; t += 1)\n                e[t] && s.virtual.slides.unshift(e[t]);\n              (a = t + e.length), (i = e.length);\n            } else s.virtual.slides.unshift(e);\n            if (s.params.virtual.cache) {\n              const e = s.virtual.cache,\n                t = {};\n              Object.keys(e).forEach((s) => {\n                const a = e[s],\n                  r = a.attr(\"data-swiper-slide-index\");\n                r && a.attr(\"data-swiper-slide-index\", parseInt(r, 10) + i),\n                  (t[parseInt(s, 10) + i] = a);\n              }),\n                (s.virtual.cache = t);\n            }\n            l(!0), s.slideTo(a, 0);\n          },\n          removeSlide: function (e) {\n            if (null == e) return;\n            let t = s.activeIndex;\n            if (Array.isArray(e))\n              for (let a = e.length - 1; a >= 0; a -= 1)\n                s.virtual.slides.splice(e[a], 1),\n                  s.params.virtual.cache && delete s.virtual.cache[e[a]],\n                  e[a] < t && (t -= 1),\n                  (t = Math.max(t, 0));\n            else\n              s.virtual.slides.splice(e, 1),\n                s.params.virtual.cache && delete s.virtual.cache[e],\n                e < t && (t -= 1),\n                (t = Math.max(t, 0));\n            l(!0), s.slideTo(t, 0);\n          },\n          removeAllSlides: function () {\n            (s.virtual.slides = []),\n              s.params.virtual.cache && (s.virtual.cache = {}),\n              l(!0),\n              s.slideTo(0, 0);\n          },\n          update: l,\n        });\n    },\n    function (e) {\n      let { swiper: t, extendParams: s, on: i, emit: n } = e;\n      const l = a(),\n        o = r();\n      function c(e) {\n        if (!t.enabled) return;\n        const { rtlTranslate: s } = t;\n        let a = e;\n        a.originalEvent && (a = a.originalEvent);\n        const i = a.keyCode || a.charCode,\n          r = t.params.keyboard.pageUpDown,\n          d = r && 33 === i,\n          c = r && 34 === i,\n          p = 37 === i,\n          u = 39 === i,\n          h = 38 === i,\n          m = 40 === i;\n        if (\n          !t.allowSlideNext &&\n          ((t.isHorizontal() && u) || (t.isVertical() && m) || c)\n        )\n          return !1;\n        if (\n          !t.allowSlidePrev &&\n          ((t.isHorizontal() && p) || (t.isVertical() && h) || d)\n        )\n          return !1;\n        if (\n          !(\n            a.shiftKey ||\n            a.altKey ||\n            a.ctrlKey ||\n            a.metaKey ||\n            (l.activeElement &&\n              l.activeElement.nodeName &&\n              (\"input\" === l.activeElement.nodeName.toLowerCase() ||\n                \"textarea\" === l.activeElement.nodeName.toLowerCase()))\n          )\n        ) {\n          if (\n            t.params.keyboard.onlyInViewport &&\n            (d || c || p || u || h || m)\n          ) {\n            let e = !1;\n            if (\n              t.$el.parents(`.${t.params.slideClass}`).length > 0 &&\n              0 === t.$el.parents(`.${t.params.slideActiveClass}`).length\n            )\n              return;\n            const a = t.$el,\n              i = a[0].clientWidth,\n              r = a[0].clientHeight,\n              n = o.innerWidth,\n              l = o.innerHeight,\n              d = t.$el.offset();\n            s && (d.left -= t.$el[0].scrollLeft);\n            const c = [\n              [d.left, d.top],\n              [d.left + i, d.top],\n              [d.left, d.top + r],\n              [d.left + i, d.top + r],\n            ];\n            for (let t = 0; t < c.length; t += 1) {\n              const s = c[t];\n              if (s[0] >= 0 && s[0] <= n && s[1] >= 0 && s[1] <= l) {\n                if (0 === s[0] && 0 === s[1]) continue;\n                e = !0;\n              }\n            }\n            if (!e) return;\n          }\n          t.isHorizontal()\n            ? ((d || c || p || u) &&\n                (a.preventDefault ? a.preventDefault() : (a.returnValue = !1)),\n              (((c || u) && !s) || ((d || p) && s)) && t.slideNext(),\n              (((d || p) && !s) || ((c || u) && s)) && t.slidePrev())\n            : ((d || c || h || m) &&\n                (a.preventDefault ? a.preventDefault() : (a.returnValue = !1)),\n              (c || m) && t.slideNext(),\n              (d || h) && t.slidePrev()),\n            n(\"keyPress\", i);\n        }\n      }\n      function p() {\n        t.keyboard.enabled ||\n          (d(l).on(\"keydown\", c), (t.keyboard.enabled = !0));\n      }\n      function u() {\n        t.keyboard.enabled &&\n          (d(l).off(\"keydown\", c), (t.keyboard.enabled = !1));\n      }\n      (t.keyboard = { enabled: !1 }),\n        s({ keyboard: { enabled: !1, onlyInViewport: !0, pageUpDown: !0 } }),\n        i(\"init\", () => {\n          t.params.keyboard.enabled && p();\n        }),\n        i(\"destroy\", () => {\n          t.keyboard.enabled && u();\n        }),\n        Object.assign(t.keyboard, { enable: p, disable: u });\n    },\n    function (e) {\n      let { swiper: t, extendParams: s, on: a, emit: i } = e;\n      const n = r();\n      let l;\n      s({\n        mousewheel: {\n          enabled: !1,\n          releaseOnEdges: !1,\n          invert: !1,\n          forceToAxis: !1,\n          sensitivity: 1,\n          eventsTarget: \"container\",\n          thresholdDelta: null,\n          thresholdTime: null,\n        },\n      }),\n        (t.mousewheel = { enabled: !1 });\n      let o,\n        c = u();\n      const h = [];\n      function m() {\n        t.enabled && (t.mouseEntered = !0);\n      }\n      function f() {\n        t.enabled && (t.mouseEntered = !1);\n      }\n      function g(e) {\n        return (\n          !(\n            t.params.mousewheel.thresholdDelta &&\n            e.delta < t.params.mousewheel.thresholdDelta\n          ) &&\n          !(\n            t.params.mousewheel.thresholdTime &&\n            u() - c < t.params.mousewheel.thresholdTime\n          ) &&\n          ((e.delta >= 6 && u() - c < 60) ||\n            (e.direction < 0\n              ? (t.isEnd && !t.params.loop) ||\n                t.animating ||\n                (t.slideNext(), i(\"scroll\", e.raw))\n              : (t.isBeginning && !t.params.loop) ||\n                t.animating ||\n                (t.slidePrev(), i(\"scroll\", e.raw)),\n            (c = new n.Date().getTime()),\n            !1))\n        );\n      }\n      function v(e) {\n        let s = e,\n          a = !0;\n        if (!t.enabled) return;\n        const r = t.params.mousewheel;\n        t.params.cssMode && s.preventDefault();\n        let n = t.$el;\n        if (\n          (\"container\" !== t.params.mousewheel.eventsTarget &&\n            (n = d(t.params.mousewheel.eventsTarget)),\n          !t.mouseEntered && !n[0].contains(s.target) && !r.releaseOnEdges)\n        )\n          return !0;\n        s.originalEvent && (s = s.originalEvent);\n        let c = 0;\n        const m = t.rtlTranslate ? -1 : 1,\n          f = (function (e) {\n            let t = 0,\n              s = 0,\n              a = 0,\n              i = 0;\n            return (\n              \"detail\" in e && (s = e.detail),\n              \"wheelDelta\" in e && (s = -e.wheelDelta / 120),\n              \"wheelDeltaY\" in e && (s = -e.wheelDeltaY / 120),\n              \"wheelDeltaX\" in e && (t = -e.wheelDeltaX / 120),\n              \"axis\" in e && e.axis === e.HORIZONTAL_AXIS && ((t = s), (s = 0)),\n              (a = 10 * t),\n              (i = 10 * s),\n              \"deltaY\" in e && (i = e.deltaY),\n              \"deltaX\" in e && (a = e.deltaX),\n              e.shiftKey && !a && ((a = i), (i = 0)),\n              (a || i) &&\n                e.deltaMode &&\n                (1 === e.deltaMode\n                  ? ((a *= 40), (i *= 40))\n                  : ((a *= 800), (i *= 800))),\n              a && !t && (t = a < 1 ? -1 : 1),\n              i && !s && (s = i < 1 ? -1 : 1),\n              { spinX: t, spinY: s, pixelX: a, pixelY: i }\n            );\n          })(s);\n        if (r.forceToAxis)\n          if (t.isHorizontal()) {\n            if (!(Math.abs(f.pixelX) > Math.abs(f.pixelY))) return !0;\n            c = -f.pixelX * m;\n          } else {\n            if (!(Math.abs(f.pixelY) > Math.abs(f.pixelX))) return !0;\n            c = -f.pixelY;\n          }\n        else\n          c =\n            Math.abs(f.pixelX) > Math.abs(f.pixelY) ? -f.pixelX * m : -f.pixelY;\n        if (0 === c) return !0;\n        r.invert && (c = -c);\n        let v = t.getTranslate() + c * r.sensitivity;\n        if (\n          (v >= t.minTranslate() && (v = t.minTranslate()),\n          v <= t.maxTranslate() && (v = t.maxTranslate()),\n          (a =\n            !!t.params.loop ||\n            !(v === t.minTranslate() || v === t.maxTranslate())),\n          a && t.params.nested && s.stopPropagation(),\n          t.params.freeMode && t.params.freeMode.enabled)\n        ) {\n          const e = { time: u(), delta: Math.abs(c), direction: Math.sign(c) },\n            a =\n              o &&\n              e.time < o.time + 500 &&\n              e.delta <= o.delta &&\n              e.direction === o.direction;\n          if (!a) {\n            (o = void 0), t.params.loop && t.loopFix();\n            let n = t.getTranslate() + c * r.sensitivity;\n            const d = t.isBeginning,\n              u = t.isEnd;\n            if (\n              (n >= t.minTranslate() && (n = t.minTranslate()),\n              n <= t.maxTranslate() && (n = t.maxTranslate()),\n              t.setTransition(0),\n              t.setTranslate(n),\n              t.updateProgress(),\n              t.updateActiveIndex(),\n              t.updateSlidesClasses(),\n              ((!d && t.isBeginning) || (!u && t.isEnd)) &&\n                t.updateSlidesClasses(),\n              t.params.freeMode.sticky)\n            ) {\n              clearTimeout(l), (l = void 0), h.length >= 15 && h.shift();\n              const s = h.length ? h[h.length - 1] : void 0,\n                a = h[0];\n              if (\n                (h.push(e),\n                s && (e.delta > s.delta || e.direction !== s.direction))\n              )\n                h.splice(0);\n              else if (\n                h.length >= 15 &&\n                e.time - a.time < 500 &&\n                a.delta - e.delta >= 1 &&\n                e.delta <= 6\n              ) {\n                const s = c > 0 ? 0.8 : 0.2;\n                (o = e),\n                  h.splice(0),\n                  (l = p(() => {\n                    t.slideToClosest(t.params.speed, !0, void 0, s);\n                  }, 0));\n              }\n              l ||\n                (l = p(() => {\n                  (o = e),\n                    h.splice(0),\n                    t.slideToClosest(t.params.speed, !0, void 0, 0.5);\n                }, 500));\n            }\n            if (\n              (a || i(\"scroll\", s),\n              t.params.autoplay &&\n                t.params.autoplayDisableOnInteraction &&\n                t.autoplay.stop(),\n              n === t.minTranslate() || n === t.maxTranslate())\n            )\n              return !0;\n          }\n        } else {\n          const s = {\n            time: u(),\n            delta: Math.abs(c),\n            direction: Math.sign(c),\n            raw: e,\n          };\n          h.length >= 2 && h.shift();\n          const a = h.length ? h[h.length - 1] : void 0;\n          if (\n            (h.push(s),\n            a\n              ? (s.direction !== a.direction ||\n                  s.delta > a.delta ||\n                  s.time > a.time + 150) &&\n                g(s)\n              : g(s),\n            (function (e) {\n              const s = t.params.mousewheel;\n              if (e.direction < 0) {\n                if (t.isEnd && !t.params.loop && s.releaseOnEdges) return !0;\n              } else if (t.isBeginning && !t.params.loop && s.releaseOnEdges)\n                return !0;\n              return !1;\n            })(s))\n          )\n            return !0;\n        }\n        return s.preventDefault ? s.preventDefault() : (s.returnValue = !1), !1;\n      }\n      function w(e) {\n        let s = t.$el;\n        \"container\" !== t.params.mousewheel.eventsTarget &&\n          (s = d(t.params.mousewheel.eventsTarget)),\n          s[e](\"mouseenter\", m),\n          s[e](\"mouseleave\", f),\n          s[e](\"wheel\", v);\n      }\n      function b() {\n        return t.params.cssMode\n          ? (t.wrapperEl.removeEventListener(\"wheel\", v), !0)\n          : !t.mousewheel.enabled && (w(\"on\"), (t.mousewheel.enabled = !0), !0);\n      }\n      function x() {\n        return t.params.cssMode\n          ? (t.wrapperEl.addEventListener(event, v), !0)\n          : !!t.mousewheel.enabled &&\n              (w(\"off\"), (t.mousewheel.enabled = !1), !0);\n      }\n      a(\"init\", () => {\n        !t.params.mousewheel.enabled && t.params.cssMode && x(),\n          t.params.mousewheel.enabled && b();\n      }),\n        a(\"destroy\", () => {\n          t.params.cssMode && b(), t.mousewheel.enabled && x();\n        }),\n        Object.assign(t.mousewheel, { enable: b, disable: x });\n    },\n    function (e) {\n      let { swiper: t, extendParams: s, on: a, emit: i } = e;\n      function r(e) {\n        let s;\n        return (\n          e &&\n            ((s = d(e)),\n            t.params.uniqueNavElements &&\n              \"string\" == typeof e &&\n              s.length > 1 &&\n              1 === t.$el.find(e).length &&\n              (s = t.$el.find(e))),\n          s\n        );\n      }\n      function n(e, s) {\n        const a = t.params.navigation;\n        e &&\n          e.length > 0 &&\n          (e[s ? \"addClass\" : \"removeClass\"](a.disabledClass),\n          e[0] && \"BUTTON\" === e[0].tagName && (e[0].disabled = s),\n          t.params.watchOverflow &&\n            t.enabled &&\n            e[t.isLocked ? \"addClass\" : \"removeClass\"](a.lockClass));\n      }\n      function l() {\n        if (t.params.loop) return;\n        const { $nextEl: e, $prevEl: s } = t.navigation;\n        n(s, t.isBeginning && !t.params.rewind),\n          n(e, t.isEnd && !t.params.rewind);\n      }\n      function o(e) {\n        e.preventDefault(),\n          (!t.isBeginning || t.params.loop || t.params.rewind) && t.slidePrev();\n      }\n      function c(e) {\n        e.preventDefault(),\n          (!t.isEnd || t.params.loop || t.params.rewind) && t.slideNext();\n      }\n      function p() {\n        const e = t.params.navigation;\n        if (\n          ((t.params.navigation = F(\n            t,\n            t.originalParams.navigation,\n            t.params.navigation,\n            { nextEl: \"swiper-button-next\", prevEl: \"swiper-button-prev\" }\n          )),\n          !e.nextEl && !e.prevEl)\n        )\n          return;\n        const s = r(e.nextEl),\n          a = r(e.prevEl);\n        s && s.length > 0 && s.on(\"click\", c),\n          a && a.length > 0 && a.on(\"click\", o),\n          Object.assign(t.navigation, {\n            $nextEl: s,\n            nextEl: s && s[0],\n            $prevEl: a,\n            prevEl: a && a[0],\n          }),\n          t.enabled ||\n            (s && s.addClass(e.lockClass), a && a.addClass(e.lockClass));\n      }\n      function u() {\n        const { $nextEl: e, $prevEl: s } = t.navigation;\n        e &&\n          e.length &&\n          (e.off(\"click\", c), e.removeClass(t.params.navigation.disabledClass)),\n          s &&\n            s.length &&\n            (s.off(\"click\", o),\n            s.removeClass(t.params.navigation.disabledClass));\n      }\n      s({\n        navigation: {\n          nextEl: null,\n          prevEl: null,\n          hideOnClick: !1,\n          disabledClass: \"swiper-button-disabled\",\n          hiddenClass: \"swiper-button-hidden\",\n          lockClass: \"swiper-button-lock\",\n        },\n      }),\n        (t.navigation = {\n          nextEl: null,\n          $nextEl: null,\n          prevEl: null,\n          $prevEl: null,\n        }),\n        a(\"init\", () => {\n          p(), l();\n        }),\n        a(\"toEdge fromEdge lock unlock\", () => {\n          l();\n        }),\n        a(\"destroy\", () => {\n          u();\n        }),\n        a(\"enable disable\", () => {\n          const { $nextEl: e, $prevEl: s } = t.navigation;\n          e &&\n            e[t.enabled ? \"removeClass\" : \"addClass\"](\n              t.params.navigation.lockClass\n            ),\n            s &&\n              s[t.enabled ? \"removeClass\" : \"addClass\"](\n                t.params.navigation.lockClass\n              );\n        }),\n        a(\"click\", (e, s) => {\n          const { $nextEl: a, $prevEl: r } = t.navigation,\n            n = s.target;\n          if (t.params.navigation.hideOnClick && !d(n).is(r) && !d(n).is(a)) {\n            if (\n              t.pagination &&\n              t.params.pagination &&\n              t.params.pagination.clickable &&\n              (t.pagination.el === n || t.pagination.el.contains(n))\n            )\n              return;\n            let e;\n            a\n              ? (e = a.hasClass(t.params.navigation.hiddenClass))\n              : r && (e = r.hasClass(t.params.navigation.hiddenClass)),\n              i(!0 === e ? \"navigationShow\" : \"navigationHide\"),\n              a && a.toggleClass(t.params.navigation.hiddenClass),\n              r && r.toggleClass(t.params.navigation.hiddenClass);\n          }\n        }),\n        Object.assign(t.navigation, { update: l, init: p, destroy: u });\n    },\n    function (e) {\n      let { swiper: t, extendParams: s, on: a, emit: i } = e;\n      const r = \"swiper-pagination\";\n      let n;\n      s({\n        pagination: {\n          el: null,\n          bulletElement: \"span\",\n          clickable: !1,\n          hideOnClick: !1,\n          renderBullet: null,\n          renderProgressbar: null,\n          renderFraction: null,\n          renderCustom: null,\n          progressbarOpposite: !1,\n          type: \"bullets\",\n          dynamicBullets: !1,\n          dynamicMainBullets: 1,\n          formatFractionCurrent: (e) => e,\n          formatFractionTotal: (e) => e,\n          bulletClass: `${r}-bullet`,\n          bulletActiveClass: `${r}-bullet-active`,\n          modifierClass: `${r}-`,\n          currentClass: `${r}-current`,\n          totalClass: `${r}-total`,\n          hiddenClass: `${r}-hidden`,\n          progressbarFillClass: `${r}-progressbar-fill`,\n          progressbarOppositeClass: `${r}-progressbar-opposite`,\n          clickableClass: `${r}-clickable`,\n          lockClass: `${r}-lock`,\n          horizontalClass: `${r}-horizontal`,\n          verticalClass: `${r}-vertical`,\n        },\n      }),\n        (t.pagination = { el: null, $el: null, bullets: [] });\n      let l = 0;\n      function o() {\n        return (\n          !t.params.pagination.el ||\n          !t.pagination.el ||\n          !t.pagination.$el ||\n          0 === t.pagination.$el.length\n        );\n      }\n      function c(e, s) {\n        const { bulletActiveClass: a } = t.params.pagination;\n        e[s]().addClass(`${a}-${s}`)[s]().addClass(`${a}-${s}-${s}`);\n      }\n      function p() {\n        const e = t.rtl,\n          s = t.params.pagination;\n        if (o()) return;\n        const a =\n            t.virtual && t.params.virtual.enabled\n              ? t.virtual.slides.length\n              : t.slides.length,\n          r = t.pagination.$el;\n        let p;\n        const u = t.params.loop\n          ? Math.ceil((a - 2 * t.loopedSlides) / t.params.slidesPerGroup)\n          : t.snapGrid.length;\n        if (\n          (t.params.loop\n            ? ((p = Math.ceil(\n                (t.activeIndex - t.loopedSlides) / t.params.slidesPerGroup\n              )),\n              p > a - 1 - 2 * t.loopedSlides && (p -= a - 2 * t.loopedSlides),\n              p > u - 1 && (p -= u),\n              p < 0 && \"bullets\" !== t.params.paginationType && (p = u + p))\n            : (p = void 0 !== t.snapIndex ? t.snapIndex : t.activeIndex || 0),\n          \"bullets\" === s.type &&\n            t.pagination.bullets &&\n            t.pagination.bullets.length > 0)\n        ) {\n          const a = t.pagination.bullets;\n          let i, o, u;\n          if (\n            (s.dynamicBullets &&\n              ((n = a\n                .eq(0)\n                [t.isHorizontal() ? \"outerWidth\" : \"outerHeight\"](!0)),\n              r.css(\n                t.isHorizontal() ? \"width\" : \"height\",\n                n * (s.dynamicMainBullets + 4) + \"px\"\n              ),\n              s.dynamicMainBullets > 1 &&\n                void 0 !== t.previousIndex &&\n                ((l += p - (t.previousIndex - t.loopedSlides || 0)),\n                l > s.dynamicMainBullets - 1\n                  ? (l = s.dynamicMainBullets - 1)\n                  : l < 0 && (l = 0)),\n              (i = Math.max(p - l, 0)),\n              (o = i + (Math.min(a.length, s.dynamicMainBullets) - 1)),\n              (u = (o + i) / 2)),\n            a.removeClass(\n              [\"\", \"-next\", \"-next-next\", \"-prev\", \"-prev-prev\", \"-main\"]\n                .map((e) => `${s.bulletActiveClass}${e}`)\n                .join(\" \")\n            ),\n            r.length > 1)\n          )\n            a.each((e) => {\n              const t = d(e),\n                a = t.index();\n              a === p && t.addClass(s.bulletActiveClass),\n                s.dynamicBullets &&\n                  (a >= i &&\n                    a <= o &&\n                    t.addClass(`${s.bulletActiveClass}-main`),\n                  a === i && c(t, \"prev\"),\n                  a === o && c(t, \"next\"));\n            });\n          else {\n            const e = a.eq(p),\n              r = e.index();\n            if ((e.addClass(s.bulletActiveClass), s.dynamicBullets)) {\n              const e = a.eq(i),\n                n = a.eq(o);\n              for (let e = i; e <= o; e += 1)\n                a.eq(e).addClass(`${s.bulletActiveClass}-main`);\n              if (t.params.loop)\n                if (r >= a.length) {\n                  for (let e = s.dynamicMainBullets; e >= 0; e -= 1)\n                    a.eq(a.length - e).addClass(`${s.bulletActiveClass}-main`);\n                  a.eq(a.length - s.dynamicMainBullets - 1).addClass(\n                    `${s.bulletActiveClass}-prev`\n                  );\n                } else c(e, \"prev\"), c(n, \"next\");\n              else c(e, \"prev\"), c(n, \"next\");\n            }\n          }\n          if (s.dynamicBullets) {\n            const i = Math.min(a.length, s.dynamicMainBullets + 4),\n              r = (n * i - n) / 2 - u * n,\n              l = e ? \"right\" : \"left\";\n            a.css(t.isHorizontal() ? l : \"top\", `${r}px`);\n          }\n        }\n        if (\n          (\"fraction\" === s.type &&\n            (r.find(U(s.currentClass)).text(s.formatFractionCurrent(p + 1)),\n            r.find(U(s.totalClass)).text(s.formatFractionTotal(u))),\n          \"progressbar\" === s.type)\n        ) {\n          let e;\n          e = s.progressbarOpposite\n            ? t.isHorizontal()\n              ? \"vertical\"\n              : \"horizontal\"\n            : t.isHorizontal()\n            ? \"horizontal\"\n            : \"vertical\";\n          const a = (p + 1) / u;\n          let i = 1,\n            n = 1;\n          \"horizontal\" === e ? (i = a) : (n = a),\n            r\n              .find(U(s.progressbarFillClass))\n              .transform(`translate3d(0,0,0) scaleX(${i}) scaleY(${n})`)\n              .transition(t.params.speed);\n        }\n        \"custom\" === s.type && s.renderCustom\n          ? (r.html(s.renderCustom(t, p + 1, u)), i(\"paginationRender\", r[0]))\n          : i(\"paginationUpdate\", r[0]),\n          t.params.watchOverflow &&\n            t.enabled &&\n            r[t.isLocked ? \"addClass\" : \"removeClass\"](s.lockClass);\n      }\n      function u() {\n        const e = t.params.pagination;\n        if (o()) return;\n        const s =\n            t.virtual && t.params.virtual.enabled\n              ? t.virtual.slides.length\n              : t.slides.length,\n          a = t.pagination.$el;\n        let r = \"\";\n        if (\"bullets\" === e.type) {\n          let i = t.params.loop\n            ? Math.ceil((s - 2 * t.loopedSlides) / t.params.slidesPerGroup)\n            : t.snapGrid.length;\n          t.params.freeMode &&\n            t.params.freeMode.enabled &&\n            !t.params.loop &&\n            i > s &&\n            (i = s);\n          for (let s = 0; s < i; s += 1)\n            e.renderBullet\n              ? (r += e.renderBullet.call(t, s, e.bulletClass))\n              : (r += `<${e.bulletElement} class=\"${e.bulletClass}\"></${e.bulletElement}>`);\n          a.html(r), (t.pagination.bullets = a.find(U(e.bulletClass)));\n        }\n        \"fraction\" === e.type &&\n          ((r = e.renderFraction\n            ? e.renderFraction.call(t, e.currentClass, e.totalClass)\n            : `<span class=\"${e.currentClass}\"></span> / <span class=\"${e.totalClass}\"></span>`),\n          a.html(r)),\n          \"progressbar\" === e.type &&\n            ((r = e.renderProgressbar\n              ? e.renderProgressbar.call(t, e.progressbarFillClass)\n              : `<span class=\"${e.progressbarFillClass}\"></span>`),\n            a.html(r)),\n          \"custom\" !== e.type && i(\"paginationRender\", t.pagination.$el[0]);\n      }\n      function h() {\n        t.params.pagination = F(\n          t,\n          t.originalParams.pagination,\n          t.params.pagination,\n          { el: \"swiper-pagination\" }\n        );\n        const e = t.params.pagination;\n        if (!e.el) return;\n        let s = d(e.el);\n        0 !== s.length &&\n          (t.params.uniqueNavElements &&\n            \"string\" == typeof e.el &&\n            s.length > 1 &&\n            ((s = t.$el.find(e.el)),\n            s.length > 1 &&\n              (s = s.filter((e) => d(e).parents(\".swiper\")[0] === t.el))),\n          \"bullets\" === e.type && e.clickable && s.addClass(e.clickableClass),\n          s.addClass(e.modifierClass + e.type),\n          s.addClass(t.isHorizontal() ? e.horizontalClass : e.verticalClass),\n          \"bullets\" === e.type &&\n            e.dynamicBullets &&\n            (s.addClass(`${e.modifierClass}${e.type}-dynamic`),\n            (l = 0),\n            e.dynamicMainBullets < 1 && (e.dynamicMainBullets = 1)),\n          \"progressbar\" === e.type &&\n            e.progressbarOpposite &&\n            s.addClass(e.progressbarOppositeClass),\n          e.clickable &&\n            s.on(\"click\", U(e.bulletClass), function (e) {\n              e.preventDefault();\n              let s = d(this).index() * t.params.slidesPerGroup;\n              t.params.loop && (s += t.loopedSlides), t.slideTo(s);\n            }),\n          Object.assign(t.pagination, { $el: s, el: s[0] }),\n          t.enabled || s.addClass(e.lockClass));\n      }\n      function m() {\n        const e = t.params.pagination;\n        if (o()) return;\n        const s = t.pagination.$el;\n        s.removeClass(e.hiddenClass),\n          s.removeClass(e.modifierClass + e.type),\n          s.removeClass(t.isHorizontal() ? e.horizontalClass : e.verticalClass),\n          t.pagination.bullets &&\n            t.pagination.bullets.removeClass &&\n            t.pagination.bullets.removeClass(e.bulletActiveClass),\n          e.clickable && s.off(\"click\", U(e.bulletClass));\n      }\n      a(\"init\", () => {\n        h(), u(), p();\n      }),\n        a(\"activeIndexChange\", () => {\n          (t.params.loop || void 0 === t.snapIndex) && p();\n        }),\n        a(\"snapIndexChange\", () => {\n          t.params.loop || p();\n        }),\n        a(\"slidesLengthChange\", () => {\n          t.params.loop && (u(), p());\n        }),\n        a(\"snapGridLengthChange\", () => {\n          t.params.loop || (u(), p());\n        }),\n        a(\"destroy\", () => {\n          m();\n        }),\n        a(\"enable disable\", () => {\n          const { $el: e } = t.pagination;\n          e &&\n            e[t.enabled ? \"removeClass\" : \"addClass\"](\n              t.params.pagination.lockClass\n            );\n        }),\n        a(\"lock unlock\", () => {\n          p();\n        }),\n        a(\"click\", (e, s) => {\n          const a = s.target,\n            { $el: r } = t.pagination;\n          if (\n            t.params.pagination.el &&\n            t.params.pagination.hideOnClick &&\n            r.length > 0 &&\n            !d(a).hasClass(t.params.pagination.bulletClass)\n          ) {\n            if (\n              t.navigation &&\n              ((t.navigation.nextEl && a === t.navigation.nextEl) ||\n                (t.navigation.prevEl && a === t.navigation.prevEl))\n            )\n              return;\n            const e = r.hasClass(t.params.pagination.hiddenClass);\n            i(!0 === e ? \"paginationShow\" : \"paginationHide\"),\n              r.toggleClass(t.params.pagination.hiddenClass);\n          }\n        }),\n        Object.assign(t.pagination, {\n          render: u,\n          update: p,\n          init: h,\n          destroy: m,\n        });\n    },\n    function (e) {\n      let { swiper: t, extendParams: s, on: i, emit: r } = e;\n      const n = a();\n      let l,\n        o,\n        c,\n        u,\n        h = !1,\n        m = null,\n        f = null;\n      function g() {\n        if (!t.params.scrollbar.el || !t.scrollbar.el) return;\n        const { scrollbar: e, rtlTranslate: s, progress: a } = t,\n          { $dragEl: i, $el: r } = e,\n          n = t.params.scrollbar;\n        let l = o,\n          d = (c - o) * a;\n        s\n          ? ((d = -d),\n            d > 0 ? ((l = o - d), (d = 0)) : -d + o > c && (l = c + d))\n          : d < 0\n          ? ((l = o + d), (d = 0))\n          : d + o > c && (l = c - d),\n          t.isHorizontal()\n            ? (i.transform(`translate3d(${d}px, 0, 0)`),\n              (i[0].style.width = `${l}px`))\n            : (i.transform(`translate3d(0px, ${d}px, 0)`),\n              (i[0].style.height = `${l}px`)),\n          n.hide &&\n            (clearTimeout(m),\n            (r[0].style.opacity = 1),\n            (m = setTimeout(() => {\n              (r[0].style.opacity = 0), r.transition(400);\n            }, 1e3)));\n      }\n      function v() {\n        if (!t.params.scrollbar.el || !t.scrollbar.el) return;\n        const { scrollbar: e } = t,\n          { $dragEl: s, $el: a } = e;\n        (s[0].style.width = \"\"),\n          (s[0].style.height = \"\"),\n          (c = t.isHorizontal() ? a[0].offsetWidth : a[0].offsetHeight),\n          (u =\n            t.size /\n            (t.virtualSize +\n              t.params.slidesOffsetBefore -\n              (t.params.centeredSlides ? t.snapGrid[0] : 0))),\n          (o =\n            \"auto\" === t.params.scrollbar.dragSize\n              ? c * u\n              : parseInt(t.params.scrollbar.dragSize, 10)),\n          t.isHorizontal()\n            ? (s[0].style.width = `${o}px`)\n            : (s[0].style.height = `${o}px`),\n          (a[0].style.display = u >= 1 ? \"none\" : \"\"),\n          t.params.scrollbar.hide && (a[0].style.opacity = 0),\n          t.params.watchOverflow &&\n            t.enabled &&\n            e.$el[t.isLocked ? \"addClass\" : \"removeClass\"](\n              t.params.scrollbar.lockClass\n            );\n      }\n      function w(e) {\n        return t.isHorizontal()\n          ? \"touchstart\" === e.type || \"touchmove\" === e.type\n            ? e.targetTouches[0].clientX\n            : e.clientX\n          : \"touchstart\" === e.type || \"touchmove\" === e.type\n          ? e.targetTouches[0].clientY\n          : e.clientY;\n      }\n      function b(e) {\n        const { scrollbar: s, rtlTranslate: a } = t,\n          { $el: i } = s;\n        let r;\n        (r =\n          (w(e) -\n            i.offset()[t.isHorizontal() ? \"left\" : \"top\"] -\n            (null !== l ? l : o / 2)) /\n          (c - o)),\n          (r = Math.max(Math.min(r, 1), 0)),\n          a && (r = 1 - r);\n        const n = t.minTranslate() + (t.maxTranslate() - t.minTranslate()) * r;\n        t.updateProgress(n),\n          t.setTranslate(n),\n          t.updateActiveIndex(),\n          t.updateSlidesClasses();\n      }\n      function x(e) {\n        const s = t.params.scrollbar,\n          { scrollbar: a, $wrapperEl: i } = t,\n          { $el: n, $dragEl: o } = a;\n        (h = !0),\n          (l =\n            e.target === o[0] || e.target === o\n              ? w(e) -\n                e.target.getBoundingClientRect()[\n                  t.isHorizontal() ? \"left\" : \"top\"\n                ]\n              : null),\n          e.preventDefault(),\n          e.stopPropagation(),\n          i.transition(100),\n          o.transition(100),\n          b(e),\n          clearTimeout(f),\n          n.transition(0),\n          s.hide && n.css(\"opacity\", 1),\n          t.params.cssMode && t.$wrapperEl.css(\"scroll-snap-type\", \"none\"),\n          r(\"scrollbarDragStart\", e);\n      }\n      function y(e) {\n        const { scrollbar: s, $wrapperEl: a } = t,\n          { $el: i, $dragEl: n } = s;\n        h &&\n          (e.preventDefault ? e.preventDefault() : (e.returnValue = !1),\n          b(e),\n          a.transition(0),\n          i.transition(0),\n          n.transition(0),\n          r(\"scrollbarDragMove\", e));\n      }\n      function E(e) {\n        const s = t.params.scrollbar,\n          { scrollbar: a, $wrapperEl: i } = t,\n          { $el: n } = a;\n        h &&\n          ((h = !1),\n          t.params.cssMode &&\n            (t.$wrapperEl.css(\"scroll-snap-type\", \"\"), i.transition(\"\")),\n          s.hide &&\n            (clearTimeout(f),\n            (f = p(() => {\n              n.css(\"opacity\", 0), n.transition(400);\n            }, 1e3))),\n          r(\"scrollbarDragEnd\", e),\n          s.snapOnRelease && t.slideToClosest());\n      }\n      function T(e) {\n        const {\n            scrollbar: s,\n            touchEventsTouch: a,\n            touchEventsDesktop: i,\n            params: r,\n            support: l,\n          } = t,\n          o = s.$el[0],\n          d = !(!l.passiveListener || !r.passiveListeners) && {\n            passive: !1,\n            capture: !1,\n          },\n          c = !(!l.passiveListener || !r.passiveListeners) && {\n            passive: !0,\n            capture: !1,\n          };\n        if (!o) return;\n        const p = \"on\" === e ? \"addEventListener\" : \"removeEventListener\";\n        l.touch\n          ? (o[p](a.start, x, d), o[p](a.move, y, d), o[p](a.end, E, c))\n          : (o[p](i.start, x, d), n[p](i.move, y, d), n[p](i.end, E, c));\n      }\n      function C() {\n        const { scrollbar: e, $el: s } = t;\n        t.params.scrollbar = F(\n          t,\n          t.originalParams.scrollbar,\n          t.params.scrollbar,\n          { el: \"swiper-scrollbar\" }\n        );\n        const a = t.params.scrollbar;\n        if (!a.el) return;\n        let i = d(a.el);\n        t.params.uniqueNavElements &&\n          \"string\" == typeof a.el &&\n          i.length > 1 &&\n          1 === s.find(a.el).length &&\n          (i = s.find(a.el));\n        let r = i.find(`.${t.params.scrollbar.dragClass}`);\n        0 === r.length &&\n          ((r = d(`<div class=\"${t.params.scrollbar.dragClass}\"></div>`)),\n          i.append(r)),\n          Object.assign(e, { $el: i, el: i[0], $dragEl: r, dragEl: r[0] }),\n          a.draggable && t.params.scrollbar.el && T(\"on\"),\n          i &&\n            i[t.enabled ? \"removeClass\" : \"addClass\"](\n              t.params.scrollbar.lockClass\n            );\n      }\n      function $() {\n        t.params.scrollbar.el && T(\"off\");\n      }\n      s({\n        scrollbar: {\n          el: null,\n          dragSize: \"auto\",\n          hide: !1,\n          draggable: !1,\n          snapOnRelease: !0,\n          lockClass: \"swiper-scrollbar-lock\",\n          dragClass: \"swiper-scrollbar-drag\",\n        },\n      }),\n        (t.scrollbar = { el: null, dragEl: null, $el: null, $dragEl: null }),\n        i(\"init\", () => {\n          C(), v(), g();\n        }),\n        i(\"update resize observerUpdate lock unlock\", () => {\n          v();\n        }),\n        i(\"setTranslate\", () => {\n          g();\n        }),\n        i(\"setTransition\", (e, s) => {\n          !(function (e) {\n            t.params.scrollbar.el &&\n              t.scrollbar.el &&\n              t.scrollbar.$dragEl.transition(e);\n          })(s);\n        }),\n        i(\"enable disable\", () => {\n          const { $el: e } = t.scrollbar;\n          e &&\n            e[t.enabled ? \"removeClass\" : \"addClass\"](\n              t.params.scrollbar.lockClass\n            );\n        }),\n        i(\"destroy\", () => {\n          $();\n        }),\n        Object.assign(t.scrollbar, {\n          updateSize: v,\n          setTranslate: g,\n          init: C,\n          destroy: $,\n        });\n    },\n    function (e) {\n      let { swiper: t, extendParams: s, on: a } = e;\n      s({ parallax: { enabled: !1 } });\n      const i = (e, s) => {\n          const { rtl: a } = t,\n            i = d(e),\n            r = a ? -1 : 1,\n            n = i.attr(\"data-swiper-parallax\") || \"0\";\n          let l = i.attr(\"data-swiper-parallax-x\"),\n            o = i.attr(\"data-swiper-parallax-y\");\n          const c = i.attr(\"data-swiper-parallax-scale\"),\n            p = i.attr(\"data-swiper-parallax-opacity\");\n          if (\n            (l || o\n              ? ((l = l || \"0\"), (o = o || \"0\"))\n              : t.isHorizontal()\n              ? ((l = n), (o = \"0\"))\n              : ((o = n), (l = \"0\")),\n            (l =\n              l.indexOf(\"%\") >= 0\n                ? parseInt(l, 10) * s * r + \"%\"\n                : l * s * r + \"px\"),\n            (o =\n              o.indexOf(\"%\") >= 0 ? parseInt(o, 10) * s + \"%\" : o * s + \"px\"),\n            null != p)\n          ) {\n            const e = p - (p - 1) * (1 - Math.abs(s));\n            i[0].style.opacity = e;\n          }\n          if (null == c) i.transform(`translate3d(${l}, ${o}, 0px)`);\n          else {\n            const e = c - (c - 1) * (1 - Math.abs(s));\n            i.transform(`translate3d(${l}, ${o}, 0px) scale(${e})`);\n          }\n        },\n        r = () => {\n          const { $el: e, slides: s, progress: a, snapGrid: r } = t;\n          e\n            .children(\n              \"[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]\"\n            )\n            .each((e) => {\n              i(e, a);\n            }),\n            s.each((e, s) => {\n              let n = e.progress;\n              t.params.slidesPerGroup > 1 &&\n                \"auto\" !== t.params.slidesPerView &&\n                (n += Math.ceil(s / 2) - a * (r.length - 1)),\n                (n = Math.min(Math.max(n, -1), 1)),\n                d(e)\n                  .find(\n                    \"[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]\"\n                  )\n                  .each((e) => {\n                    i(e, n);\n                  });\n            });\n        };\n      a(\"beforeInit\", () => {\n        t.params.parallax.enabled &&\n          ((t.params.watchSlidesProgress = !0),\n          (t.originalParams.watchSlidesProgress = !0));\n      }),\n        a(\"init\", () => {\n          t.params.parallax.enabled && r();\n        }),\n        a(\"setTranslate\", () => {\n          t.params.parallax.enabled && r();\n        }),\n        a(\"setTransition\", (e, s) => {\n          t.params.parallax.enabled &&\n            (function (e) {\n              void 0 === e && (e = t.params.speed);\n              const { $el: s } = t;\n              s.find(\n                \"[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]\"\n              ).each((t) => {\n                const s = d(t);\n                let a =\n                  parseInt(s.attr(\"data-swiper-parallax-duration\"), 10) || e;\n                0 === e && (a = 0), s.transition(a);\n              });\n            })(s);\n        });\n    },\n    function (e) {\n      let { swiper: t, extendParams: s, on: a, emit: i } = e;\n      const n = r();\n      s({\n        zoom: {\n          enabled: !1,\n          maxRatio: 3,\n          minRatio: 1,\n          toggle: !0,\n          containerClass: \"swiper-zoom-container\",\n          zoomedSlideClass: \"swiper-slide-zoomed\",\n        },\n      }),\n        (t.zoom = { enabled: !1 });\n      let l,\n        o,\n        c,\n        p = 1,\n        u = !1;\n      const m = {\n          $slideEl: void 0,\n          slideWidth: void 0,\n          slideHeight: void 0,\n          $imageEl: void 0,\n          $imageWrapEl: void 0,\n          maxRatio: 3,\n        },\n        f = {\n          isTouched: void 0,\n          isMoved: void 0,\n          currentX: void 0,\n          currentY: void 0,\n          minX: void 0,\n          minY: void 0,\n          maxX: void 0,\n          maxY: void 0,\n          width: void 0,\n          height: void 0,\n          startX: void 0,\n          startY: void 0,\n          touchesStart: {},\n          touchesCurrent: {},\n        },\n        g = {\n          x: void 0,\n          y: void 0,\n          prevPositionX: void 0,\n          prevPositionY: void 0,\n          prevTime: void 0,\n        };\n      let v = 1;\n      function w(e) {\n        if (e.targetTouches.length < 2) return 1;\n        const t = e.targetTouches[0].pageX,\n          s = e.targetTouches[0].pageY,\n          a = e.targetTouches[1].pageX,\n          i = e.targetTouches[1].pageY;\n        return Math.sqrt((a - t) ** 2 + (i - s) ** 2);\n      }\n      function b(e) {\n        const s = t.support,\n          a = t.params.zoom;\n        if (((o = !1), (c = !1), !s.gestures)) {\n          if (\n            \"touchstart\" !== e.type ||\n            (\"touchstart\" === e.type && e.targetTouches.length < 2)\n          )\n            return;\n          (o = !0), (m.scaleStart = w(e));\n        }\n        (m.$slideEl && m.$slideEl.length) ||\n        ((m.$slideEl = d(e.target).closest(`.${t.params.slideClass}`)),\n        0 === m.$slideEl.length && (m.$slideEl = t.slides.eq(t.activeIndex)),\n        (m.$imageEl = m.$slideEl\n          .find(`.${a.containerClass}`)\n          .eq(0)\n          .find(\"picture, img, svg, canvas, .swiper-zoom-target\")\n          .eq(0)),\n        (m.$imageWrapEl = m.$imageEl.parent(`.${a.containerClass}`)),\n        (m.maxRatio = m.$imageWrapEl.attr(\"data-swiper-zoom\") || a.maxRatio),\n        0 !== m.$imageWrapEl.length)\n          ? (m.$imageEl && m.$imageEl.transition(0), (u = !0))\n          : (m.$imageEl = void 0);\n      }\n      function x(e) {\n        const s = t.support,\n          a = t.params.zoom,\n          i = t.zoom;\n        if (!s.gestures) {\n          if (\n            \"touchmove\" !== e.type ||\n            (\"touchmove\" === e.type && e.targetTouches.length < 2)\n          )\n            return;\n          (c = !0), (m.scaleMove = w(e));\n        }\n        m.$imageEl && 0 !== m.$imageEl.length\n          ? (s.gestures\n              ? (i.scale = e.scale * p)\n              : (i.scale = (m.scaleMove / m.scaleStart) * p),\n            i.scale > m.maxRatio &&\n              (i.scale = m.maxRatio - 1 + (i.scale - m.maxRatio + 1) ** 0.5),\n            i.scale < a.minRatio &&\n              (i.scale = a.minRatio + 1 - (a.minRatio - i.scale + 1) ** 0.5),\n            m.$imageEl.transform(`translate3d(0,0,0) scale(${i.scale})`))\n          : \"gesturechange\" === e.type && b(e);\n      }\n      function y(e) {\n        const s = t.device,\n          a = t.support,\n          i = t.params.zoom,\n          r = t.zoom;\n        if (!a.gestures) {\n          if (!o || !c) return;\n          if (\n            \"touchend\" !== e.type ||\n            (\"touchend\" === e.type && e.changedTouches.length < 2 && !s.android)\n          )\n            return;\n          (o = !1), (c = !1);\n        }\n        m.$imageEl &&\n          0 !== m.$imageEl.length &&\n          ((r.scale = Math.max(Math.min(r.scale, m.maxRatio), i.minRatio)),\n          m.$imageEl\n            .transition(t.params.speed)\n            .transform(`translate3d(0,0,0) scale(${r.scale})`),\n          (p = r.scale),\n          (u = !1),\n          1 === r.scale && (m.$slideEl = void 0));\n      }\n      function E(e) {\n        const s = t.zoom;\n        if (!m.$imageEl || 0 === m.$imageEl.length) return;\n        if (((t.allowClick = !1), !f.isTouched || !m.$slideEl)) return;\n        f.isMoved ||\n          ((f.width = m.$imageEl[0].offsetWidth),\n          (f.height = m.$imageEl[0].offsetHeight),\n          (f.startX = h(m.$imageWrapEl[0], \"x\") || 0),\n          (f.startY = h(m.$imageWrapEl[0], \"y\") || 0),\n          (m.slideWidth = m.$slideEl[0].offsetWidth),\n          (m.slideHeight = m.$slideEl[0].offsetHeight),\n          m.$imageWrapEl.transition(0));\n        const a = f.width * s.scale,\n          i = f.height * s.scale;\n        if (!(a < m.slideWidth && i < m.slideHeight)) {\n          if (\n            ((f.minX = Math.min(m.slideWidth / 2 - a / 2, 0)),\n            (f.maxX = -f.minX),\n            (f.minY = Math.min(m.slideHeight / 2 - i / 2, 0)),\n            (f.maxY = -f.minY),\n            (f.touchesCurrent.x =\n              \"touchmove\" === e.type ? e.targetTouches[0].pageX : e.pageX),\n            (f.touchesCurrent.y =\n              \"touchmove\" === e.type ? e.targetTouches[0].pageY : e.pageY),\n            !f.isMoved && !u)\n          ) {\n            if (\n              t.isHorizontal() &&\n              ((Math.floor(f.minX) === Math.floor(f.startX) &&\n                f.touchesCurrent.x < f.touchesStart.x) ||\n                (Math.floor(f.maxX) === Math.floor(f.startX) &&\n                  f.touchesCurrent.x > f.touchesStart.x))\n            )\n              return void (f.isTouched = !1);\n            if (\n              !t.isHorizontal() &&\n              ((Math.floor(f.minY) === Math.floor(f.startY) &&\n                f.touchesCurrent.y < f.touchesStart.y) ||\n                (Math.floor(f.maxY) === Math.floor(f.startY) &&\n                  f.touchesCurrent.y > f.touchesStart.y))\n            )\n              return void (f.isTouched = !1);\n          }\n          e.cancelable && e.preventDefault(),\n            e.stopPropagation(),\n            (f.isMoved = !0),\n            (f.currentX = f.touchesCurrent.x - f.touchesStart.x + f.startX),\n            (f.currentY = f.touchesCurrent.y - f.touchesStart.y + f.startY),\n            f.currentX < f.minX &&\n              (f.currentX = f.minX + 1 - (f.minX - f.currentX + 1) ** 0.8),\n            f.currentX > f.maxX &&\n              (f.currentX = f.maxX - 1 + (f.currentX - f.maxX + 1) ** 0.8),\n            f.currentY < f.minY &&\n              (f.currentY = f.minY + 1 - (f.minY - f.currentY + 1) ** 0.8),\n            f.currentY > f.maxY &&\n              (f.currentY = f.maxY - 1 + (f.currentY - f.maxY + 1) ** 0.8),\n            g.prevPositionX || (g.prevPositionX = f.touchesCurrent.x),\n            g.prevPositionY || (g.prevPositionY = f.touchesCurrent.y),\n            g.prevTime || (g.prevTime = Date.now()),\n            (g.x =\n              (f.touchesCurrent.x - g.prevPositionX) /\n              (Date.now() - g.prevTime) /\n              2),\n            (g.y =\n              (f.touchesCurrent.y - g.prevPositionY) /\n              (Date.now() - g.prevTime) /\n              2),\n            Math.abs(f.touchesCurrent.x - g.prevPositionX) < 2 && (g.x = 0),\n            Math.abs(f.touchesCurrent.y - g.prevPositionY) < 2 && (g.y = 0),\n            (g.prevPositionX = f.touchesCurrent.x),\n            (g.prevPositionY = f.touchesCurrent.y),\n            (g.prevTime = Date.now()),\n            m.$imageWrapEl.transform(\n              `translate3d(${f.currentX}px, ${f.currentY}px,0)`\n            );\n        }\n      }\n      function T() {\n        const e = t.zoom;\n        m.$slideEl &&\n          t.previousIndex !== t.activeIndex &&\n          (m.$imageEl && m.$imageEl.transform(\"translate3d(0,0,0) scale(1)\"),\n          m.$imageWrapEl && m.$imageWrapEl.transform(\"translate3d(0,0,0)\"),\n          (e.scale = 1),\n          (p = 1),\n          (m.$slideEl = void 0),\n          (m.$imageEl = void 0),\n          (m.$imageWrapEl = void 0));\n      }\n      function C(e) {\n        const s = t.zoom,\n          a = t.params.zoom;\n        if (\n          (m.$slideEl ||\n            (e &&\n              e.target &&\n              (m.$slideEl = d(e.target).closest(`.${t.params.slideClass}`)),\n            m.$slideEl ||\n              (t.params.virtual && t.params.virtual.enabled && t.virtual\n                ? (m.$slideEl = t.$wrapperEl.children(\n                    `.${t.params.slideActiveClass}`\n                  ))\n                : (m.$slideEl = t.slides.eq(t.activeIndex))),\n            (m.$imageEl = m.$slideEl\n              .find(`.${a.containerClass}`)\n              .eq(0)\n              .find(\"picture, img, svg, canvas, .swiper-zoom-target\")\n              .eq(0)),\n            (m.$imageWrapEl = m.$imageEl.parent(`.${a.containerClass}`))),\n          !m.$imageEl ||\n            0 === m.$imageEl.length ||\n            !m.$imageWrapEl ||\n            0 === m.$imageWrapEl.length)\n        )\n          return;\n        let i, r, l, o, c, u, h, g, v, w, b, x, y, E, T, C, $, S;\n        t.params.cssMode &&\n          ((t.wrapperEl.style.overflow = \"hidden\"),\n          (t.wrapperEl.style.touchAction = \"none\")),\n          m.$slideEl.addClass(`${a.zoomedSlideClass}`),\n          void 0 === f.touchesStart.x && e\n            ? ((i =\n                \"touchend\" === e.type ? e.changedTouches[0].pageX : e.pageX),\n              (r = \"touchend\" === e.type ? e.changedTouches[0].pageY : e.pageY))\n            : ((i = f.touchesStart.x), (r = f.touchesStart.y)),\n          (s.scale = m.$imageWrapEl.attr(\"data-swiper-zoom\") || a.maxRatio),\n          (p = m.$imageWrapEl.attr(\"data-swiper-zoom\") || a.maxRatio),\n          e\n            ? (($ = m.$slideEl[0].offsetWidth),\n              (S = m.$slideEl[0].offsetHeight),\n              (l = m.$slideEl.offset().left + n.scrollX),\n              (o = m.$slideEl.offset().top + n.scrollY),\n              (c = l + $ / 2 - i),\n              (u = o + S / 2 - r),\n              (v = m.$imageEl[0].offsetWidth),\n              (w = m.$imageEl[0].offsetHeight),\n              (b = v * s.scale),\n              (x = w * s.scale),\n              (y = Math.min($ / 2 - b / 2, 0)),\n              (E = Math.min(S / 2 - x / 2, 0)),\n              (T = -y),\n              (C = -E),\n              (h = c * s.scale),\n              (g = u * s.scale),\n              h < y && (h = y),\n              h > T && (h = T),\n              g < E && (g = E),\n              g > C && (g = C))\n            : ((h = 0), (g = 0)),\n          m.$imageWrapEl\n            .transition(300)\n            .transform(`translate3d(${h}px, ${g}px,0)`),\n          m.$imageEl\n            .transition(300)\n            .transform(`translate3d(0,0,0) scale(${s.scale})`);\n      }\n      function $() {\n        const e = t.zoom,\n          s = t.params.zoom;\n        m.$slideEl ||\n          (t.params.virtual && t.params.virtual.enabled && t.virtual\n            ? (m.$slideEl = t.$wrapperEl.children(\n                `.${t.params.slideActiveClass}`\n              ))\n            : (m.$slideEl = t.slides.eq(t.activeIndex)),\n          (m.$imageEl = m.$slideEl\n            .find(`.${s.containerClass}`)\n            .eq(0)\n            .find(\"picture, img, svg, canvas, .swiper-zoom-target\")\n            .eq(0)),\n          (m.$imageWrapEl = m.$imageEl.parent(`.${s.containerClass}`))),\n          m.$imageEl &&\n            0 !== m.$imageEl.length &&\n            m.$imageWrapEl &&\n            0 !== m.$imageWrapEl.length &&\n            (t.params.cssMode &&\n              ((t.wrapperEl.style.overflow = \"\"),\n              (t.wrapperEl.style.touchAction = \"\")),\n            (e.scale = 1),\n            (p = 1),\n            m.$imageWrapEl.transition(300).transform(\"translate3d(0,0,0)\"),\n            m.$imageEl.transition(300).transform(\"translate3d(0,0,0) scale(1)\"),\n            m.$slideEl.removeClass(`${s.zoomedSlideClass}`),\n            (m.$slideEl = void 0));\n      }\n      function S(e) {\n        const s = t.zoom;\n        s.scale && 1 !== s.scale ? $() : C(e);\n      }\n      function M() {\n        const e = t.support;\n        return {\n          passiveListener: !(\n            \"touchstart\" !== t.touchEvents.start ||\n            !e.passiveListener ||\n            !t.params.passiveListeners\n          ) && { passive: !0, capture: !1 },\n          activeListenerWithCapture: !e.passiveListener || {\n            passive: !1,\n            capture: !0,\n          },\n        };\n      }\n      function P() {\n        return `.${t.params.slideClass}`;\n      }\n      function k(e) {\n        const { passiveListener: s } = M(),\n          a = P();\n        t.$wrapperEl[e](\"gesturestart\", a, b, s),\n          t.$wrapperEl[e](\"gesturechange\", a, x, s),\n          t.$wrapperEl[e](\"gestureend\", a, y, s);\n      }\n      function z() {\n        l || ((l = !0), k(\"on\"));\n      }\n      function O() {\n        l && ((l = !1), k(\"off\"));\n      }\n      function I() {\n        const e = t.zoom;\n        if (e.enabled) return;\n        e.enabled = !0;\n        const s = t.support,\n          { passiveListener: a, activeListenerWithCapture: i } = M(),\n          r = P();\n        s.gestures\n          ? (t.$wrapperEl.on(t.touchEvents.start, z, a),\n            t.$wrapperEl.on(t.touchEvents.end, O, a))\n          : \"touchstart\" === t.touchEvents.start &&\n            (t.$wrapperEl.on(t.touchEvents.start, r, b, a),\n            t.$wrapperEl.on(t.touchEvents.move, r, x, i),\n            t.$wrapperEl.on(t.touchEvents.end, r, y, a),\n            t.touchEvents.cancel &&\n              t.$wrapperEl.on(t.touchEvents.cancel, r, y, a)),\n          t.$wrapperEl.on(\n            t.touchEvents.move,\n            `.${t.params.zoom.containerClass}`,\n            E,\n            i\n          );\n      }\n      function L() {\n        const e = t.zoom;\n        if (!e.enabled) return;\n        const s = t.support;\n        e.enabled = !1;\n        const { passiveListener: a, activeListenerWithCapture: i } = M(),\n          r = P();\n        s.gestures\n          ? (t.$wrapperEl.off(t.touchEvents.start, z, a),\n            t.$wrapperEl.off(t.touchEvents.end, O, a))\n          : \"touchstart\" === t.touchEvents.start &&\n            (t.$wrapperEl.off(t.touchEvents.start, r, b, a),\n            t.$wrapperEl.off(t.touchEvents.move, r, x, i),\n            t.$wrapperEl.off(t.touchEvents.end, r, y, a),\n            t.touchEvents.cancel &&\n              t.$wrapperEl.off(t.touchEvents.cancel, r, y, a)),\n          t.$wrapperEl.off(\n            t.touchEvents.move,\n            `.${t.params.zoom.containerClass}`,\n            E,\n            i\n          );\n      }\n      Object.defineProperty(t.zoom, \"scale\", {\n        get: () => v,\n        set(e) {\n          if (v !== e) {\n            const t = m.$imageEl ? m.$imageEl[0] : void 0,\n              s = m.$slideEl ? m.$slideEl[0] : void 0;\n            i(\"zoomChange\", e, t, s);\n          }\n          v = e;\n        },\n      }),\n        a(\"init\", () => {\n          t.params.zoom.enabled && I();\n        }),\n        a(\"destroy\", () => {\n          L();\n        }),\n        a(\"touchStart\", (e, s) => {\n          t.zoom.enabled &&\n            (function (e) {\n              const s = t.device;\n              m.$imageEl &&\n                0 !== m.$imageEl.length &&\n                (f.isTouched ||\n                  (s.android && e.cancelable && e.preventDefault(),\n                  (f.isTouched = !0),\n                  (f.touchesStart.x =\n                    \"touchstart\" === e.type\n                      ? e.targetTouches[0].pageX\n                      : e.pageX),\n                  (f.touchesStart.y =\n                    \"touchstart\" === e.type\n                      ? e.targetTouches[0].pageY\n                      : e.pageY)));\n            })(s);\n        }),\n        a(\"touchEnd\", (e, s) => {\n          t.zoom.enabled &&\n            (function () {\n              const e = t.zoom;\n              if (!m.$imageEl || 0 === m.$imageEl.length) return;\n              if (!f.isTouched || !f.isMoved)\n                return (f.isTouched = !1), void (f.isMoved = !1);\n              (f.isTouched = !1), (f.isMoved = !1);\n              let s = 300,\n                a = 300;\n              const i = g.x * s,\n                r = f.currentX + i,\n                n = g.y * a,\n                l = f.currentY + n;\n              0 !== g.x && (s = Math.abs((r - f.currentX) / g.x)),\n                0 !== g.y && (a = Math.abs((l - f.currentY) / g.y));\n              const o = Math.max(s, a);\n              (f.currentX = r), (f.currentY = l);\n              const d = f.width * e.scale,\n                c = f.height * e.scale;\n              (f.minX = Math.min(m.slideWidth / 2 - d / 2, 0)),\n                (f.maxX = -f.minX),\n                (f.minY = Math.min(m.slideHeight / 2 - c / 2, 0)),\n                (f.maxY = -f.minY),\n                (f.currentX = Math.max(Math.min(f.currentX, f.maxX), f.minX)),\n                (f.currentY = Math.max(Math.min(f.currentY, f.maxY), f.minY)),\n                m.$imageWrapEl\n                  .transition(o)\n                  .transform(`translate3d(${f.currentX}px, ${f.currentY}px,0)`);\n            })();\n        }),\n        a(\"doubleTap\", (e, s) => {\n          !t.animating &&\n            t.params.zoom.enabled &&\n            t.zoom.enabled &&\n            t.params.zoom.toggle &&\n            S(s);\n        }),\n        a(\"transitionEnd\", () => {\n          t.zoom.enabled && t.params.zoom.enabled && T();\n        }),\n        a(\"slideChange\", () => {\n          t.zoom.enabled && t.params.zoom.enabled && t.params.cssMode && T();\n        }),\n        Object.assign(t.zoom, {\n          enable: I,\n          disable: L,\n          in: C,\n          out: $,\n          toggle: S,\n        });\n    },\n    function (e) {\n      let { swiper: t, extendParams: s, on: a, emit: i } = e;\n      s({\n        lazy: {\n          checkInView: !1,\n          enabled: !1,\n          loadPrevNext: !1,\n          loadPrevNextAmount: 1,\n          loadOnTransitionStart: !1,\n          scrollingElement: \"\",\n          elementClass: \"swiper-lazy\",\n          loadingClass: \"swiper-lazy-loading\",\n          loadedClass: \"swiper-lazy-loaded\",\n          preloaderClass: \"swiper-lazy-preloader\",\n        },\n      }),\n        (t.lazy = {});\n      let n = !1,\n        l = !1;\n      function o(e, s) {\n        void 0 === s && (s = !0);\n        const a = t.params.lazy;\n        if (void 0 === e) return;\n        if (0 === t.slides.length) return;\n        const r =\n            t.virtual && t.params.virtual.enabled\n              ? t.$wrapperEl.children(\n                  `.${t.params.slideClass}[data-swiper-slide-index=\"${e}\"]`\n                )\n              : t.slides.eq(e),\n          n = r.find(\n            `.${a.elementClass}:not(.${a.loadedClass}):not(.${a.loadingClass})`\n          );\n        !r.hasClass(a.elementClass) ||\n          r.hasClass(a.loadedClass) ||\n          r.hasClass(a.loadingClass) ||\n          n.push(r[0]),\n          0 !== n.length &&\n            n.each((e) => {\n              const n = d(e);\n              n.addClass(a.loadingClass);\n              const l = n.attr(\"data-background\"),\n                c = n.attr(\"data-src\"),\n                p = n.attr(\"data-srcset\"),\n                u = n.attr(\"data-sizes\"),\n                h = n.parent(\"picture\");\n              t.loadImage(n[0], c || l, p, u, !1, () => {\n                if (null != t && t && (!t || t.params) && !t.destroyed) {\n                  if (\n                    (l\n                      ? (n.css(\"background-image\", `url(\"${l}\")`),\n                        n.removeAttr(\"data-background\"))\n                      : (p &&\n                          (n.attr(\"srcset\", p), n.removeAttr(\"data-srcset\")),\n                        u && (n.attr(\"sizes\", u), n.removeAttr(\"data-sizes\")),\n                        h.length &&\n                          h.children(\"source\").each((e) => {\n                            const t = d(e);\n                            t.attr(\"data-srcset\") &&\n                              (t.attr(\"srcset\", t.attr(\"data-srcset\")),\n                              t.removeAttr(\"data-srcset\"));\n                          }),\n                        c && (n.attr(\"src\", c), n.removeAttr(\"data-src\"))),\n                    n.addClass(a.loadedClass).removeClass(a.loadingClass),\n                    r.find(`.${a.preloaderClass}`).remove(),\n                    t.params.loop && s)\n                  ) {\n                    const e = r.attr(\"data-swiper-slide-index\");\n                    if (r.hasClass(t.params.slideDuplicateClass)) {\n                      o(\n                        t.$wrapperEl\n                          .children(\n                            `[data-swiper-slide-index=\"${e}\"]:not(.${t.params.slideDuplicateClass})`\n                          )\n                          .index(),\n                        !1\n                      );\n                    } else {\n                      o(\n                        t.$wrapperEl\n                          .children(\n                            `.${t.params.slideDuplicateClass}[data-swiper-slide-index=\"${e}\"]`\n                          )\n                          .index(),\n                        !1\n                      );\n                    }\n                  }\n                  i(\"lazyImageReady\", r[0], n[0]),\n                    t.params.autoHeight && t.updateAutoHeight();\n                }\n              }),\n                i(\"lazyImageLoad\", r[0], n[0]);\n            });\n      }\n      function c() {\n        const { $wrapperEl: e, params: s, slides: a, activeIndex: i } = t,\n          r = t.virtual && s.virtual.enabled,\n          n = s.lazy;\n        let c = s.slidesPerView;\n        function p(t) {\n          if (r) {\n            if (\n              e.children(`.${s.slideClass}[data-swiper-slide-index=\"${t}\"]`)\n                .length\n            )\n              return !0;\n          } else if (a[t]) return !0;\n          return !1;\n        }\n        function u(e) {\n          return r ? d(e).attr(\"data-swiper-slide-index\") : d(e).index();\n        }\n        if (\n          (\"auto\" === c && (c = 0), l || (l = !0), t.params.watchSlidesProgress)\n        )\n          e.children(`.${s.slideVisibleClass}`).each((e) => {\n            o(r ? d(e).attr(\"data-swiper-slide-index\") : d(e).index());\n          });\n        else if (c > 1) for (let e = i; e < i + c; e += 1) p(e) && o(e);\n        else o(i);\n        if (n.loadPrevNext)\n          if (c > 1 || (n.loadPrevNextAmount && n.loadPrevNextAmount > 1)) {\n            const e = n.loadPrevNextAmount,\n              t = c,\n              s = Math.min(i + t + Math.max(e, t), a.length),\n              r = Math.max(i - Math.max(t, e), 0);\n            for (let e = i + c; e < s; e += 1) p(e) && o(e);\n            for (let e = r; e < i; e += 1) p(e) && o(e);\n          } else {\n            const t = e.children(`.${s.slideNextClass}`);\n            t.length > 0 && o(u(t));\n            const a = e.children(`.${s.slidePrevClass}`);\n            a.length > 0 && o(u(a));\n          }\n      }\n      function p() {\n        const e = r();\n        if (!t || t.destroyed) return;\n        const s = t.params.lazy.scrollingElement\n            ? d(t.params.lazy.scrollingElement)\n            : d(e),\n          a = s[0] === e,\n          i = a ? e.innerWidth : s[0].offsetWidth,\n          l = a ? e.innerHeight : s[0].offsetHeight,\n          o = t.$el.offset(),\n          { rtlTranslate: u } = t;\n        let h = !1;\n        u && (o.left -= t.$el[0].scrollLeft);\n        const m = [\n          [o.left, o.top],\n          [o.left + t.width, o.top],\n          [o.left, o.top + t.height],\n          [o.left + t.width, o.top + t.height],\n        ];\n        for (let e = 0; e < m.length; e += 1) {\n          const t = m[e];\n          if (t[0] >= 0 && t[0] <= i && t[1] >= 0 && t[1] <= l) {\n            if (0 === t[0] && 0 === t[1]) continue;\n            h = !0;\n          }\n        }\n        const f = !(\n          \"touchstart\" !== t.touchEvents.start ||\n          !t.support.passiveListener ||\n          !t.params.passiveListeners\n        ) && { passive: !0, capture: !1 };\n        h\n          ? (c(), s.off(\"scroll\", p, f))\n          : n || ((n = !0), s.on(\"scroll\", p, f));\n      }\n      a(\"beforeInit\", () => {\n        t.params.lazy.enabled &&\n          t.params.preloadImages &&\n          (t.params.preloadImages = !1);\n      }),\n        a(\"init\", () => {\n          t.params.lazy.enabled && (t.params.lazy.checkInView ? p() : c());\n        }),\n        a(\"scroll\", () => {\n          t.params.freeMode &&\n            t.params.freeMode.enabled &&\n            !t.params.freeMode.sticky &&\n            c();\n        }),\n        a(\"scrollbarDragMove resize _freeModeNoMomentumRelease\", () => {\n          t.params.lazy.enabled && (t.params.lazy.checkInView ? p() : c());\n        }),\n        a(\"transitionStart\", () => {\n          t.params.lazy.enabled &&\n            (t.params.lazy.loadOnTransitionStart ||\n              (!t.params.lazy.loadOnTransitionStart && !l)) &&\n            (t.params.lazy.checkInView ? p() : c());\n        }),\n        a(\"transitionEnd\", () => {\n          t.params.lazy.enabled &&\n            !t.params.lazy.loadOnTransitionStart &&\n            (t.params.lazy.checkInView ? p() : c());\n        }),\n        a(\"slideChange\", () => {\n          const {\n            lazy: e,\n            cssMode: s,\n            watchSlidesProgress: a,\n            touchReleaseOnEdges: i,\n            resistanceRatio: r,\n          } = t.params;\n          e.enabled && (s || (a && (i || 0 === r))) && c();\n        }),\n        Object.assign(t.lazy, { load: c, loadInSlide: o });\n    },\n    function (e) {\n      let { swiper: t, extendParams: s, on: a } = e;\n      function i(e, t) {\n        const s = (function () {\n          let e, t, s;\n          return (a, i) => {\n            for (t = -1, e = a.length; e - t > 1; )\n              (s = (e + t) >> 1), a[s] <= i ? (t = s) : (e = s);\n            return e;\n          };\n        })();\n        let a, i;\n        return (\n          (this.x = e),\n          (this.y = t),\n          (this.lastIndex = e.length - 1),\n          (this.interpolate = function (e) {\n            return e\n              ? ((i = s(this.x, e)),\n                (a = i - 1),\n                ((e - this.x[a]) * (this.y[i] - this.y[a])) /\n                  (this.x[i] - this.x[a]) +\n                  this.y[a])\n              : 0;\n          }),\n          this\n        );\n      }\n      function r() {\n        t.controller.control &&\n          t.controller.spline &&\n          ((t.controller.spline = void 0), delete t.controller.spline);\n      }\n      s({ controller: { control: void 0, inverse: !1, by: \"slide\" } }),\n        (t.controller = { control: void 0 }),\n        a(\"beforeInit\", () => {\n          t.controller.control = t.params.controller.control;\n        }),\n        a(\"update\", () => {\n          r();\n        }),\n        a(\"resize\", () => {\n          r();\n        }),\n        a(\"observerUpdate\", () => {\n          r();\n        }),\n        a(\"setTranslate\", (e, s, a) => {\n          t.controller.control && t.controller.setTranslate(s, a);\n        }),\n        a(\"setTransition\", (e, s, a) => {\n          t.controller.control && t.controller.setTransition(s, a);\n        }),\n        Object.assign(t.controller, {\n          setTranslate: function (e, s) {\n            const a = t.controller.control;\n            let r, n;\n            const l = t.constructor;\n            function o(e) {\n              const s = t.rtlTranslate ? -t.translate : t.translate;\n              \"slide\" === t.params.controller.by &&\n                (!(function (e) {\n                  t.controller.spline ||\n                    (t.controller.spline = t.params.loop\n                      ? new i(t.slidesGrid, e.slidesGrid)\n                      : new i(t.snapGrid, e.snapGrid));\n                })(e),\n                (n = -t.controller.spline.interpolate(-s))),\n                (n && \"container\" !== t.params.controller.by) ||\n                  ((r =\n                    (e.maxTranslate() - e.minTranslate()) /\n                    (t.maxTranslate() - t.minTranslate())),\n                  (n = (s - t.minTranslate()) * r + e.minTranslate())),\n                t.params.controller.inverse && (n = e.maxTranslate() - n),\n                e.updateProgress(n),\n                e.setTranslate(n, t),\n                e.updateActiveIndex(),\n                e.updateSlidesClasses();\n            }\n            if (Array.isArray(a))\n              for (let e = 0; e < a.length; e += 1)\n                a[e] !== s && a[e] instanceof l && o(a[e]);\n            else a instanceof l && s !== a && o(a);\n          },\n          setTransition: function (e, s) {\n            const a = t.constructor,\n              i = t.controller.control;\n            let r;\n            function n(s) {\n              s.setTransition(e, t),\n                0 !== e &&\n                  (s.transitionStart(),\n                  s.params.autoHeight &&\n                    p(() => {\n                      s.updateAutoHeight();\n                    }),\n                  s.$wrapperEl.transitionEnd(() => {\n                    i &&\n                      (s.params.loop &&\n                        \"slide\" === t.params.controller.by &&\n                        s.loopFix(),\n                      s.transitionEnd());\n                  }));\n            }\n            if (Array.isArray(i))\n              for (r = 0; r < i.length; r += 1)\n                i[r] !== s && i[r] instanceof a && n(i[r]);\n            else i instanceof a && s !== i && n(i);\n          },\n        });\n    },\n    function (e) {\n      let { swiper: t, extendParams: s, on: a } = e;\n      s({\n        a11y: {\n          enabled: !0,\n          notificationClass: \"swiper-notification\",\n          prevSlideMessage: \"Previous slide\",\n          nextSlideMessage: \"Next slide\",\n          firstSlideMessage: \"This is the first slide\",\n          lastSlideMessage: \"This is the last slide\",\n          paginationBulletMessage: \"Go to slide {{index}}\",\n          slideLabelMessage: \"{{index}} / {{slidesLength}}\",\n          containerMessage: null,\n          containerRoleDescriptionMessage: null,\n          itemRoleDescriptionMessage: null,\n          slideRole: \"group\",\n        },\n      });\n      let i = null;\n      function r(e) {\n        const t = i;\n        0 !== t.length && (t.html(\"\"), t.html(e));\n      }\n      function n(e) {\n        e.attr(\"tabIndex\", \"0\");\n      }\n      function l(e) {\n        e.attr(\"tabIndex\", \"-1\");\n      }\n      function o(e, t) {\n        e.attr(\"role\", t);\n      }\n      function c(e, t) {\n        e.attr(\"aria-roledescription\", t);\n      }\n      function p(e, t) {\n        e.attr(\"aria-label\", t);\n      }\n      function u(e) {\n        e.attr(\"aria-disabled\", !0);\n      }\n      function h(e) {\n        e.attr(\"aria-disabled\", !1);\n      }\n      function m(e) {\n        if (13 !== e.keyCode && 32 !== e.keyCode) return;\n        const s = t.params.a11y,\n          a = d(e.target);\n        t.navigation &&\n          t.navigation.$nextEl &&\n          a.is(t.navigation.$nextEl) &&\n          ((t.isEnd && !t.params.loop) || t.slideNext(),\n          t.isEnd ? r(s.lastSlideMessage) : r(s.nextSlideMessage)),\n          t.navigation &&\n            t.navigation.$prevEl &&\n            a.is(t.navigation.$prevEl) &&\n            ((t.isBeginning && !t.params.loop) || t.slidePrev(),\n            t.isBeginning ? r(s.firstSlideMessage) : r(s.prevSlideMessage)),\n          t.pagination &&\n            a.is(U(t.params.pagination.bulletClass)) &&\n            a[0].click();\n      }\n      function f() {\n        return (\n          t.pagination && t.pagination.bullets && t.pagination.bullets.length\n        );\n      }\n      function g() {\n        return f() && t.params.pagination.clickable;\n      }\n      const v = (e, t, s) => {\n          n(e),\n            \"BUTTON\" !== e[0].tagName && (o(e, \"button\"), e.on(\"keydown\", m)),\n            p(e, s),\n            (function (e, t) {\n              e.attr(\"aria-controls\", t);\n            })(e, t);\n        },\n        w = (e) => {\n          const s = e.target.closest(`.${t.params.slideClass}`);\n          if (!s || !t.slides.includes(s)) return;\n          const a = t.slides.indexOf(s) === t.activeIndex,\n            i =\n              t.params.watchSlidesProgress &&\n              t.visibleSlides &&\n              t.visibleSlides.includes(s);\n          a || i || t.slideTo(t.slides.indexOf(s), 0);\n        };\n      function b() {\n        const e = t.params.a11y;\n        t.$el.append(i);\n        const s = t.$el;\n        e.containerRoleDescriptionMessage &&\n          c(s, e.containerRoleDescriptionMessage),\n          e.containerMessage && p(s, e.containerMessage);\n        const a = t.$wrapperEl,\n          r =\n            a.attr(\"id\") ||\n            `swiper-wrapper-${\n              ((n = 16),\n              void 0 === n && (n = 16),\n              \"x\"\n                .repeat(n)\n                .replace(/x/g, () =>\n                  Math.round(16 * Math.random()).toString(16)\n                ))\n            }`;\n        var n;\n        const l =\n          t.params.autoplay && t.params.autoplay.enabled ? \"off\" : \"polite\";\n        var u;\n        (u = r),\n          a.attr(\"id\", u),\n          (function (e, t) {\n            e.attr(\"aria-live\", t);\n          })(a, l),\n          e.itemRoleDescriptionMessage &&\n            c(d(t.slides), e.itemRoleDescriptionMessage),\n          o(d(t.slides), e.slideRole);\n        const h = t.params.loop\n          ? t.slides.filter(\n              (e) => !e.classList.contains(t.params.slideDuplicateClass)\n            ).length\n          : t.slides.length;\n        let f, b;\n        t.slides.each((s, a) => {\n          const i = d(s),\n            r = t.params.loop\n              ? parseInt(i.attr(\"data-swiper-slide-index\"), 10)\n              : a;\n          p(\n            i,\n            e.slideLabelMessage\n              .replace(/\\{\\{index\\}\\}/, r + 1)\n              .replace(/\\{\\{slidesLength\\}\\}/, h)\n          );\n        }),\n          t.navigation && t.navigation.$nextEl && (f = t.navigation.$nextEl),\n          t.navigation && t.navigation.$prevEl && (b = t.navigation.$prevEl),\n          f && f.length && v(f, r, e.nextSlideMessage),\n          b && b.length && v(b, r, e.prevSlideMessage),\n          g() &&\n            t.pagination.$el.on(\n              \"keydown\",\n              U(t.params.pagination.bulletClass),\n              m\n            ),\n          t.$el.on(\"focus\", w, !0);\n      }\n      a(\"beforeInit\", () => {\n        i = d(\n          `<span class=\"${t.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`\n        );\n      }),\n        a(\"afterInit\", () => {\n          t.params.a11y.enabled && b();\n        }),\n        a(\"fromEdge toEdge afterInit lock unlock\", () => {\n          t.params.a11y.enabled &&\n            (function () {\n              if (t.params.loop || t.params.rewind || !t.navigation) return;\n              const { $nextEl: e, $prevEl: s } = t.navigation;\n              s &&\n                s.length > 0 &&\n                (t.isBeginning ? (u(s), l(s)) : (h(s), n(s))),\n                e && e.length > 0 && (t.isEnd ? (u(e), l(e)) : (h(e), n(e)));\n            })();\n        }),\n        a(\"paginationUpdate\", () => {\n          t.params.a11y.enabled &&\n            (function () {\n              const e = t.params.a11y;\n              f() &&\n                t.pagination.bullets.each((s) => {\n                  const a = d(s);\n                  t.params.pagination.clickable &&\n                    (n(a),\n                    t.params.pagination.renderBullet ||\n                      (o(a, \"button\"),\n                      p(\n                        a,\n                        e.paginationBulletMessage.replace(\n                          /\\{\\{index\\}\\}/,\n                          a.index() + 1\n                        )\n                      ))),\n                    a.is(`.${t.params.pagination.bulletActiveClass}`)\n                      ? a.attr(\"aria-current\", \"true\")\n                      : a.removeAttr(\"aria-current\");\n                });\n            })();\n        }),\n        a(\"destroy\", () => {\n          t.params.a11y.enabled &&\n            (function () {\n              let e, s;\n              i && i.length > 0 && i.remove(),\n                t.navigation &&\n                  t.navigation.$nextEl &&\n                  (e = t.navigation.$nextEl),\n                t.navigation &&\n                  t.navigation.$prevEl &&\n                  (s = t.navigation.$prevEl),\n                e && e.off(\"keydown\", m),\n                s && s.off(\"keydown\", m),\n                g() &&\n                  t.pagination.$el.off(\n                    \"keydown\",\n                    U(t.params.pagination.bulletClass),\n                    m\n                  ),\n                t.$el.off(\"focus\", w, !0);\n            })();\n        });\n    },\n    function (e) {\n      let { swiper: t, extendParams: s, on: a } = e;\n      s({\n        history: { enabled: !1, root: \"\", replaceState: !1, key: \"slides\" },\n      });\n      let i = !1,\n        n = {};\n      const l = (e) =>\n          e\n            .toString()\n            .replace(/\\s+/g, \"-\")\n            .replace(/[^\\w-]+/g, \"\")\n            .replace(/--+/g, \"-\")\n            .replace(/^-+/, \"\")\n            .replace(/-+$/, \"\"),\n        o = (e) => {\n          const t = r();\n          let s;\n          s = e ? new URL(e) : t.location;\n          const a = s.pathname\n              .slice(1)\n              .split(\"/\")\n              .filter((e) => \"\" !== e),\n            i = a.length;\n          return { key: a[i - 2], value: a[i - 1] };\n        },\n        d = (e, s) => {\n          const a = r();\n          if (!i || !t.params.history.enabled) return;\n          let n;\n          n = t.params.url ? new URL(t.params.url) : a.location;\n          const o = t.slides.eq(s);\n          let d = l(o.attr(\"data-history\"));\n          if (t.params.history.root.length > 0) {\n            let s = t.params.history.root;\n            \"/\" === s[s.length - 1] && (s = s.slice(0, s.length - 1)),\n              (d = `${s}/${e}/${d}`);\n          } else n.pathname.includes(e) || (d = `${e}/${d}`);\n          const c = a.history.state;\n          (c && c.value === d) ||\n            (t.params.history.replaceState\n              ? a.history.replaceState({ value: d }, null, d)\n              : a.history.pushState({ value: d }, null, d));\n        },\n        c = (e, s, a) => {\n          if (s)\n            for (let i = 0, r = t.slides.length; i < r; i += 1) {\n              const r = t.slides.eq(i);\n              if (\n                l(r.attr(\"data-history\")) === s &&\n                !r.hasClass(t.params.slideDuplicateClass)\n              ) {\n                const s = r.index();\n                t.slideTo(s, e, a);\n              }\n            }\n          else t.slideTo(0, e, a);\n        },\n        p = () => {\n          (n = o(t.params.url)), c(t.params.speed, t.paths.value, !1);\n        };\n      a(\"init\", () => {\n        t.params.history.enabled &&\n          (() => {\n            const e = r();\n            if (t.params.history) {\n              if (!e.history || !e.history.pushState)\n                return (\n                  (t.params.history.enabled = !1),\n                  void (t.params.hashNavigation.enabled = !0)\n                );\n              (i = !0),\n                (n = o(t.params.url)),\n                (n.key || n.value) &&\n                  (c(0, n.value, t.params.runCallbacksOnInit),\n                  t.params.history.replaceState ||\n                    e.addEventListener(\"popstate\", p));\n            }\n          })();\n      }),\n        a(\"destroy\", () => {\n          t.params.history.enabled &&\n            (() => {\n              const e = r();\n              t.params.history.replaceState ||\n                e.removeEventListener(\"popstate\", p);\n            })();\n        }),\n        a(\"transitionEnd _freeModeNoMomentumRelease\", () => {\n          i && d(t.params.history.key, t.activeIndex);\n        }),\n        a(\"slideChange\", () => {\n          i && t.params.cssMode && d(t.params.history.key, t.activeIndex);\n        });\n    },\n    function (e) {\n      let { swiper: t, extendParams: s, emit: i, on: n } = e,\n        l = !1;\n      const o = a(),\n        c = r();\n      s({ hashNavigation: { enabled: !1, replaceState: !1, watchState: !1 } });\n      const p = () => {\n          i(\"hashChange\");\n          const e = o.location.hash.replace(\"#\", \"\");\n          if (e !== t.slides.eq(t.activeIndex).attr(\"data-hash\")) {\n            const s = t.$wrapperEl\n              .children(`.${t.params.slideClass}[data-hash=\"${e}\"]`)\n              .index();\n            if (void 0 === s) return;\n            t.slideTo(s);\n          }\n        },\n        u = () => {\n          if (l && t.params.hashNavigation.enabled)\n            if (\n              t.params.hashNavigation.replaceState &&\n              c.history &&\n              c.history.replaceState\n            )\n              c.history.replaceState(\n                null,\n                null,\n                `#${t.slides.eq(t.activeIndex).attr(\"data-hash\")}` || \"\"\n              ),\n                i(\"hashSet\");\n            else {\n              const e = t.slides.eq(t.activeIndex),\n                s = e.attr(\"data-hash\") || e.attr(\"data-history\");\n              (o.location.hash = s || \"\"), i(\"hashSet\");\n            }\n        };\n      n(\"init\", () => {\n        t.params.hashNavigation.enabled &&\n          (() => {\n            if (\n              !t.params.hashNavigation.enabled ||\n              (t.params.history && t.params.history.enabled)\n            )\n              return;\n            l = !0;\n            const e = o.location.hash.replace(\"#\", \"\");\n            if (e) {\n              const s = 0;\n              for (let a = 0, i = t.slides.length; a < i; a += 1) {\n                const i = t.slides.eq(a);\n                if (\n                  (i.attr(\"data-hash\") || i.attr(\"data-history\")) === e &&\n                  !i.hasClass(t.params.slideDuplicateClass)\n                ) {\n                  const e = i.index();\n                  t.slideTo(e, s, t.params.runCallbacksOnInit, !0);\n                }\n              }\n            }\n            t.params.hashNavigation.watchState && d(c).on(\"hashchange\", p);\n          })();\n      }),\n        n(\"destroy\", () => {\n          t.params.hashNavigation.enabled &&\n            t.params.hashNavigation.watchState &&\n            d(c).off(\"hashchange\", p);\n        }),\n        n(\"transitionEnd _freeModeNoMomentumRelease\", () => {\n          l && u();\n        }),\n        n(\"slideChange\", () => {\n          l && t.params.cssMode && u();\n        });\n    },\n    function (e) {\n      let t,\n        { swiper: s, extendParams: i, on: r, emit: n } = e;\n      function l() {\n        const e = s.slides.eq(s.activeIndex);\n        let a = s.params.autoplay.delay;\n        e.attr(\"data-swiper-autoplay\") &&\n          (a = e.attr(\"data-swiper-autoplay\") || s.params.autoplay.delay),\n          clearTimeout(t),\n          (t = p(() => {\n            let e;\n            s.params.autoplay.reverseDirection\n              ? s.params.loop\n                ? (s.loopFix(),\n                  (e = s.slidePrev(s.params.speed, !0, !0)),\n                  n(\"autoplay\"))\n                : s.isBeginning\n                ? s.params.autoplay.stopOnLastSlide\n                  ? d()\n                  : ((e = s.slideTo(\n                      s.slides.length - 1,\n                      s.params.speed,\n                      !0,\n                      !0\n                    )),\n                    n(\"autoplay\"))\n                : ((e = s.slidePrev(s.params.speed, !0, !0)), n(\"autoplay\"))\n              : s.params.loop\n              ? (s.loopFix(),\n                (e = s.slideNext(s.params.speed, !0, !0)),\n                n(\"autoplay\"))\n              : s.isEnd\n              ? s.params.autoplay.stopOnLastSlide\n                ? d()\n                : ((e = s.slideTo(0, s.params.speed, !0, !0)), n(\"autoplay\"))\n              : ((e = s.slideNext(s.params.speed, !0, !0)), n(\"autoplay\")),\n              ((s.params.cssMode && s.autoplay.running) || !1 === e) && l();\n          }, a));\n      }\n      function o() {\n        return (\n          void 0 === t &&\n          !s.autoplay.running &&\n          ((s.autoplay.running = !0), n(\"autoplayStart\"), l(), !0)\n        );\n      }\n      function d() {\n        return (\n          !!s.autoplay.running &&\n          void 0 !== t &&\n          (t && (clearTimeout(t), (t = void 0)),\n          (s.autoplay.running = !1),\n          n(\"autoplayStop\"),\n          !0)\n        );\n      }\n      function c(e) {\n        s.autoplay.running &&\n          (s.autoplay.paused ||\n            (t && clearTimeout(t),\n            (s.autoplay.paused = !0),\n            0 !== e && s.params.autoplay.waitForTransition\n              ? [\"transitionend\", \"webkitTransitionEnd\"].forEach((e) => {\n                  s.$wrapperEl[0].addEventListener(e, h);\n                })\n              : ((s.autoplay.paused = !1), l())));\n      }\n      function u() {\n        const e = a();\n        \"hidden\" === e.visibilityState && s.autoplay.running && c(),\n          \"visible\" === e.visibilityState &&\n            s.autoplay.paused &&\n            (l(), (s.autoplay.paused = !1));\n      }\n      function h(e) {\n        s &&\n          !s.destroyed &&\n          s.$wrapperEl &&\n          e.target === s.$wrapperEl[0] &&\n          ([\"transitionend\", \"webkitTransitionEnd\"].forEach((e) => {\n            s.$wrapperEl[0].removeEventListener(e, h);\n          }),\n          (s.autoplay.paused = !1),\n          s.autoplay.running ? l() : d());\n      }\n      function m() {\n        s.params.autoplay.disableOnInteraction\n          ? d()\n          : (n(\"autoplayPause\"), c()),\n          [\"transitionend\", \"webkitTransitionEnd\"].forEach((e) => {\n            s.$wrapperEl[0].removeEventListener(e, h);\n          });\n      }\n      function f() {\n        s.params.autoplay.disableOnInteraction ||\n          ((s.autoplay.paused = !1), n(\"autoplayResume\"), l());\n      }\n      (s.autoplay = { running: !1, paused: !1 }),\n        i({\n          autoplay: {\n            enabled: !1,\n            delay: 3e3,\n            waitForTransition: !0,\n            disableOnInteraction: !0,\n            stopOnLastSlide: !1,\n            reverseDirection: !1,\n            pauseOnMouseEnter: !1,\n          },\n        }),\n        r(\"init\", () => {\n          if (s.params.autoplay.enabled) {\n            o();\n            a().addEventListener(\"visibilitychange\", u),\n              s.params.autoplay.pauseOnMouseEnter &&\n                (s.$el.on(\"mouseenter\", m), s.$el.on(\"mouseleave\", f));\n          }\n        }),\n        r(\"beforeTransitionStart\", (e, t, a) => {\n          s.autoplay.running &&\n            (a || !s.params.autoplay.disableOnInteraction\n              ? s.autoplay.pause(t)\n              : d());\n        }),\n        r(\"sliderFirstMove\", () => {\n          s.autoplay.running &&\n            (s.params.autoplay.disableOnInteraction ? d() : c());\n        }),\n        r(\"touchEnd\", () => {\n          s.params.cssMode &&\n            s.autoplay.paused &&\n            !s.params.autoplay.disableOnInteraction &&\n            l();\n        }),\n        r(\"destroy\", () => {\n          s.$el.off(\"mouseenter\", m),\n            s.$el.off(\"mouseleave\", f),\n            s.autoplay.running && d();\n          a().removeEventListener(\"visibilitychange\", u);\n        }),\n        Object.assign(s.autoplay, { pause: c, run: l, start: o, stop: d });\n    },\n    function (e) {\n      let { swiper: t, extendParams: s, on: a } = e;\n      s({\n        thumbs: {\n          swiper: null,\n          multipleActiveThumbs: !0,\n          autoScrollOffset: 0,\n          slideThumbActiveClass: \"swiper-slide-thumb-active\",\n          thumbsContainerClass: \"swiper-thumbs\",\n        },\n      });\n      let i = !1,\n        r = !1;\n      function n() {\n        const e = t.thumbs.swiper;\n        if (!e) return;\n        const s = e.clickedIndex,\n          a = e.clickedSlide;\n        if (a && d(a).hasClass(t.params.thumbs.slideThumbActiveClass)) return;\n        if (null == s) return;\n        let i;\n        if (\n          ((i = e.params.loop\n            ? parseInt(d(e.clickedSlide).attr(\"data-swiper-slide-index\"), 10)\n            : s),\n          t.params.loop)\n        ) {\n          let e = t.activeIndex;\n          t.slides.eq(e).hasClass(t.params.slideDuplicateClass) &&\n            (t.loopFix(),\n            (t._clientLeft = t.$wrapperEl[0].clientLeft),\n            (e = t.activeIndex));\n          const s = t.slides\n              .eq(e)\n              .prevAll(`[data-swiper-slide-index=\"${i}\"]`)\n              .eq(0)\n              .index(),\n            a = t.slides\n              .eq(e)\n              .nextAll(`[data-swiper-slide-index=\"${i}\"]`)\n              .eq(0)\n              .index();\n          i = void 0 === s ? a : void 0 === a ? s : a - e < e - s ? a : s;\n        }\n        t.slideTo(i);\n      }\n      function l() {\n        const { thumbs: e } = t.params;\n        if (i) return !1;\n        i = !0;\n        const s = t.constructor;\n        if (e.swiper instanceof s)\n          (t.thumbs.swiper = e.swiper),\n            Object.assign(t.thumbs.swiper.originalParams, {\n              watchSlidesProgress: !0,\n              slideToClickedSlide: !1,\n            }),\n            Object.assign(t.thumbs.swiper.params, {\n              watchSlidesProgress: !0,\n              slideToClickedSlide: !1,\n            });\n        else if (m(e.swiper)) {\n          const a = Object.assign({}, e.swiper);\n          Object.assign(a, {\n            watchSlidesProgress: !0,\n            slideToClickedSlide: !1,\n          }),\n            (t.thumbs.swiper = new s(a)),\n            (r = !0);\n        }\n        return (\n          t.thumbs.swiper.$el.addClass(t.params.thumbs.thumbsContainerClass),\n          t.thumbs.swiper.on(\"tap\", n),\n          !0\n        );\n      }\n      function o(e) {\n        const s = t.thumbs.swiper;\n        if (!s) return;\n        const a =\n            \"auto\" === s.params.slidesPerView\n              ? s.slidesPerViewDynamic()\n              : s.params.slidesPerView,\n          i = t.params.thumbs.autoScrollOffset,\n          r = i && !s.params.loop;\n        if (t.realIndex !== s.realIndex || r) {\n          let n,\n            l,\n            o = s.activeIndex;\n          if (s.params.loop) {\n            s.slides.eq(o).hasClass(s.params.slideDuplicateClass) &&\n              (s.loopFix(),\n              (s._clientLeft = s.$wrapperEl[0].clientLeft),\n              (o = s.activeIndex));\n            const e = s.slides\n                .eq(o)\n                .prevAll(`[data-swiper-slide-index=\"${t.realIndex}\"]`)\n                .eq(0)\n                .index(),\n              a = s.slides\n                .eq(o)\n                .nextAll(`[data-swiper-slide-index=\"${t.realIndex}\"]`)\n                .eq(0)\n                .index();\n            (n =\n              void 0 === e\n                ? a\n                : void 0 === a\n                ? e\n                : a - o == o - e\n                ? s.params.slidesPerGroup > 1\n                  ? a\n                  : o\n                : a - o < o - e\n                ? a\n                : e),\n              (l = t.activeIndex > t.previousIndex ? \"next\" : \"prev\");\n          } else (n = t.realIndex), (l = n > t.previousIndex ? \"next\" : \"prev\");\n          r && (n += \"next\" === l ? i : -1 * i),\n            s.visibleSlidesIndexes &&\n              s.visibleSlidesIndexes.indexOf(n) < 0 &&\n              (s.params.centeredSlides\n                ? (n =\n                    n > o\n                      ? n - Math.floor(a / 2) + 1\n                      : n + Math.floor(a / 2) - 1)\n                : n > o && s.params.slidesPerGroup,\n              s.slideTo(n, e ? 0 : void 0));\n        }\n        let n = 1;\n        const l = t.params.thumbs.slideThumbActiveClass;\n        if (\n          (t.params.slidesPerView > 1 &&\n            !t.params.centeredSlides &&\n            (n = t.params.slidesPerView),\n          t.params.thumbs.multipleActiveThumbs || (n = 1),\n          (n = Math.floor(n)),\n          s.slides.removeClass(l),\n          s.params.loop || (s.params.virtual && s.params.virtual.enabled))\n        )\n          for (let e = 0; e < n; e += 1)\n            s.$wrapperEl\n              .children(`[data-swiper-slide-index=\"${t.realIndex + e}\"]`)\n              .addClass(l);\n        else\n          for (let e = 0; e < n; e += 1)\n            s.slides.eq(t.realIndex + e).addClass(l);\n      }\n      (t.thumbs = { swiper: null }),\n        a(\"beforeInit\", () => {\n          const { thumbs: e } = t.params;\n          e && e.swiper && (l(), o(!0));\n        }),\n        a(\"slideChange update resize observerUpdate\", () => {\n          t.thumbs.swiper && o();\n        }),\n        a(\"setTransition\", (e, s) => {\n          const a = t.thumbs.swiper;\n          a && a.setTransition(s);\n        }),\n        a(\"beforeDestroy\", () => {\n          const e = t.thumbs.swiper;\n          e && r && e && e.destroy();\n        }),\n        Object.assign(t.thumbs, { init: l, update: o });\n    },\n    function (e) {\n      let { swiper: t, extendParams: s, emit: a, once: i } = e;\n      s({\n        freeMode: {\n          enabled: !1,\n          momentum: !0,\n          momentumRatio: 1,\n          momentumBounce: !0,\n          momentumBounceRatio: 1,\n          momentumVelocityRatio: 1,\n          sticky: !1,\n          minimumVelocity: 0.02,\n        },\n      }),\n        Object.assign(t, {\n          freeMode: {\n            onTouchStart: function () {\n              const e = t.getTranslate();\n              t.setTranslate(e),\n                t.setTransition(0),\n                (t.touchEventsData.velocities.length = 0),\n                t.freeMode.onTouchEnd({\n                  currentPos: t.rtl ? t.translate : -t.translate,\n                });\n            },\n            onTouchMove: function () {\n              const { touchEventsData: e, touches: s } = t;\n              0 === e.velocities.length &&\n                e.velocities.push({\n                  position: s[t.isHorizontal() ? \"startX\" : \"startY\"],\n                  time: e.touchStartTime,\n                }),\n                e.velocities.push({\n                  position: s[t.isHorizontal() ? \"currentX\" : \"currentY\"],\n                  time: u(),\n                });\n            },\n            onTouchEnd: function (e) {\n              let { currentPos: s } = e;\n              const {\n                  params: r,\n                  $wrapperEl: n,\n                  rtlTranslate: l,\n                  snapGrid: o,\n                  touchEventsData: d,\n                } = t,\n                c = u() - d.touchStartTime;\n              if (s < -t.minTranslate()) t.slideTo(t.activeIndex);\n              else if (s > -t.maxTranslate())\n                t.slides.length < o.length\n                  ? t.slideTo(o.length - 1)\n                  : t.slideTo(t.slides.length - 1);\n              else {\n                if (r.freeMode.momentum) {\n                  if (d.velocities.length > 1) {\n                    const e = d.velocities.pop(),\n                      s = d.velocities.pop(),\n                      a = e.position - s.position,\n                      i = e.time - s.time;\n                    (t.velocity = a / i),\n                      (t.velocity /= 2),\n                      Math.abs(t.velocity) < r.freeMode.minimumVelocity &&\n                        (t.velocity = 0),\n                      (i > 150 || u() - e.time > 300) && (t.velocity = 0);\n                  } else t.velocity = 0;\n                  (t.velocity *= r.freeMode.momentumVelocityRatio),\n                    (d.velocities.length = 0);\n                  let e = 1e3 * r.freeMode.momentumRatio;\n                  const s = t.velocity * e;\n                  let c = t.translate + s;\n                  l && (c = -c);\n                  let p,\n                    h = !1;\n                  const m =\n                    20 * Math.abs(t.velocity) * r.freeMode.momentumBounceRatio;\n                  let f;\n                  if (c < t.maxTranslate())\n                    r.freeMode.momentumBounce\n                      ? (c + t.maxTranslate() < -m &&\n                          (c = t.maxTranslate() - m),\n                        (p = t.maxTranslate()),\n                        (h = !0),\n                        (d.allowMomentumBounce = !0))\n                      : (c = t.maxTranslate()),\n                      r.loop && r.centeredSlides && (f = !0);\n                  else if (c > t.minTranslate())\n                    r.freeMode.momentumBounce\n                      ? (c - t.minTranslate() > m && (c = t.minTranslate() + m),\n                        (p = t.minTranslate()),\n                        (h = !0),\n                        (d.allowMomentumBounce = !0))\n                      : (c = t.minTranslate()),\n                      r.loop && r.centeredSlides && (f = !0);\n                  else if (r.freeMode.sticky) {\n                    let e;\n                    for (let t = 0; t < o.length; t += 1)\n                      if (o[t] > -c) {\n                        e = t;\n                        break;\n                      }\n                    (c =\n                      Math.abs(o[e] - c) < Math.abs(o[e - 1] - c) ||\n                      \"next\" === t.swipeDirection\n                        ? o[e]\n                        : o[e - 1]),\n                      (c = -c);\n                  }\n                  if (\n                    (f &&\n                      i(\"transitionEnd\", () => {\n                        t.loopFix();\n                      }),\n                    0 !== t.velocity)\n                  ) {\n                    if (\n                      ((e = l\n                        ? Math.abs((-c - t.translate) / t.velocity)\n                        : Math.abs((c - t.translate) / t.velocity)),\n                      r.freeMode.sticky)\n                    ) {\n                      const s = Math.abs((l ? -c : c) - t.translate),\n                        a = t.slidesSizesGrid[t.activeIndex];\n                      e =\n                        s < a\n                          ? r.speed\n                          : s < 2 * a\n                          ? 1.5 * r.speed\n                          : 2.5 * r.speed;\n                    }\n                  } else if (r.freeMode.sticky) return void t.slideToClosest();\n                  r.freeMode.momentumBounce && h\n                    ? (t.updateProgress(p),\n                      t.setTransition(e),\n                      t.setTranslate(c),\n                      t.transitionStart(!0, t.swipeDirection),\n                      (t.animating = !0),\n                      n.transitionEnd(() => {\n                        t &&\n                          !t.destroyed &&\n                          d.allowMomentumBounce &&\n                          (a(\"momentumBounce\"),\n                          t.setTransition(r.speed),\n                          setTimeout(() => {\n                            t.setTranslate(p),\n                              n.transitionEnd(() => {\n                                t && !t.destroyed && t.transitionEnd();\n                              });\n                          }, 0));\n                      }))\n                    : t.velocity\n                    ? (a(\"_freeModeNoMomentumRelease\"),\n                      t.updateProgress(c),\n                      t.setTransition(e),\n                      t.setTranslate(c),\n                      t.transitionStart(!0, t.swipeDirection),\n                      t.animating ||\n                        ((t.animating = !0),\n                        n.transitionEnd(() => {\n                          t && !t.destroyed && t.transitionEnd();\n                        })))\n                    : t.updateProgress(c),\n                    t.updateActiveIndex(),\n                    t.updateSlidesClasses();\n                } else {\n                  if (r.freeMode.sticky) return void t.slideToClosest();\n                  r.freeMode && a(\"_freeModeNoMomentumRelease\");\n                }\n                (!r.freeMode.momentum || c >= r.longSwipesMs) &&\n                  (t.updateProgress(),\n                  t.updateActiveIndex(),\n                  t.updateSlidesClasses());\n              }\n            },\n          },\n        });\n    },\n    function (e) {\n      let t,\n        s,\n        a,\n        { swiper: i, extendParams: r } = e;\n      r({ grid: { rows: 1, fill: \"column\" } }),\n        (i.grid = {\n          initSlides: (e) => {\n            const { slidesPerView: r } = i.params,\n              { rows: n, fill: l } = i.params.grid;\n            (s = t / n),\n              (a = Math.floor(e / n)),\n              (t = Math.floor(e / n) === e / n ? e : Math.ceil(e / n) * n),\n              \"auto\" !== r && \"row\" === l && (t = Math.max(t, r * n));\n          },\n          updateSlide: (e, r, n, l) => {\n            const { slidesPerGroup: o, spaceBetween: d } = i.params,\n              { rows: c, fill: p } = i.params.grid;\n            let u, h, m;\n            if (\"row\" === p && o > 1) {\n              const s = Math.floor(e / (o * c)),\n                a = e - c * o * s,\n                i = 0 === s ? o : Math.min(Math.ceil((n - s * c * o) / c), o);\n              (m = Math.floor(a / i)),\n                (h = a - m * i + s * o),\n                (u = h + (m * t) / c),\n                r.css({ \"-webkit-order\": u, order: u });\n            } else\n              \"column\" === p\n                ? ((h = Math.floor(e / c)),\n                  (m = e - h * c),\n                  (h > a || (h === a && m === c - 1)) &&\n                    ((m += 1), m >= c && ((m = 0), (h += 1))))\n                : ((m = Math.floor(e / s)), (h = e - m * s));\n            r.css(l(\"margin-top\"), 0 !== m ? d && `${d}px` : \"\");\n          },\n          updateWrapperSize: (e, s, a) => {\n            const {\n                spaceBetween: r,\n                centeredSlides: n,\n                roundLengths: l,\n              } = i.params,\n              { rows: o } = i.params.grid;\n            if (\n              ((i.virtualSize = (e + r) * t),\n              (i.virtualSize = Math.ceil(i.virtualSize / o) - r),\n              i.$wrapperEl.css({ [a(\"width\")]: `${i.virtualSize + r}px` }),\n              n)\n            ) {\n              s.splice(0, s.length);\n              const e = [];\n              for (let t = 0; t < s.length; t += 1) {\n                let a = s[t];\n                l && (a = Math.floor(a)),\n                  s[t] < i.virtualSize + s[0] && e.push(a);\n              }\n              s.push(...e);\n            }\n          },\n        });\n    },\n    function (e) {\n      let { swiper: t } = e;\n      Object.assign(t, {\n        appendSlide: K.bind(t),\n        prependSlide: Z.bind(t),\n        addSlide: J.bind(t),\n        removeSlide: Q.bind(t),\n        removeAllSlides: ee.bind(t),\n      });\n    },\n    function (e) {\n      let { swiper: t, extendParams: s, on: a } = e;\n      s({ fadeEffect: { crossFade: !1, transformEl: null } }),\n        te({\n          effect: \"fade\",\n          swiper: t,\n          on: a,\n          setTranslate: () => {\n            const { slides: e } = t,\n              s = t.params.fadeEffect;\n            for (let a = 0; a < e.length; a += 1) {\n              const e = t.slides.eq(a);\n              let i = -e[0].swiperSlideOffset;\n              t.params.virtualTranslate || (i -= t.translate);\n              let r = 0;\n              t.isHorizontal() || ((r = i), (i = 0));\n              const n = t.params.fadeEffect.crossFade\n                ? Math.max(1 - Math.abs(e[0].progress), 0)\n                : 1 + Math.min(Math.max(e[0].progress, -1), 0);\n              se(s, e)\n                .css({ opacity: n })\n                .transform(`translate3d(${i}px, ${r}px, 0px)`);\n            }\n          },\n          setTransition: (e) => {\n            const { transformEl: s } = t.params.fadeEffect;\n            (s ? t.slides.find(s) : t.slides).transition(e),\n              ae({ swiper: t, duration: e, transformEl: s, allSlides: !0 });\n          },\n          overwriteParams: () => ({\n            slidesPerView: 1,\n            slidesPerGroup: 1,\n            watchSlidesProgress: !0,\n            spaceBetween: 0,\n            virtualTranslate: !t.params.cssMode,\n          }),\n        });\n    },\n    function (e) {\n      let { swiper: t, extendParams: s, on: a } = e;\n      s({\n        cubeEffect: {\n          slideShadows: !0,\n          shadow: !0,\n          shadowOffset: 20,\n          shadowScale: 0.94,\n        },\n      }),\n        te({\n          effect: \"cube\",\n          swiper: t,\n          on: a,\n          setTranslate: () => {\n            const {\n                $el: e,\n                $wrapperEl: s,\n                slides: a,\n                width: i,\n                height: r,\n                rtlTranslate: n,\n                size: l,\n                browser: o,\n              } = t,\n              c = t.params.cubeEffect,\n              p = t.isHorizontal(),\n              u = t.virtual && t.params.virtual.enabled;\n            let h,\n              m = 0;\n            c.shadow &&\n              (p\n                ? ((h = s.find(\".swiper-cube-shadow\")),\n                  0 === h.length &&\n                    ((h = d('<div class=\"swiper-cube-shadow\"></div>')),\n                    s.append(h)),\n                  h.css({ height: `${i}px` }))\n                : ((h = e.find(\".swiper-cube-shadow\")),\n                  0 === h.length &&\n                    ((h = d('<div class=\"swiper-cube-shadow\"></div>')),\n                    e.append(h))));\n            for (let e = 0; e < a.length; e += 1) {\n              const t = a.eq(e);\n              let s = e;\n              u && (s = parseInt(t.attr(\"data-swiper-slide-index\"), 10));\n              let i = 90 * s,\n                r = Math.floor(i / 360);\n              n && ((i = -i), (r = Math.floor(-i / 360)));\n              const o = Math.max(Math.min(t[0].progress, 1), -1);\n              let h = 0,\n                f = 0,\n                g = 0;\n              s % 4 == 0\n                ? ((h = 4 * -r * l), (g = 0))\n                : (s - 1) % 4 == 0\n                ? ((h = 0), (g = 4 * -r * l))\n                : (s - 2) % 4 == 0\n                ? ((h = l + 4 * r * l), (g = l))\n                : (s - 3) % 4 == 0 && ((h = -l), (g = 3 * l + 4 * l * r)),\n                n && (h = -h),\n                p || ((f = h), (h = 0));\n              const v = `rotateX(${p ? 0 : -i}deg) rotateY(${\n                p ? i : 0\n              }deg) translate3d(${h}px, ${f}px, ${g}px)`;\n              if (\n                (o <= 1 &&\n                  o > -1 &&\n                  ((m = 90 * s + 90 * o), n && (m = 90 * -s - 90 * o)),\n                t.transform(v),\n                c.slideShadows)\n              ) {\n                let e = p\n                    ? t.find(\".swiper-slide-shadow-left\")\n                    : t.find(\".swiper-slide-shadow-top\"),\n                  s = p\n                    ? t.find(\".swiper-slide-shadow-right\")\n                    : t.find(\".swiper-slide-shadow-bottom\");\n                0 === e.length &&\n                  ((e = d(\n                    `<div class=\"swiper-slide-shadow-${\n                      p ? \"left\" : \"top\"\n                    }\"></div>`\n                  )),\n                  t.append(e)),\n                  0 === s.length &&\n                    ((s = d(\n                      `<div class=\"swiper-slide-shadow-${\n                        p ? \"right\" : \"bottom\"\n                      }\"></div>`\n                    )),\n                    t.append(s)),\n                  e.length && (e[0].style.opacity = Math.max(-o, 0)),\n                  s.length && (s[0].style.opacity = Math.max(o, 0));\n              }\n            }\n            if (\n              (s.css({\n                \"-webkit-transform-origin\": `50% 50% -${l / 2}px`,\n                \"transform-origin\": `50% 50% -${l / 2}px`,\n              }),\n              c.shadow)\n            )\n              if (p)\n                h.transform(\n                  `translate3d(0px, ${i / 2 + c.shadowOffset}px, ${\n                    -i / 2\n                  }px) rotateX(90deg) rotateZ(0deg) scale(${c.shadowScale})`\n                );\n              else {\n                const e = Math.abs(m) - 90 * Math.floor(Math.abs(m) / 90),\n                  t =\n                    1.5 -\n                    (Math.sin((2 * e * Math.PI) / 360) / 2 +\n                      Math.cos((2 * e * Math.PI) / 360) / 2),\n                  s = c.shadowScale,\n                  a = c.shadowScale / t,\n                  i = c.shadowOffset;\n                h.transform(\n                  `scale3d(${s}, 1, ${a}) translate3d(0px, ${r / 2 + i}px, ${\n                    -r / 2 / a\n                  }px) rotateX(-90deg)`\n                );\n              }\n            const f = o.isSafari || o.isWebView ? -l / 2 : 0;\n            s.transform(\n              `translate3d(0px,0,${f}px) rotateX(${\n                t.isHorizontal() ? 0 : m\n              }deg) rotateY(${t.isHorizontal() ? -m : 0}deg)`\n            );\n          },\n          setTransition: (e) => {\n            const { $el: s, slides: a } = t;\n            a\n              .transition(e)\n              .find(\n                \".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\"\n              )\n              .transition(e),\n              t.params.cubeEffect.shadow &&\n                !t.isHorizontal() &&\n                s.find(\".swiper-cube-shadow\").transition(e);\n          },\n          perspective: () => !0,\n          overwriteParams: () => ({\n            slidesPerView: 1,\n            slidesPerGroup: 1,\n            watchSlidesProgress: !0,\n            resistanceRatio: 0,\n            spaceBetween: 0,\n            centeredSlides: !1,\n            virtualTranslate: !0,\n          }),\n        });\n    },\n    function (e) {\n      let { swiper: t, extendParams: s, on: a } = e;\n      s({\n        flipEffect: { slideShadows: !0, limitRotation: !0, transformEl: null },\n      }),\n        te({\n          effect: \"flip\",\n          swiper: t,\n          on: a,\n          setTranslate: () => {\n            const { slides: e, rtlTranslate: s } = t,\n              a = t.params.flipEffect;\n            for (let i = 0; i < e.length; i += 1) {\n              const r = e.eq(i);\n              let n = r[0].progress;\n              t.params.flipEffect.limitRotation &&\n                (n = Math.max(Math.min(r[0].progress, 1), -1));\n              const l = r[0].swiperSlideOffset;\n              let o = -180 * n,\n                d = 0,\n                c = t.params.cssMode ? -l - t.translate : -l,\n                p = 0;\n              if (\n                (t.isHorizontal()\n                  ? s && (o = -o)\n                  : ((p = c), (c = 0), (d = -o), (o = 0)),\n                (r[0].style.zIndex = -Math.abs(Math.round(n)) + e.length),\n                a.slideShadows)\n              ) {\n                let e = t.isHorizontal()\n                    ? r.find(\".swiper-slide-shadow-left\")\n                    : r.find(\".swiper-slide-shadow-top\"),\n                  s = t.isHorizontal()\n                    ? r.find(\".swiper-slide-shadow-right\")\n                    : r.find(\".swiper-slide-shadow-bottom\");\n                0 === e.length &&\n                  (e = ie(a, r, t.isHorizontal() ? \"left\" : \"top\")),\n                  0 === s.length &&\n                    (s = ie(a, r, t.isHorizontal() ? \"right\" : \"bottom\")),\n                  e.length && (e[0].style.opacity = Math.max(-n, 0)),\n                  s.length && (s[0].style.opacity = Math.max(n, 0));\n              }\n              const u = `translate3d(${c}px, ${p}px, 0px) rotateX(${d}deg) rotateY(${o}deg)`;\n              se(a, r).transform(u);\n            }\n          },\n          setTransition: (e) => {\n            const { transformEl: s } = t.params.flipEffect;\n            (s ? t.slides.find(s) : t.slides)\n              .transition(e)\n              .find(\n                \".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\"\n              )\n              .transition(e),\n              ae({ swiper: t, duration: e, transformEl: s });\n          },\n          perspective: () => !0,\n          overwriteParams: () => ({\n            slidesPerView: 1,\n            slidesPerGroup: 1,\n            watchSlidesProgress: !0,\n            spaceBetween: 0,\n            virtualTranslate: !t.params.cssMode,\n          }),\n        });\n    },\n    function (e) {\n      let { swiper: t, extendParams: s, on: a } = e;\n      s({\n        coverflowEffect: {\n          rotate: 50,\n          stretch: 0,\n          depth: 100,\n          scale: 1,\n          modifier: 1,\n          slideShadows: !0,\n          transformEl: null,\n        },\n      }),\n        te({\n          effect: \"coverflow\",\n          swiper: t,\n          on: a,\n          setTranslate: () => {\n            const { width: e, height: s, slides: a, slidesSizesGrid: i } = t,\n              r = t.params.coverflowEffect,\n              n = t.isHorizontal(),\n              l = t.translate,\n              o = n ? e / 2 - l : s / 2 - l,\n              d = n ? r.rotate : -r.rotate,\n              c = r.depth;\n            for (let e = 0, t = a.length; e < t; e += 1) {\n              const t = a.eq(e),\n                s = i[e],\n                l = (o - t[0].swiperSlideOffset - s / 2) / s,\n                p =\n                  \"function\" == typeof r.modifier\n                    ? r.modifier(l)\n                    : l * r.modifier;\n              let u = n ? d * p : 0,\n                h = n ? 0 : d * p,\n                m = -c * Math.abs(p),\n                f = r.stretch;\n              \"string\" == typeof f &&\n                -1 !== f.indexOf(\"%\") &&\n                (f = (parseFloat(r.stretch) / 100) * s);\n              let g = n ? 0 : f * p,\n                v = n ? f * p : 0,\n                w = 1 - (1 - r.scale) * Math.abs(p);\n              Math.abs(v) < 0.001 && (v = 0),\n                Math.abs(g) < 0.001 && (g = 0),\n                Math.abs(m) < 0.001 && (m = 0),\n                Math.abs(u) < 0.001 && (u = 0),\n                Math.abs(h) < 0.001 && (h = 0),\n                Math.abs(w) < 0.001 && (w = 0);\n              const b = `translate3d(${v}px,${g}px,${m}px)  rotateX(${h}deg) rotateY(${u}deg) scale(${w})`;\n              if (\n                (se(r, t).transform(b),\n                (t[0].style.zIndex = 1 - Math.abs(Math.round(p))),\n                r.slideShadows)\n              ) {\n                let e = n\n                    ? t.find(\".swiper-slide-shadow-left\")\n                    : t.find(\".swiper-slide-shadow-top\"),\n                  s = n\n                    ? t.find(\".swiper-slide-shadow-right\")\n                    : t.find(\".swiper-slide-shadow-bottom\");\n                0 === e.length && (e = ie(r, t, n ? \"left\" : \"top\")),\n                  0 === s.length && (s = ie(r, t, n ? \"right\" : \"bottom\")),\n                  e.length && (e[0].style.opacity = p > 0 ? p : 0),\n                  s.length && (s[0].style.opacity = -p > 0 ? -p : 0);\n              }\n            }\n          },\n          setTransition: (e) => {\n            const { transformEl: s } = t.params.coverflowEffect;\n            (s ? t.slides.find(s) : t.slides)\n              .transition(e)\n              .find(\n                \".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\"\n              )\n              .transition(e);\n          },\n          perspective: () => !0,\n          overwriteParams: () => ({ watchSlidesProgress: !0 }),\n        });\n    },\n    function (e) {\n      let { swiper: t, extendParams: s, on: a } = e;\n      s({\n        creativeEffect: {\n          transformEl: null,\n          limitProgress: 1,\n          shadowPerProgress: !1,\n          progressMultiplier: 1,\n          perspective: !0,\n          prev: {\n            translate: [0, 0, 0],\n            rotate: [0, 0, 0],\n            opacity: 1,\n            scale: 1,\n          },\n          next: {\n            translate: [0, 0, 0],\n            rotate: [0, 0, 0],\n            opacity: 1,\n            scale: 1,\n          },\n        },\n      });\n      const i = (e) => (\"string\" == typeof e ? e : `${e}px`);\n      te({\n        effect: \"creative\",\n        swiper: t,\n        on: a,\n        setTranslate: () => {\n          const { slides: e, $wrapperEl: s, slidesSizesGrid: a } = t,\n            r = t.params.creativeEffect,\n            { progressMultiplier: n } = r,\n            l = t.params.centeredSlides;\n          if (l) {\n            const e = a[0] / 2 - t.params.slidesOffsetBefore || 0;\n            s.transform(`translateX(calc(50% - ${e}px))`);\n          }\n          for (let s = 0; s < e.length; s += 1) {\n            const a = e.eq(s),\n              o = a[0].progress,\n              d = Math.min(\n                Math.max(a[0].progress, -r.limitProgress),\n                r.limitProgress\n              );\n            let c = d;\n            l ||\n              (c = Math.min(\n                Math.max(a[0].originalProgress, -r.limitProgress),\n                r.limitProgress\n              ));\n            const p = a[0].swiperSlideOffset,\n              u = [t.params.cssMode ? -p - t.translate : -p, 0, 0],\n              h = [0, 0, 0];\n            let m = !1;\n            t.isHorizontal() || ((u[1] = u[0]), (u[0] = 0));\n            let f = {\n              translate: [0, 0, 0],\n              rotate: [0, 0, 0],\n              scale: 1,\n              opacity: 1,\n            };\n            d < 0\n              ? ((f = r.next), (m = !0))\n              : d > 0 && ((f = r.prev), (m = !0)),\n              u.forEach((e, t) => {\n                u[t] = `calc(${e}px + (${i(f.translate[t])} * ${Math.abs(\n                  d * n\n                )}))`;\n              }),\n              h.forEach((e, t) => {\n                h[t] = f.rotate[t] * Math.abs(d * n);\n              }),\n              (a[0].style.zIndex = -Math.abs(Math.round(o)) + e.length);\n            const g = u.join(\", \"),\n              v = `rotateX(${h[0]}deg) rotateY(${h[1]}deg) rotateZ(${h[2]}deg)`,\n              w =\n                c < 0\n                  ? `scale(${1 + (1 - f.scale) * c * n})`\n                  : `scale(${1 - (1 - f.scale) * c * n})`,\n              b =\n                c < 0\n                  ? 1 + (1 - f.opacity) * c * n\n                  : 1 - (1 - f.opacity) * c * n,\n              x = `translate3d(${g}) ${v} ${w}`;\n            if ((m && f.shadow) || !m) {\n              let e = a.children(\".swiper-slide-shadow\");\n              if ((0 === e.length && f.shadow && (e = ie(r, a)), e.length)) {\n                const t = r.shadowPerProgress ? d * (1 / r.limitProgress) : d;\n                e[0].style.opacity = Math.min(Math.max(Math.abs(t), 0), 1);\n              }\n            }\n            const y = se(r, a);\n            y.transform(x).css({ opacity: b }),\n              f.origin && y.css(\"transform-origin\", f.origin);\n          }\n        },\n        setTransition: (e) => {\n          const { transformEl: s } = t.params.creativeEffect;\n          (s ? t.slides.find(s) : t.slides)\n            .transition(e)\n            .find(\".swiper-slide-shadow\")\n            .transition(e),\n            ae({ swiper: t, duration: e, transformEl: s, allSlides: !0 });\n        },\n        perspective: () => t.params.creativeEffect.perspective,\n        overwriteParams: () => ({\n          watchSlidesProgress: !0,\n          virtualTranslate: !t.params.cssMode,\n        }),\n      });\n    },\n    function (e) {\n      let { swiper: t, extendParams: s, on: a } = e;\n      s({ cardsEffect: { slideShadows: !0, transformEl: null } }),\n        te({\n          effect: \"cards\",\n          swiper: t,\n          on: a,\n          setTranslate: () => {\n            const { slides: e, activeIndex: s } = t,\n              a = t.params.cardsEffect,\n              { startTranslate: i, isTouched: r } = t.touchEventsData,\n              n = t.translate;\n            for (let l = 0; l < e.length; l += 1) {\n              const o = e.eq(l),\n                d = o[0].progress,\n                c = Math.min(Math.max(d, -4), 4);\n              let p = o[0].swiperSlideOffset;\n              t.params.centeredSlides &&\n                !t.params.cssMode &&\n                t.$wrapperEl.transform(`translateX(${t.minTranslate()}px)`),\n                t.params.centeredSlides &&\n                  t.params.cssMode &&\n                  (p -= e[0].swiperSlideOffset);\n              let u = t.params.cssMode ? -p - t.translate : -p,\n                h = 0;\n              const m = -100 * Math.abs(c);\n              let f = 1,\n                g = -2 * c,\n                v = 8 - 0.75 * Math.abs(c);\n              const w =\n                  t.virtual && t.params.virtual.enabled\n                    ? t.virtual.from + l\n                    : l,\n                b =\n                  (w === s || w === s - 1) &&\n                  c > 0 &&\n                  c < 1 &&\n                  (r || t.params.cssMode) &&\n                  n < i,\n                x =\n                  (w === s || w === s + 1) &&\n                  c < 0 &&\n                  c > -1 &&\n                  (r || t.params.cssMode) &&\n                  n > i;\n              if (b || x) {\n                const e = (1 - Math.abs((Math.abs(c) - 0.5) / 0.5)) ** 0.5;\n                (g += -28 * c * e),\n                  (f += -0.5 * e),\n                  (v += 96 * e),\n                  (h = -25 * e * Math.abs(c) + \"%\");\n              }\n              if (\n                ((u =\n                  c < 0\n                    ? `calc(${u}px + (${v * Math.abs(c)}%))`\n                    : c > 0\n                    ? `calc(${u}px + (-${v * Math.abs(c)}%))`\n                    : `${u}px`),\n                !t.isHorizontal())\n              ) {\n                const e = h;\n                (h = u), (u = e);\n              }\n              const y = `\\n        translate3d(${u}, ${h}, ${m}px)\\n        rotateZ(${g}deg)\\n        scale(${\n                c < 0 ? \"\" + (1 + (1 - f) * c) : \"\" + (1 - (1 - f) * c)\n              })\\n      `;\n              if (a.slideShadows) {\n                let e = o.find(\".swiper-slide-shadow\");\n                0 === e.length && (e = ie(a, o)),\n                  e.length &&\n                    (e[0].style.opacity = Math.min(\n                      Math.max((Math.abs(c) - 0.5) / 0.5, 0),\n                      1\n                    ));\n              }\n              o[0].style.zIndex = -Math.abs(Math.round(d)) + e.length;\n              se(a, o).transform(y);\n            }\n          },\n          setTransition: (e) => {\n            const { transformEl: s } = t.params.cardsEffect;\n            (s ? t.slides.find(s) : t.slides)\n              .transition(e)\n              .find(\".swiper-slide-shadow\")\n              .transition(e),\n              ae({ swiper: t, duration: e, transformEl: s });\n          },\n          perspective: () => !0,\n          overwriteParams: () => ({\n            watchSlidesProgress: !0,\n            virtualTranslate: !t.params.cssMode,\n          }),\n        });\n    },\n  ];\n  return V.use(re), V;\n});\n//# sourceMappingURL=swiper-bundle.min.js.map\n\n\n//# sourceURL=webpack://brainscloud/./src/assets/js/swiper.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_require__("./src/assets/js/app.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/assets/js/swiper.js");
/******/ 	
/******/ })()
;